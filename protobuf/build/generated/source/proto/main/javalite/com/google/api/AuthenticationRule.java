// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/auth.proto

package com.google.api;

/**
 * <pre>
 * Authentication rules for the service.
 * By default, if a method has any authentication requirements, every request
 * must include a valid credential matching one of the requirements.
 * It's an error to include more than one kind of credential in a single
 * request.
 * If a method doesn't have any auth requirements, request credentials will be
 * ignored.
 * </pre>
 *
 * Protobuf type {@code google.api.AuthenticationRule}
 */
public  final class AuthenticationRule extends
    com.google.protobuf.GeneratedMessageLite<
        AuthenticationRule, AuthenticationRule.Builder> implements
    // @@protoc_insertion_point(message_implements:google.api.AuthenticationRule)
    AuthenticationRuleOrBuilder {
  private AuthenticationRule() {
    selector_ = "";
    requirements_ = emptyProtobufList();
  }
  private int bitField0_;
  public static final int SELECTOR_FIELD_NUMBER = 1;
  private java.lang.String selector_;
  /**
   * <pre>
   * Selects the methods to which this rule applies.
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
   * </pre>
   *
   * <code>optional string selector = 1;</code>
   */
  public java.lang.String getSelector() {
    return selector_;
  }
  /**
   * <pre>
   * Selects the methods to which this rule applies.
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
   * </pre>
   *
   * <code>optional string selector = 1;</code>
   */
  public com.google.protobuf.ByteString
      getSelectorBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(selector_);
  }
  /**
   * <pre>
   * Selects the methods to which this rule applies.
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
   * </pre>
   *
   * <code>optional string selector = 1;</code>
   */
  private void setSelector(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    selector_ = value;
  }
  /**
   * <pre>
   * Selects the methods to which this rule applies.
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
   * </pre>
   *
   * <code>optional string selector = 1;</code>
   */
  private void clearSelector() {
    
    selector_ = getDefaultInstance().getSelector();
  }
  /**
   * <pre>
   * Selects the methods to which this rule applies.
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
   * </pre>
   *
   * <code>optional string selector = 1;</code>
   */
  private void setSelectorBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    selector_ = value.toStringUtf8();
  }

  public static final int OAUTH_FIELD_NUMBER = 2;
  private com.google.api.OAuthRequirements oauth_;
  /**
   * <pre>
   * The requirements for OAuth credentials.
   * </pre>
   *
   * <code>optional .google.api.OAuthRequirements oauth = 2;</code>
   */
  public boolean hasOauth() {
    return oauth_ != null;
  }
  /**
   * <pre>
   * The requirements for OAuth credentials.
   * </pre>
   *
   * <code>optional .google.api.OAuthRequirements oauth = 2;</code>
   */
  public com.google.api.OAuthRequirements getOauth() {
    return oauth_ == null ? com.google.api.OAuthRequirements.getDefaultInstance() : oauth_;
  }
  /**
   * <pre>
   * The requirements for OAuth credentials.
   * </pre>
   *
   * <code>optional .google.api.OAuthRequirements oauth = 2;</code>
   */
  private void setOauth(com.google.api.OAuthRequirements value) {
    if (value == null) {
      throw new NullPointerException();
    }
    oauth_ = value;
    
    }
  /**
   * <pre>
   * The requirements for OAuth credentials.
   * </pre>
   *
   * <code>optional .google.api.OAuthRequirements oauth = 2;</code>
   */
  private void setOauth(
      com.google.api.OAuthRequirements.Builder builderForValue) {
    oauth_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * The requirements for OAuth credentials.
   * </pre>
   *
   * <code>optional .google.api.OAuthRequirements oauth = 2;</code>
   */
  private void mergeOauth(com.google.api.OAuthRequirements value) {
    if (oauth_ != null &&
        oauth_ != com.google.api.OAuthRequirements.getDefaultInstance()) {
      oauth_ =
        com.google.api.OAuthRequirements.newBuilder(oauth_).mergeFrom(value).buildPartial();
    } else {
      oauth_ = value;
    }
    
  }
  /**
   * <pre>
   * The requirements for OAuth credentials.
   * </pre>
   *
   * <code>optional .google.api.OAuthRequirements oauth = 2;</code>
   */
  private void clearOauth() {  oauth_ = null;
    
  }

  public static final int ALLOW_WITHOUT_CREDENTIAL_FIELD_NUMBER = 5;
  private boolean allowWithoutCredential_;
  /**
   * <pre>
   * Whether to allow requests without a credential. The credential can be
   * an OAuth token, Google cookies (first-party auth) or EndUserCreds.
   * For requests without credentials, if the service control environment is
   * specified, each incoming request **must** be associated with a service
   * consumer. This can be done by passing an API key that belongs to a consumer
   * project.
   * </pre>
   *
   * <code>optional bool allow_without_credential = 5;</code>
   */
  public boolean getAllowWithoutCredential() {
    return allowWithoutCredential_;
  }
  /**
   * <pre>
   * Whether to allow requests without a credential. The credential can be
   * an OAuth token, Google cookies (first-party auth) or EndUserCreds.
   * For requests without credentials, if the service control environment is
   * specified, each incoming request **must** be associated with a service
   * consumer. This can be done by passing an API key that belongs to a consumer
   * project.
   * </pre>
   *
   * <code>optional bool allow_without_credential = 5;</code>
   */
  private void setAllowWithoutCredential(boolean value) {
    
    allowWithoutCredential_ = value;
  }
  /**
   * <pre>
   * Whether to allow requests without a credential. The credential can be
   * an OAuth token, Google cookies (first-party auth) or EndUserCreds.
   * For requests without credentials, if the service control environment is
   * specified, each incoming request **must** be associated with a service
   * consumer. This can be done by passing an API key that belongs to a consumer
   * project.
   * </pre>
   *
   * <code>optional bool allow_without_credential = 5;</code>
   */
  private void clearAllowWithoutCredential() {
    
    allowWithoutCredential_ = false;
  }

  public static final int REQUIREMENTS_FIELD_NUMBER = 7;
  private com.google.protobuf.Internal.ProtobufList<com.google.api.AuthRequirement> requirements_;
  /**
   * <pre>
   * Requirements for additional authentication providers.
   * </pre>
   *
   * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
   */
  public java.util.List<com.google.api.AuthRequirement> getRequirementsList() {
    return requirements_;
  }
  /**
   * <pre>
   * Requirements for additional authentication providers.
   * </pre>
   *
   * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
   */
  public java.util.List<? extends com.google.api.AuthRequirementOrBuilder> 
      getRequirementsOrBuilderList() {
    return requirements_;
  }
  /**
   * <pre>
   * Requirements for additional authentication providers.
   * </pre>
   *
   * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
   */
  public int getRequirementsCount() {
    return requirements_.size();
  }
  /**
   * <pre>
   * Requirements for additional authentication providers.
   * </pre>
   *
   * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
   */
  public com.google.api.AuthRequirement getRequirements(int index) {
    return requirements_.get(index);
  }
  /**
   * <pre>
   * Requirements for additional authentication providers.
   * </pre>
   *
   * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
   */
  public com.google.api.AuthRequirementOrBuilder getRequirementsOrBuilder(
      int index) {
    return requirements_.get(index);
  }
  private void ensureRequirementsIsMutable() {
    if (!requirements_.isModifiable()) {
      requirements_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(requirements_);
     }
  }

  /**
   * <pre>
   * Requirements for additional authentication providers.
   * </pre>
   *
   * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
   */
  private void setRequirements(
      int index, com.google.api.AuthRequirement value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureRequirementsIsMutable();
    requirements_.set(index, value);
  }
  /**
   * <pre>
   * Requirements for additional authentication providers.
   * </pre>
   *
   * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
   */
  private void setRequirements(
      int index, com.google.api.AuthRequirement.Builder builderForValue) {
    ensureRequirementsIsMutable();
    requirements_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * Requirements for additional authentication providers.
   * </pre>
   *
   * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
   */
  private void addRequirements(com.google.api.AuthRequirement value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureRequirementsIsMutable();
    requirements_.add(value);
  }
  /**
   * <pre>
   * Requirements for additional authentication providers.
   * </pre>
   *
   * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
   */
  private void addRequirements(
      int index, com.google.api.AuthRequirement value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureRequirementsIsMutable();
    requirements_.add(index, value);
  }
  /**
   * <pre>
   * Requirements for additional authentication providers.
   * </pre>
   *
   * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
   */
  private void addRequirements(
      com.google.api.AuthRequirement.Builder builderForValue) {
    ensureRequirementsIsMutable();
    requirements_.add(builderForValue.build());
  }
  /**
   * <pre>
   * Requirements for additional authentication providers.
   * </pre>
   *
   * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
   */
  private void addRequirements(
      int index, com.google.api.AuthRequirement.Builder builderForValue) {
    ensureRequirementsIsMutable();
    requirements_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * Requirements for additional authentication providers.
   * </pre>
   *
   * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
   */
  private void addAllRequirements(
      java.lang.Iterable<? extends com.google.api.AuthRequirement> values) {
    ensureRequirementsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, requirements_);
  }
  /**
   * <pre>
   * Requirements for additional authentication providers.
   * </pre>
   *
   * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
   */
  private void clearRequirements() {
    requirements_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Requirements for additional authentication providers.
   * </pre>
   *
   * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
   */
  private void removeRequirements(int index) {
    ensureRequirementsIsMutable();
    requirements_.remove(index);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!selector_.isEmpty()) {
      output.writeString(1, getSelector());
    }
    if (oauth_ != null) {
      output.writeMessage(2, getOauth());
    }
    if (allowWithoutCredential_ != false) {
      output.writeBool(5, allowWithoutCredential_);
    }
    for (int i = 0; i < requirements_.size(); i++) {
      output.writeMessage(7, requirements_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (!selector_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getSelector());
    }
    if (oauth_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getOauth());
    }
    if (allowWithoutCredential_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, allowWithoutCredential_);
    }
    for (int i = 0; i < requirements_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, requirements_.get(i));
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.google.api.AuthenticationRule parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.AuthenticationRule parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.AuthenticationRule parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.AuthenticationRule parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.AuthenticationRule parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.AuthenticationRule parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.AuthenticationRule parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.api.AuthenticationRule parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.AuthenticationRule parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.AuthenticationRule parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.api.AuthenticationRule prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Authentication rules for the service.
   * By default, if a method has any authentication requirements, every request
   * must include a valid credential matching one of the requirements.
   * It's an error to include more than one kind of credential in a single
   * request.
   * If a method doesn't have any auth requirements, request credentials will be
   * ignored.
   * </pre>
   *
   * Protobuf type {@code google.api.AuthenticationRule}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.api.AuthenticationRule, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.api.AuthenticationRule)
      com.google.api.AuthenticationRuleOrBuilder {
    // Construct using com.google.api.AuthenticationRule.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Selects the methods to which this rule applies.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>optional string selector = 1;</code>
     */
    public java.lang.String getSelector() {
      return instance.getSelector();
    }
    /**
     * <pre>
     * Selects the methods to which this rule applies.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>optional string selector = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSelectorBytes() {
      return instance.getSelectorBytes();
    }
    /**
     * <pre>
     * Selects the methods to which this rule applies.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>optional string selector = 1;</code>
     */
    public Builder setSelector(
        java.lang.String value) {
      copyOnWrite();
      instance.setSelector(value);
      return this;
    }
    /**
     * <pre>
     * Selects the methods to which this rule applies.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>optional string selector = 1;</code>
     */
    public Builder clearSelector() {
      copyOnWrite();
      instance.clearSelector();
      return this;
    }
    /**
     * <pre>
     * Selects the methods to which this rule applies.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>optional string selector = 1;</code>
     */
    public Builder setSelectorBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSelectorBytes(value);
      return this;
    }

    /**
     * <pre>
     * The requirements for OAuth credentials.
     * </pre>
     *
     * <code>optional .google.api.OAuthRequirements oauth = 2;</code>
     */
    public boolean hasOauth() {
      return instance.hasOauth();
    }
    /**
     * <pre>
     * The requirements for OAuth credentials.
     * </pre>
     *
     * <code>optional .google.api.OAuthRequirements oauth = 2;</code>
     */
    public com.google.api.OAuthRequirements getOauth() {
      return instance.getOauth();
    }
    /**
     * <pre>
     * The requirements for OAuth credentials.
     * </pre>
     *
     * <code>optional .google.api.OAuthRequirements oauth = 2;</code>
     */
    public Builder setOauth(com.google.api.OAuthRequirements value) {
      copyOnWrite();
      instance.setOauth(value);
      return this;
      }
    /**
     * <pre>
     * The requirements for OAuth credentials.
     * </pre>
     *
     * <code>optional .google.api.OAuthRequirements oauth = 2;</code>
     */
    public Builder setOauth(
        com.google.api.OAuthRequirements.Builder builderForValue) {
      copyOnWrite();
      instance.setOauth(builderForValue);
      return this;
    }
    /**
     * <pre>
     * The requirements for OAuth credentials.
     * </pre>
     *
     * <code>optional .google.api.OAuthRequirements oauth = 2;</code>
     */
    public Builder mergeOauth(com.google.api.OAuthRequirements value) {
      copyOnWrite();
      instance.mergeOauth(value);
      return this;
    }
    /**
     * <pre>
     * The requirements for OAuth credentials.
     * </pre>
     *
     * <code>optional .google.api.OAuthRequirements oauth = 2;</code>
     */
    public Builder clearOauth() {  copyOnWrite();
      instance.clearOauth();
      return this;
    }

    /**
     * <pre>
     * Whether to allow requests without a credential. The credential can be
     * an OAuth token, Google cookies (first-party auth) or EndUserCreds.
     * For requests without credentials, if the service control environment is
     * specified, each incoming request **must** be associated with a service
     * consumer. This can be done by passing an API key that belongs to a consumer
     * project.
     * </pre>
     *
     * <code>optional bool allow_without_credential = 5;</code>
     */
    public boolean getAllowWithoutCredential() {
      return instance.getAllowWithoutCredential();
    }
    /**
     * <pre>
     * Whether to allow requests without a credential. The credential can be
     * an OAuth token, Google cookies (first-party auth) or EndUserCreds.
     * For requests without credentials, if the service control environment is
     * specified, each incoming request **must** be associated with a service
     * consumer. This can be done by passing an API key that belongs to a consumer
     * project.
     * </pre>
     *
     * <code>optional bool allow_without_credential = 5;</code>
     */
    public Builder setAllowWithoutCredential(boolean value) {
      copyOnWrite();
      instance.setAllowWithoutCredential(value);
      return this;
    }
    /**
     * <pre>
     * Whether to allow requests without a credential. The credential can be
     * an OAuth token, Google cookies (first-party auth) or EndUserCreds.
     * For requests without credentials, if the service control environment is
     * specified, each incoming request **must** be associated with a service
     * consumer. This can be done by passing an API key that belongs to a consumer
     * project.
     * </pre>
     *
     * <code>optional bool allow_without_credential = 5;</code>
     */
    public Builder clearAllowWithoutCredential() {
      copyOnWrite();
      instance.clearAllowWithoutCredential();
      return this;
    }

    /**
     * <pre>
     * Requirements for additional authentication providers.
     * </pre>
     *
     * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
     */
    public java.util.List<com.google.api.AuthRequirement> getRequirementsList() {
      return java.util.Collections.unmodifiableList(
          instance.getRequirementsList());
    }
    /**
     * <pre>
     * Requirements for additional authentication providers.
     * </pre>
     *
     * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
     */
    public int getRequirementsCount() {
      return instance.getRequirementsCount();
    }/**
     * <pre>
     * Requirements for additional authentication providers.
     * </pre>
     *
     * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
     */
    public com.google.api.AuthRequirement getRequirements(int index) {
      return instance.getRequirements(index);
    }
    /**
     * <pre>
     * Requirements for additional authentication providers.
     * </pre>
     *
     * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
     */
    public Builder setRequirements(
        int index, com.google.api.AuthRequirement value) {
      copyOnWrite();
      instance.setRequirements(index, value);
      return this;
    }
    /**
     * <pre>
     * Requirements for additional authentication providers.
     * </pre>
     *
     * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
     */
    public Builder setRequirements(
        int index, com.google.api.AuthRequirement.Builder builderForValue) {
      copyOnWrite();
      instance.setRequirements(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Requirements for additional authentication providers.
     * </pre>
     *
     * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
     */
    public Builder addRequirements(com.google.api.AuthRequirement value) {
      copyOnWrite();
      instance.addRequirements(value);
      return this;
    }
    /**
     * <pre>
     * Requirements for additional authentication providers.
     * </pre>
     *
     * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
     */
    public Builder addRequirements(
        int index, com.google.api.AuthRequirement value) {
      copyOnWrite();
      instance.addRequirements(index, value);
      return this;
    }
    /**
     * <pre>
     * Requirements for additional authentication providers.
     * </pre>
     *
     * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
     */
    public Builder addRequirements(
        com.google.api.AuthRequirement.Builder builderForValue) {
      copyOnWrite();
      instance.addRequirements(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Requirements for additional authentication providers.
     * </pre>
     *
     * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
     */
    public Builder addRequirements(
        int index, com.google.api.AuthRequirement.Builder builderForValue) {
      copyOnWrite();
      instance.addRequirements(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Requirements for additional authentication providers.
     * </pre>
     *
     * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
     */
    public Builder addAllRequirements(
        java.lang.Iterable<? extends com.google.api.AuthRequirement> values) {
      copyOnWrite();
      instance.addAllRequirements(values);
      return this;
    }
    /**
     * <pre>
     * Requirements for additional authentication providers.
     * </pre>
     *
     * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
     */
    public Builder clearRequirements() {
      copyOnWrite();
      instance.clearRequirements();
      return this;
    }
    /**
     * <pre>
     * Requirements for additional authentication providers.
     * </pre>
     *
     * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
     */
    public Builder removeRequirements(int index) {
      copyOnWrite();
      instance.removeRequirements(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.api.AuthenticationRule)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.api.AuthenticationRule();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        requirements_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.google.api.AuthenticationRule other = (com.google.api.AuthenticationRule) arg1;
        selector_ = visitor.visitString(!selector_.isEmpty(), selector_,
            !other.selector_.isEmpty(), other.selector_);
        oauth_ = visitor.visitMessage(oauth_, other.oauth_);
        allowWithoutCredential_ = visitor.visitBoolean(allowWithoutCredential_ != false, allowWithoutCredential_,
            other.allowWithoutCredential_ != false, other.allowWithoutCredential_);
        requirements_= visitor.visitList(requirements_, other.requirements_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                selector_ = s;
                break;
              }
              case 18: {
                com.google.api.OAuthRequirements.Builder subBuilder = null;
                if (oauth_ != null) {
                  subBuilder = oauth_.toBuilder();
                }
                oauth_ = input.readMessage(com.google.api.OAuthRequirements.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(oauth_);
                  oauth_ = subBuilder.buildPartial();
                }

                break;
              }
              case 40: {

                allowWithoutCredential_ = input.readBool();
                break;
              }
              case 58: {
                if (!requirements_.isModifiable()) {
                  requirements_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(requirements_);
                }
                requirements_.add(
                    input.readMessage(com.google.api.AuthRequirement.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.google.api.AuthenticationRule.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.api.AuthenticationRule)
  private static final com.google.api.AuthenticationRule DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new AuthenticationRule();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.google.api.AuthenticationRule getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<AuthenticationRule> PARSER;

  public static com.google.protobuf.Parser<AuthenticationRule> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

