// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/container/v1/cluster_service.proto

package com.google.container.v1;

/**
 * <pre>
 * The authentication information for accessing the master endpoint.
 * Authentication can be done using HTTP basic auth or using client
 * certificates.
 * </pre>
 *
 * Protobuf type {@code google.container.v1.MasterAuth}
 */
public  final class MasterAuth extends
    com.google.protobuf.GeneratedMessageLite<
        MasterAuth, MasterAuth.Builder> implements
    // @@protoc_insertion_point(message_implements:google.container.v1.MasterAuth)
    MasterAuthOrBuilder {
  private MasterAuth() {
    username_ = "";
    password_ = "";
    clusterCaCertificate_ = "";
    clientCertificate_ = "";
    clientKey_ = "";
  }
  public static final int USERNAME_FIELD_NUMBER = 1;
  private java.lang.String username_;
  /**
   * <pre>
   * The username to use for HTTP basic authentication to the master endpoint.
   * </pre>
   *
   * <code>optional string username = 1;</code>
   */
  public java.lang.String getUsername() {
    return username_;
  }
  /**
   * <pre>
   * The username to use for HTTP basic authentication to the master endpoint.
   * </pre>
   *
   * <code>optional string username = 1;</code>
   */
  public com.google.protobuf.ByteString
      getUsernameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(username_);
  }
  /**
   * <pre>
   * The username to use for HTTP basic authentication to the master endpoint.
   * </pre>
   *
   * <code>optional string username = 1;</code>
   */
  private void setUsername(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    username_ = value;
  }
  /**
   * <pre>
   * The username to use for HTTP basic authentication to the master endpoint.
   * </pre>
   *
   * <code>optional string username = 1;</code>
   */
  private void clearUsername() {
    
    username_ = getDefaultInstance().getUsername();
  }
  /**
   * <pre>
   * The username to use for HTTP basic authentication to the master endpoint.
   * </pre>
   *
   * <code>optional string username = 1;</code>
   */
  private void setUsernameBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    username_ = value.toStringUtf8();
  }

  public static final int PASSWORD_FIELD_NUMBER = 2;
  private java.lang.String password_;
  /**
   * <pre>
   * The password to use for HTTP basic authentication to the master endpoint.
   * Because the master endpoint is open to the Internet, you should create a
   * strong password.
   * </pre>
   *
   * <code>optional string password = 2;</code>
   */
  public java.lang.String getPassword() {
    return password_;
  }
  /**
   * <pre>
   * The password to use for HTTP basic authentication to the master endpoint.
   * Because the master endpoint is open to the Internet, you should create a
   * strong password.
   * </pre>
   *
   * <code>optional string password = 2;</code>
   */
  public com.google.protobuf.ByteString
      getPasswordBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(password_);
  }
  /**
   * <pre>
   * The password to use for HTTP basic authentication to the master endpoint.
   * Because the master endpoint is open to the Internet, you should create a
   * strong password.
   * </pre>
   *
   * <code>optional string password = 2;</code>
   */
  private void setPassword(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    password_ = value;
  }
  /**
   * <pre>
   * The password to use for HTTP basic authentication to the master endpoint.
   * Because the master endpoint is open to the Internet, you should create a
   * strong password.
   * </pre>
   *
   * <code>optional string password = 2;</code>
   */
  private void clearPassword() {
    
    password_ = getDefaultInstance().getPassword();
  }
  /**
   * <pre>
   * The password to use for HTTP basic authentication to the master endpoint.
   * Because the master endpoint is open to the Internet, you should create a
   * strong password.
   * </pre>
   *
   * <code>optional string password = 2;</code>
   */
  private void setPasswordBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    password_ = value.toStringUtf8();
  }

  public static final int CLUSTER_CA_CERTIFICATE_FIELD_NUMBER = 100;
  private java.lang.String clusterCaCertificate_;
  /**
   * <pre>
   * [Output only] Base64-encoded public certificate that is the root of
   * trust for the cluster.
   * </pre>
   *
   * <code>optional string cluster_ca_certificate = 100;</code>
   */
  public java.lang.String getClusterCaCertificate() {
    return clusterCaCertificate_;
  }
  /**
   * <pre>
   * [Output only] Base64-encoded public certificate that is the root of
   * trust for the cluster.
   * </pre>
   *
   * <code>optional string cluster_ca_certificate = 100;</code>
   */
  public com.google.protobuf.ByteString
      getClusterCaCertificateBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(clusterCaCertificate_);
  }
  /**
   * <pre>
   * [Output only] Base64-encoded public certificate that is the root of
   * trust for the cluster.
   * </pre>
   *
   * <code>optional string cluster_ca_certificate = 100;</code>
   */
  private void setClusterCaCertificate(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    clusterCaCertificate_ = value;
  }
  /**
   * <pre>
   * [Output only] Base64-encoded public certificate that is the root of
   * trust for the cluster.
   * </pre>
   *
   * <code>optional string cluster_ca_certificate = 100;</code>
   */
  private void clearClusterCaCertificate() {
    
    clusterCaCertificate_ = getDefaultInstance().getClusterCaCertificate();
  }
  /**
   * <pre>
   * [Output only] Base64-encoded public certificate that is the root of
   * trust for the cluster.
   * </pre>
   *
   * <code>optional string cluster_ca_certificate = 100;</code>
   */
  private void setClusterCaCertificateBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    clusterCaCertificate_ = value.toStringUtf8();
  }

  public static final int CLIENT_CERTIFICATE_FIELD_NUMBER = 101;
  private java.lang.String clientCertificate_;
  /**
   * <pre>
   * [Output only] Base64-encoded public certificate used by clients to
   * authenticate to the cluster endpoint.
   * </pre>
   *
   * <code>optional string client_certificate = 101;</code>
   */
  public java.lang.String getClientCertificate() {
    return clientCertificate_;
  }
  /**
   * <pre>
   * [Output only] Base64-encoded public certificate used by clients to
   * authenticate to the cluster endpoint.
   * </pre>
   *
   * <code>optional string client_certificate = 101;</code>
   */
  public com.google.protobuf.ByteString
      getClientCertificateBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(clientCertificate_);
  }
  /**
   * <pre>
   * [Output only] Base64-encoded public certificate used by clients to
   * authenticate to the cluster endpoint.
   * </pre>
   *
   * <code>optional string client_certificate = 101;</code>
   */
  private void setClientCertificate(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    clientCertificate_ = value;
  }
  /**
   * <pre>
   * [Output only] Base64-encoded public certificate used by clients to
   * authenticate to the cluster endpoint.
   * </pre>
   *
   * <code>optional string client_certificate = 101;</code>
   */
  private void clearClientCertificate() {
    
    clientCertificate_ = getDefaultInstance().getClientCertificate();
  }
  /**
   * <pre>
   * [Output only] Base64-encoded public certificate used by clients to
   * authenticate to the cluster endpoint.
   * </pre>
   *
   * <code>optional string client_certificate = 101;</code>
   */
  private void setClientCertificateBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    clientCertificate_ = value.toStringUtf8();
  }

  public static final int CLIENT_KEY_FIELD_NUMBER = 102;
  private java.lang.String clientKey_;
  /**
   * <pre>
   * [Output only] Base64-encoded private key used by clients to authenticate
   * to the cluster endpoint.
   * </pre>
   *
   * <code>optional string client_key = 102;</code>
   */
  public java.lang.String getClientKey() {
    return clientKey_;
  }
  /**
   * <pre>
   * [Output only] Base64-encoded private key used by clients to authenticate
   * to the cluster endpoint.
   * </pre>
   *
   * <code>optional string client_key = 102;</code>
   */
  public com.google.protobuf.ByteString
      getClientKeyBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(clientKey_);
  }
  /**
   * <pre>
   * [Output only] Base64-encoded private key used by clients to authenticate
   * to the cluster endpoint.
   * </pre>
   *
   * <code>optional string client_key = 102;</code>
   */
  private void setClientKey(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    clientKey_ = value;
  }
  /**
   * <pre>
   * [Output only] Base64-encoded private key used by clients to authenticate
   * to the cluster endpoint.
   * </pre>
   *
   * <code>optional string client_key = 102;</code>
   */
  private void clearClientKey() {
    
    clientKey_ = getDefaultInstance().getClientKey();
  }
  /**
   * <pre>
   * [Output only] Base64-encoded private key used by clients to authenticate
   * to the cluster endpoint.
   * </pre>
   *
   * <code>optional string client_key = 102;</code>
   */
  private void setClientKeyBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    clientKey_ = value.toStringUtf8();
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!username_.isEmpty()) {
      output.writeString(1, getUsername());
    }
    if (!password_.isEmpty()) {
      output.writeString(2, getPassword());
    }
    if (!clusterCaCertificate_.isEmpty()) {
      output.writeString(100, getClusterCaCertificate());
    }
    if (!clientCertificate_.isEmpty()) {
      output.writeString(101, getClientCertificate());
    }
    if (!clientKey_.isEmpty()) {
      output.writeString(102, getClientKey());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (!username_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getUsername());
    }
    if (!password_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getPassword());
    }
    if (!clusterCaCertificate_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(100, getClusterCaCertificate());
    }
    if (!clientCertificate_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(101, getClientCertificate());
    }
    if (!clientKey_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(102, getClientKey());
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.google.container.v1.MasterAuth parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.container.v1.MasterAuth parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.container.v1.MasterAuth parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.container.v1.MasterAuth parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.container.v1.MasterAuth parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.container.v1.MasterAuth parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.container.v1.MasterAuth parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.container.v1.MasterAuth parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.container.v1.MasterAuth parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.container.v1.MasterAuth parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.container.v1.MasterAuth prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * The authentication information for accessing the master endpoint.
   * Authentication can be done using HTTP basic auth or using client
   * certificates.
   * </pre>
   *
   * Protobuf type {@code google.container.v1.MasterAuth}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.container.v1.MasterAuth, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.container.v1.MasterAuth)
      com.google.container.v1.MasterAuthOrBuilder {
    // Construct using com.google.container.v1.MasterAuth.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The username to use for HTTP basic authentication to the master endpoint.
     * </pre>
     *
     * <code>optional string username = 1;</code>
     */
    public java.lang.String getUsername() {
      return instance.getUsername();
    }
    /**
     * <pre>
     * The username to use for HTTP basic authentication to the master endpoint.
     * </pre>
     *
     * <code>optional string username = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      return instance.getUsernameBytes();
    }
    /**
     * <pre>
     * The username to use for HTTP basic authentication to the master endpoint.
     * </pre>
     *
     * <code>optional string username = 1;</code>
     */
    public Builder setUsername(
        java.lang.String value) {
      copyOnWrite();
      instance.setUsername(value);
      return this;
    }
    /**
     * <pre>
     * The username to use for HTTP basic authentication to the master endpoint.
     * </pre>
     *
     * <code>optional string username = 1;</code>
     */
    public Builder clearUsername() {
      copyOnWrite();
      instance.clearUsername();
      return this;
    }
    /**
     * <pre>
     * The username to use for HTTP basic authentication to the master endpoint.
     * </pre>
     *
     * <code>optional string username = 1;</code>
     */
    public Builder setUsernameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setUsernameBytes(value);
      return this;
    }

    /**
     * <pre>
     * The password to use for HTTP basic authentication to the master endpoint.
     * Because the master endpoint is open to the Internet, you should create a
     * strong password.
     * </pre>
     *
     * <code>optional string password = 2;</code>
     */
    public java.lang.String getPassword() {
      return instance.getPassword();
    }
    /**
     * <pre>
     * The password to use for HTTP basic authentication to the master endpoint.
     * Because the master endpoint is open to the Internet, you should create a
     * strong password.
     * </pre>
     *
     * <code>optional string password = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      return instance.getPasswordBytes();
    }
    /**
     * <pre>
     * The password to use for HTTP basic authentication to the master endpoint.
     * Because the master endpoint is open to the Internet, you should create a
     * strong password.
     * </pre>
     *
     * <code>optional string password = 2;</code>
     */
    public Builder setPassword(
        java.lang.String value) {
      copyOnWrite();
      instance.setPassword(value);
      return this;
    }
    /**
     * <pre>
     * The password to use for HTTP basic authentication to the master endpoint.
     * Because the master endpoint is open to the Internet, you should create a
     * strong password.
     * </pre>
     *
     * <code>optional string password = 2;</code>
     */
    public Builder clearPassword() {
      copyOnWrite();
      instance.clearPassword();
      return this;
    }
    /**
     * <pre>
     * The password to use for HTTP basic authentication to the master endpoint.
     * Because the master endpoint is open to the Internet, you should create a
     * strong password.
     * </pre>
     *
     * <code>optional string password = 2;</code>
     */
    public Builder setPasswordBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPasswordBytes(value);
      return this;
    }

    /**
     * <pre>
     * [Output only] Base64-encoded public certificate that is the root of
     * trust for the cluster.
     * </pre>
     *
     * <code>optional string cluster_ca_certificate = 100;</code>
     */
    public java.lang.String getClusterCaCertificate() {
      return instance.getClusterCaCertificate();
    }
    /**
     * <pre>
     * [Output only] Base64-encoded public certificate that is the root of
     * trust for the cluster.
     * </pre>
     *
     * <code>optional string cluster_ca_certificate = 100;</code>
     */
    public com.google.protobuf.ByteString
        getClusterCaCertificateBytes() {
      return instance.getClusterCaCertificateBytes();
    }
    /**
     * <pre>
     * [Output only] Base64-encoded public certificate that is the root of
     * trust for the cluster.
     * </pre>
     *
     * <code>optional string cluster_ca_certificate = 100;</code>
     */
    public Builder setClusterCaCertificate(
        java.lang.String value) {
      copyOnWrite();
      instance.setClusterCaCertificate(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] Base64-encoded public certificate that is the root of
     * trust for the cluster.
     * </pre>
     *
     * <code>optional string cluster_ca_certificate = 100;</code>
     */
    public Builder clearClusterCaCertificate() {
      copyOnWrite();
      instance.clearClusterCaCertificate();
      return this;
    }
    /**
     * <pre>
     * [Output only] Base64-encoded public certificate that is the root of
     * trust for the cluster.
     * </pre>
     *
     * <code>optional string cluster_ca_certificate = 100;</code>
     */
    public Builder setClusterCaCertificateBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setClusterCaCertificateBytes(value);
      return this;
    }

    /**
     * <pre>
     * [Output only] Base64-encoded public certificate used by clients to
     * authenticate to the cluster endpoint.
     * </pre>
     *
     * <code>optional string client_certificate = 101;</code>
     */
    public java.lang.String getClientCertificate() {
      return instance.getClientCertificate();
    }
    /**
     * <pre>
     * [Output only] Base64-encoded public certificate used by clients to
     * authenticate to the cluster endpoint.
     * </pre>
     *
     * <code>optional string client_certificate = 101;</code>
     */
    public com.google.protobuf.ByteString
        getClientCertificateBytes() {
      return instance.getClientCertificateBytes();
    }
    /**
     * <pre>
     * [Output only] Base64-encoded public certificate used by clients to
     * authenticate to the cluster endpoint.
     * </pre>
     *
     * <code>optional string client_certificate = 101;</code>
     */
    public Builder setClientCertificate(
        java.lang.String value) {
      copyOnWrite();
      instance.setClientCertificate(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] Base64-encoded public certificate used by clients to
     * authenticate to the cluster endpoint.
     * </pre>
     *
     * <code>optional string client_certificate = 101;</code>
     */
    public Builder clearClientCertificate() {
      copyOnWrite();
      instance.clearClientCertificate();
      return this;
    }
    /**
     * <pre>
     * [Output only] Base64-encoded public certificate used by clients to
     * authenticate to the cluster endpoint.
     * </pre>
     *
     * <code>optional string client_certificate = 101;</code>
     */
    public Builder setClientCertificateBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setClientCertificateBytes(value);
      return this;
    }

    /**
     * <pre>
     * [Output only] Base64-encoded private key used by clients to authenticate
     * to the cluster endpoint.
     * </pre>
     *
     * <code>optional string client_key = 102;</code>
     */
    public java.lang.String getClientKey() {
      return instance.getClientKey();
    }
    /**
     * <pre>
     * [Output only] Base64-encoded private key used by clients to authenticate
     * to the cluster endpoint.
     * </pre>
     *
     * <code>optional string client_key = 102;</code>
     */
    public com.google.protobuf.ByteString
        getClientKeyBytes() {
      return instance.getClientKeyBytes();
    }
    /**
     * <pre>
     * [Output only] Base64-encoded private key used by clients to authenticate
     * to the cluster endpoint.
     * </pre>
     *
     * <code>optional string client_key = 102;</code>
     */
    public Builder setClientKey(
        java.lang.String value) {
      copyOnWrite();
      instance.setClientKey(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] Base64-encoded private key used by clients to authenticate
     * to the cluster endpoint.
     * </pre>
     *
     * <code>optional string client_key = 102;</code>
     */
    public Builder clearClientKey() {
      copyOnWrite();
      instance.clearClientKey();
      return this;
    }
    /**
     * <pre>
     * [Output only] Base64-encoded private key used by clients to authenticate
     * to the cluster endpoint.
     * </pre>
     *
     * <code>optional string client_key = 102;</code>
     */
    public Builder setClientKeyBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setClientKeyBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.container.v1.MasterAuth)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.container.v1.MasterAuth();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.google.container.v1.MasterAuth other = (com.google.container.v1.MasterAuth) arg1;
        username_ = visitor.visitString(!username_.isEmpty(), username_,
            !other.username_.isEmpty(), other.username_);
        password_ = visitor.visitString(!password_.isEmpty(), password_,
            !other.password_.isEmpty(), other.password_);
        clusterCaCertificate_ = visitor.visitString(!clusterCaCertificate_.isEmpty(), clusterCaCertificate_,
            !other.clusterCaCertificate_.isEmpty(), other.clusterCaCertificate_);
        clientCertificate_ = visitor.visitString(!clientCertificate_.isEmpty(), clientCertificate_,
            !other.clientCertificate_.isEmpty(), other.clientCertificate_);
        clientKey_ = visitor.visitString(!clientKey_.isEmpty(), clientKey_,
            !other.clientKey_.isEmpty(), other.clientKey_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                username_ = s;
                break;
              }
              case 18: {
                String s = input.readStringRequireUtf8();

                password_ = s;
                break;
              }
              case 802: {
                String s = input.readStringRequireUtf8();

                clusterCaCertificate_ = s;
                break;
              }
              case 810: {
                String s = input.readStringRequireUtf8();

                clientCertificate_ = s;
                break;
              }
              case 818: {
                String s = input.readStringRequireUtf8();

                clientKey_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.google.container.v1.MasterAuth.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.container.v1.MasterAuth)
  private static final com.google.container.v1.MasterAuth DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new MasterAuth();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.google.container.v1.MasterAuth getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<MasterAuth> PARSER;

  public static com.google.protobuf.Parser<MasterAuth> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

