// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicemanagement/v1/resources.proto

package com.google.api.servicemanagement.v1;

/**
 * <pre>
 * A rollout resource that defines how service configuration versions are pushed
 * to control plane systems. Typically, you create a new version of the
 * service config, and then create a Rollout to push the service config.
 * </pre>
 *
 * Protobuf type {@code google.api.servicemanagement.v1.Rollout}
 */
public  final class Rollout extends
    com.google.protobuf.GeneratedMessageLite<
        Rollout, Rollout.Builder> implements
    // @@protoc_insertion_point(message_implements:google.api.servicemanagement.v1.Rollout)
    RolloutOrBuilder {
  private Rollout() {
    rolloutId_ = "";
    createdBy_ = "";
    serviceName_ = "";
  }
  /**
   * <pre>
   * Status of a Rollout.
   * </pre>
   *
   * Protobuf enum {@code google.api.servicemanagement.v1.Rollout.RolloutStatus}
   */
  public enum RolloutStatus
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * No status specified.
     * </pre>
     *
     * <code>ROLLOUT_STATUS_UNSPECIFIED = 0;</code>
     */
    ROLLOUT_STATUS_UNSPECIFIED(0),
    /**
     * <pre>
     * The Rollout is in progress.
     * </pre>
     *
     * <code>IN_PROGRESS = 1;</code>
     */
    IN_PROGRESS(1),
    /**
     * <pre>
     * The Rollout has completed successfully.
     * </pre>
     *
     * <code>SUCCESS = 2;</code>
     */
    SUCCESS(2),
    /**
     * <pre>
     * The Rollout has been cancelled. This can happen if you have overlapping
     * Rollout pushes, and the previous ones will be cancelled.
     * </pre>
     *
     * <code>CANCELLED = 3;</code>
     */
    CANCELLED(3),
    /**
     * <pre>
     * The Rollout has failed. It is typically caused by configuration errors.
     * </pre>
     *
     * <code>FAILED = 4;</code>
     */
    FAILED(4),
    /**
     * <pre>
     * The Rollout has not started yet and is pending for execution.
     * </pre>
     *
     * <code>PENDING = 5;</code>
     */
    PENDING(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No status specified.
     * </pre>
     *
     * <code>ROLLOUT_STATUS_UNSPECIFIED = 0;</code>
     */
    public static final int ROLLOUT_STATUS_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The Rollout is in progress.
     * </pre>
     *
     * <code>IN_PROGRESS = 1;</code>
     */
    public static final int IN_PROGRESS_VALUE = 1;
    /**
     * <pre>
     * The Rollout has completed successfully.
     * </pre>
     *
     * <code>SUCCESS = 2;</code>
     */
    public static final int SUCCESS_VALUE = 2;
    /**
     * <pre>
     * The Rollout has been cancelled. This can happen if you have overlapping
     * Rollout pushes, and the previous ones will be cancelled.
     * </pre>
     *
     * <code>CANCELLED = 3;</code>
     */
    public static final int CANCELLED_VALUE = 3;
    /**
     * <pre>
     * The Rollout has failed. It is typically caused by configuration errors.
     * </pre>
     *
     * <code>FAILED = 4;</code>
     */
    public static final int FAILED_VALUE = 4;
    /**
     * <pre>
     * The Rollout has not started yet and is pending for execution.
     * </pre>
     *
     * <code>PENDING = 5;</code>
     */
    public static final int PENDING_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RolloutStatus valueOf(int value) {
      return forNumber(value);
    }

    public static RolloutStatus forNumber(int value) {
      switch (value) {
        case 0: return ROLLOUT_STATUS_UNSPECIFIED;
        case 1: return IN_PROGRESS;
        case 2: return SUCCESS;
        case 3: return CANCELLED;
        case 4: return FAILED;
        case 5: return PENDING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RolloutStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RolloutStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RolloutStatus>() {
            public RolloutStatus findValueByNumber(int number) {
              return RolloutStatus.forNumber(number);
            }
          };

    private final int value;

    private RolloutStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.api.servicemanagement.v1.Rollout.RolloutStatus)
  }

  public interface TrafficPercentStrategyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */
    int getPercentagesCount();
    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */
    boolean containsPercentages(
        java.lang.String key);
    /**
     * Use {@link #getPercentagesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Double>
    getPercentages();
    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */
    java.util.Map<java.lang.String, java.lang.Double>
    getPercentagesMap();
    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */

    double getPercentagesOrDefault(
        java.lang.String key,
        double defaultValue);
    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */

    double getPercentagesOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Strategy that specifies how Google Service Control should select
   * different
   * versions of service configurations based on traffic percentage.
   * One example of how to gradually rollout a new service configuration using
   * this
   * strategy:
   * Day 1
   *     Rollout {
   *       id: "example.googleapis.com/rollout_20160206"
   *       traffic_percent_strategy {
   *         percentages: {
   *           "example.googleapis.com/20160201": 70.00
   *           "example.googleapis.com/20160206": 30.00
   *         }
   *       }
   *     }
   * Day 2
   *     Rollout {
   *       id: "example.googleapis.com/rollout_20160207"
   *       traffic_percent_strategy: {
   *         percentages: {
   *           "example.googleapis.com/20160206": 100.00
   *         }
   *       }
   *     }
   * </pre>
   *
   * Protobuf type {@code google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy}
   */
  public  static final class TrafficPercentStrategy extends
      com.google.protobuf.GeneratedMessageLite<
          TrafficPercentStrategy, TrafficPercentStrategy.Builder> implements
      // @@protoc_insertion_point(message_implements:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
      TrafficPercentStrategyOrBuilder {
    private TrafficPercentStrategy() {
    }
    public static final int PERCENTAGES_FIELD_NUMBER = 1;
    private static final class PercentagesDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.String, java.lang.Double> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.String, java.lang.Double>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.DOUBLE,
                  0D);
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.String, java.lang.Double> percentages_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Double>
    internalGetPercentages() {
      return percentages_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Double>
    internalGetMutablePercentages() {
      if (!percentages_.isMutable()) {
        percentages_ = percentages_.mutableCopy();
      }
      return percentages_;
    }

    public int getPercentagesCount() {
      return internalGetPercentages().size();
    }
    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */

    public boolean containsPercentages(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetPercentages().containsKey(key);
    }
    /**
     * Use {@link #getPercentagesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Double> getPercentages() {
      return getPercentagesMap();
    }
    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Double> getPercentagesMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetPercentages());
    }
    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */

    public double getPercentagesOrDefault(
        java.lang.String key,
        double defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetPercentages();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */

    public double getPercentagesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetPercentages();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */
    private java.util.Map<java.lang.String, java.lang.Double>
    getMutablePercentagesMap() {
      return internalGetMutablePercentages();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry
           : internalGetPercentages().entrySet()) {
        PercentagesDefaultEntryHolder.defaultEntry.serializeTo(
            output, 1, entry.getKey(), entry.getValue());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry
           : internalGetPercentages().entrySet()) {
        size += PercentagesDefaultEntryHolder.defaultEntry.computeMessageSize(
          1, entry.getKey(), entry.getValue());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Strategy that specifies how Google Service Control should select
     * different
     * versions of service configurations based on traffic percentage.
     * One example of how to gradually rollout a new service configuration using
     * this
     * strategy:
     * Day 1
     *     Rollout {
     *       id: "example.googleapis.com/rollout_20160206"
     *       traffic_percent_strategy {
     *         percentages: {
     *           "example.googleapis.com/20160201": 70.00
     *           "example.googleapis.com/20160206": 30.00
     *         }
     *       }
     *     }
     * Day 2
     *     Rollout {
     *       id: "example.googleapis.com/rollout_20160207"
     *       traffic_percent_strategy: {
     *         percentages: {
     *           "example.googleapis.com/20160206": 100.00
     *         }
     *       }
     *     }
     * </pre>
     *
     * Protobuf type {@code google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
        com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategyOrBuilder {
      // Construct using com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }



      public int getPercentagesCount() {
        return instance.getPercentagesMap().size();
      }
      /**
       * <pre>
       * Maps service configuration IDs to their corresponding traffic percentage.
       * Key is the service configuration ID, Value is the traffic percentage
       * which must be greater than 0.0 and the sum must equal to 100.0.
       * </pre>
       *
       * <code>map&lt;string, double&gt; percentages = 1;</code>
       */

      public boolean containsPercentages(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return instance.getPercentagesMap().containsKey(key);
      }

      public Builder clearPercentages() {
        copyOnWrite();
        instance.getMutablePercentagesMap().clear();
        return this;
      }
      /**
       * <pre>
       * Maps service configuration IDs to their corresponding traffic percentage.
       * Key is the service configuration ID, Value is the traffic percentage
       * which must be greater than 0.0 and the sum must equal to 100.0.
       * </pre>
       *
       * <code>map&lt;string, double&gt; percentages = 1;</code>
       */

      public Builder removePercentages(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        copyOnWrite();
        instance.getMutablePercentagesMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getPercentagesMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double> getPercentages() {
        return getPercentagesMap();
      }
      /**
       * <pre>
       * Maps service configuration IDs to their corresponding traffic percentage.
       * Key is the service configuration ID, Value is the traffic percentage
       * which must be greater than 0.0 and the sum must equal to 100.0.
       * </pre>
       *
       * <code>map&lt;string, double&gt; percentages = 1;</code>
       */
      public java.util.Map<java.lang.String, java.lang.Double> getPercentagesMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getPercentagesMap());
      }
      /**
       * <pre>
       * Maps service configuration IDs to their corresponding traffic percentage.
       * Key is the service configuration ID, Value is the traffic percentage
       * which must be greater than 0.0 and the sum must equal to 100.0.
       * </pre>
       *
       * <code>map&lt;string, double&gt; percentages = 1;</code>
       */

      public double getPercentagesOrDefault(
          java.lang.String key,
          double defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            instance.getPercentagesMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Maps service configuration IDs to their corresponding traffic percentage.
       * Key is the service configuration ID, Value is the traffic percentage
       * which must be greater than 0.0 and the sum must equal to 100.0.
       * </pre>
       *
       * <code>map&lt;string, double&gt; percentages = 1;</code>
       */

      public double getPercentagesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            instance.getPercentagesMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <pre>
       * Maps service configuration IDs to their corresponding traffic percentage.
       * Key is the service configuration ID, Value is the traffic percentage
       * which must be greater than 0.0 and the sum must equal to 100.0.
       * </pre>
       *
       * <code>map&lt;string, double&gt; percentages = 1;</code>
       */
      public Builder putPercentages(
          java.lang.String key,
          double value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        copyOnWrite();
        instance.getMutablePercentagesMap().put(key, value);
        return this;
      }
      /**
       * <pre>
       * Maps service configuration IDs to their corresponding traffic percentage.
       * Key is the service configuration ID, Value is the traffic percentage
       * which must be greater than 0.0 and the sum must equal to 100.0.
       * </pre>
       *
       * <code>map&lt;string, double&gt; percentages = 1;</code>
       */
      public Builder putAllPercentages(
          java.util.Map<java.lang.String, java.lang.Double> values) {
        copyOnWrite();
        instance.getMutablePercentagesMap().putAll(values);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          percentages_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy other = (com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) arg1;
          percentages_ = visitor.visitMap(
              percentages_, other.internalGetPercentages());
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!percentages_.isMutable()) {
                    percentages_ = percentages_.mutableCopy();
                  }
                  PercentagesDefaultEntryHolder.defaultEntry.parseInto(percentages_, input, extensionRegistry);  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
    private static final com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TrafficPercentStrategy();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TrafficPercentStrategy> PARSER;

    public static com.google.protobuf.Parser<TrafficPercentStrategy> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DeleteServiceStrategyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * <pre>
   * Strategy used to delete a service. This strategy is a placeholder only
   * used by the system generated rollout to delete a service.
   * </pre>
   *
   * Protobuf type {@code google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy}
   */
  public  static final class DeleteServiceStrategy extends
      com.google.protobuf.GeneratedMessageLite<
          DeleteServiceStrategy, DeleteServiceStrategy.Builder> implements
      // @@protoc_insertion_point(message_implements:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
      DeleteServiceStrategyOrBuilder {
    private DeleteServiceStrategy() {
    }
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Strategy used to delete a service. This strategy is a placeholder only
     * used by the system generated rollout to delete a service.
     * </pre>
     *
     * Protobuf type {@code google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
        com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategyOrBuilder {
      // Construct using com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy other = (com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) arg1;
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
    private static final com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DeleteServiceStrategy();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DeleteServiceStrategy> PARSER;

    public static com.google.protobuf.Parser<DeleteServiceStrategy> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int strategyCase_ = 0;
  private java.lang.Object strategy_;
  public enum StrategyCase
      implements com.google.protobuf.Internal.EnumLite {
    TRAFFIC_PERCENT_STRATEGY(5),
    DELETE_SERVICE_STRATEGY(200),
    STRATEGY_NOT_SET(0);
    private final int value;
    private StrategyCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static StrategyCase valueOf(int value) {
      return forNumber(value);
    }

    public static StrategyCase forNumber(int value) {
      switch (value) {
        case 5: return TRAFFIC_PERCENT_STRATEGY;
        case 200: return DELETE_SERVICE_STRATEGY;
        case 0: return STRATEGY_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public StrategyCase
  getStrategyCase() {
    return StrategyCase.forNumber(
        strategyCase_);
  }

  private void clearStrategy() {
    strategyCase_ = 0;
    strategy_ = null;
  }

  public static final int ROLLOUT_ID_FIELD_NUMBER = 1;
  private java.lang.String rolloutId_;
  /**
   * <pre>
   * Optional unique identifier of this Rollout. Only lower case letters, digits
   *  and '-' are allowed.
   * If not specified by client, the server will generate one. The generated id
   * will have the form of &lt;date&gt;&lt;revision number&gt;, where "date" is the create
   * date in ISO 8601 format.  "revision number" is a monotonically increasing
   * positive number that is reset every day for each service.
   * An example of the generated rollout_id is '2016-02-16r1'
   * </pre>
   *
   * <code>optional string rollout_id = 1;</code>
   */
  public java.lang.String getRolloutId() {
    return rolloutId_;
  }
  /**
   * <pre>
   * Optional unique identifier of this Rollout. Only lower case letters, digits
   *  and '-' are allowed.
   * If not specified by client, the server will generate one. The generated id
   * will have the form of &lt;date&gt;&lt;revision number&gt;, where "date" is the create
   * date in ISO 8601 format.  "revision number" is a monotonically increasing
   * positive number that is reset every day for each service.
   * An example of the generated rollout_id is '2016-02-16r1'
   * </pre>
   *
   * <code>optional string rollout_id = 1;</code>
   */
  public com.google.protobuf.ByteString
      getRolloutIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(rolloutId_);
  }
  /**
   * <pre>
   * Optional unique identifier of this Rollout. Only lower case letters, digits
   *  and '-' are allowed.
   * If not specified by client, the server will generate one. The generated id
   * will have the form of &lt;date&gt;&lt;revision number&gt;, where "date" is the create
   * date in ISO 8601 format.  "revision number" is a monotonically increasing
   * positive number that is reset every day for each service.
   * An example of the generated rollout_id is '2016-02-16r1'
   * </pre>
   *
   * <code>optional string rollout_id = 1;</code>
   */
  private void setRolloutId(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    rolloutId_ = value;
  }
  /**
   * <pre>
   * Optional unique identifier of this Rollout. Only lower case letters, digits
   *  and '-' are allowed.
   * If not specified by client, the server will generate one. The generated id
   * will have the form of &lt;date&gt;&lt;revision number&gt;, where "date" is the create
   * date in ISO 8601 format.  "revision number" is a monotonically increasing
   * positive number that is reset every day for each service.
   * An example of the generated rollout_id is '2016-02-16r1'
   * </pre>
   *
   * <code>optional string rollout_id = 1;</code>
   */
  private void clearRolloutId() {
    
    rolloutId_ = getDefaultInstance().getRolloutId();
  }
  /**
   * <pre>
   * Optional unique identifier of this Rollout. Only lower case letters, digits
   *  and '-' are allowed.
   * If not specified by client, the server will generate one. The generated id
   * will have the form of &lt;date&gt;&lt;revision number&gt;, where "date" is the create
   * date in ISO 8601 format.  "revision number" is a monotonically increasing
   * positive number that is reset every day for each service.
   * An example of the generated rollout_id is '2016-02-16r1'
   * </pre>
   *
   * <code>optional string rollout_id = 1;</code>
   */
  private void setRolloutIdBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    rolloutId_ = value.toStringUtf8();
  }

  public static final int CREATE_TIME_FIELD_NUMBER = 2;
  private com.google.protobuf.Timestamp createTime_;
  /**
   * <pre>
   * Creation time of the rollout. Readonly.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 2;</code>
   */
  public boolean hasCreateTime() {
    return createTime_ != null;
  }
  /**
   * <pre>
   * Creation time of the rollout. Readonly.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 2;</code>
   */
  public com.google.protobuf.Timestamp getCreateTime() {
    return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
  }
  /**
   * <pre>
   * Creation time of the rollout. Readonly.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 2;</code>
   */
  private void setCreateTime(com.google.protobuf.Timestamp value) {
    if (value == null) {
      throw new NullPointerException();
    }
    createTime_ = value;
    
    }
  /**
   * <pre>
   * Creation time of the rollout. Readonly.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 2;</code>
   */
  private void setCreateTime(
      com.google.protobuf.Timestamp.Builder builderForValue) {
    createTime_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * Creation time of the rollout. Readonly.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 2;</code>
   */
  private void mergeCreateTime(com.google.protobuf.Timestamp value) {
    if (createTime_ != null &&
        createTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      createTime_ =
        com.google.protobuf.Timestamp.newBuilder(createTime_).mergeFrom(value).buildPartial();
    } else {
      createTime_ = value;
    }
    
  }
  /**
   * <pre>
   * Creation time of the rollout. Readonly.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 2;</code>
   */
  private void clearCreateTime() {  createTime_ = null;
    
  }

  public static final int CREATED_BY_FIELD_NUMBER = 3;
  private java.lang.String createdBy_;
  /**
   * <pre>
   * The user who created the Rollout. Readonly.
   * </pre>
   *
   * <code>optional string created_by = 3;</code>
   */
  public java.lang.String getCreatedBy() {
    return createdBy_;
  }
  /**
   * <pre>
   * The user who created the Rollout. Readonly.
   * </pre>
   *
   * <code>optional string created_by = 3;</code>
   */
  public com.google.protobuf.ByteString
      getCreatedByBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(createdBy_);
  }
  /**
   * <pre>
   * The user who created the Rollout. Readonly.
   * </pre>
   *
   * <code>optional string created_by = 3;</code>
   */
  private void setCreatedBy(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    createdBy_ = value;
  }
  /**
   * <pre>
   * The user who created the Rollout. Readonly.
   * </pre>
   *
   * <code>optional string created_by = 3;</code>
   */
  private void clearCreatedBy() {
    
    createdBy_ = getDefaultInstance().getCreatedBy();
  }
  /**
   * <pre>
   * The user who created the Rollout. Readonly.
   * </pre>
   *
   * <code>optional string created_by = 3;</code>
   */
  private void setCreatedByBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    createdBy_ = value.toStringUtf8();
  }

  public static final int STATUS_FIELD_NUMBER = 4;
  private int status_;
  /**
   * <pre>
   * The status of this rollout. Readonly. In case of a failed rollout,
   * the system will automatically rollback to the current Rollout
   * version. Readonly.
   * </pre>
   *
   * <code>optional .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;</code>
   */
  public int getStatusValue() {
    return status_;
  }
  /**
   * <pre>
   * The status of this rollout. Readonly. In case of a failed rollout,
   * the system will automatically rollback to the current Rollout
   * version. Readonly.
   * </pre>
   *
   * <code>optional .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;</code>
   */
  public com.google.api.servicemanagement.v1.Rollout.RolloutStatus getStatus() {
    com.google.api.servicemanagement.v1.Rollout.RolloutStatus result = com.google.api.servicemanagement.v1.Rollout.RolloutStatus.forNumber(status_);
    return result == null ? com.google.api.servicemanagement.v1.Rollout.RolloutStatus.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * The status of this rollout. Readonly. In case of a failed rollout,
   * the system will automatically rollback to the current Rollout
   * version. Readonly.
   * </pre>
   *
   * <code>optional .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;</code>
   */
  private void setStatusValue(int value) {
      status_ = value;
  }
  /**
   * <pre>
   * The status of this rollout. Readonly. In case of a failed rollout,
   * the system will automatically rollback to the current Rollout
   * version. Readonly.
   * </pre>
   *
   * <code>optional .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;</code>
   */
  private void setStatus(com.google.api.servicemanagement.v1.Rollout.RolloutStatus value) {
    if (value == null) {
      throw new NullPointerException();
    }
    
    status_ = value.getNumber();
  }
  /**
   * <pre>
   * The status of this rollout. Readonly. In case of a failed rollout,
   * the system will automatically rollback to the current Rollout
   * version. Readonly.
   * </pre>
   *
   * <code>optional .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;</code>
   */
  private void clearStatus() {
    
    status_ = 0;
  }

  public static final int TRAFFIC_PERCENT_STRATEGY_FIELD_NUMBER = 5;
  /**
   * <pre>
   * Google Service Control selects service configurations based on
   * traffic percentage.
   * </pre>
   *
   * <code>optional .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
   */
  public com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy getTrafficPercentStrategy() {
    if (strategyCase_ == 5) {
       return (com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) strategy_;
    }
    return com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.getDefaultInstance();
  }
  /**
   * <pre>
   * Google Service Control selects service configurations based on
   * traffic percentage.
   * </pre>
   *
   * <code>optional .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
   */
  private void setTrafficPercentStrategy(com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy value) {
    if (value == null) {
      throw new NullPointerException();
    }
    strategy_ = value;
    strategyCase_ = 5;
  }
  /**
   * <pre>
   * Google Service Control selects service configurations based on
   * traffic percentage.
   * </pre>
   *
   * <code>optional .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
   */
  private void setTrafficPercentStrategy(
      com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.Builder builderForValue) {
    strategy_ = builderForValue.build();
    strategyCase_ = 5;
  }
  /**
   * <pre>
   * Google Service Control selects service configurations based on
   * traffic percentage.
   * </pre>
   *
   * <code>optional .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
   */
  private void mergeTrafficPercentStrategy(com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy value) {
    if (strategyCase_ == 5 &&
        strategy_ != com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.getDefaultInstance()) {
      strategy_ = com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.newBuilder((com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) strategy_)
          .mergeFrom(value).buildPartial();
    } else {
      strategy_ = value;
    }
    strategyCase_ = 5;
  }
  /**
   * <pre>
   * Google Service Control selects service configurations based on
   * traffic percentage.
   * </pre>
   *
   * <code>optional .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
   */
  private void clearTrafficPercentStrategy() {
    if (strategyCase_ == 5) {
      strategyCase_ = 0;
      strategy_ = null;
    }
  }

  public static final int DELETE_SERVICE_STRATEGY_FIELD_NUMBER = 200;
  /**
   * <pre>
   * The strategy associated with a rollout to delete a `ManagedService`.
   * Readonly.
   * </pre>
   *
   * <code>optional .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
   */
  public com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy getDeleteServiceStrategy() {
    if (strategyCase_ == 200) {
       return (com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) strategy_;
    }
    return com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.getDefaultInstance();
  }
  /**
   * <pre>
   * The strategy associated with a rollout to delete a `ManagedService`.
   * Readonly.
   * </pre>
   *
   * <code>optional .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
   */
  private void setDeleteServiceStrategy(com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy value) {
    if (value == null) {
      throw new NullPointerException();
    }
    strategy_ = value;
    strategyCase_ = 200;
  }
  /**
   * <pre>
   * The strategy associated with a rollout to delete a `ManagedService`.
   * Readonly.
   * </pre>
   *
   * <code>optional .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
   */
  private void setDeleteServiceStrategy(
      com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.Builder builderForValue) {
    strategy_ = builderForValue.build();
    strategyCase_ = 200;
  }
  /**
   * <pre>
   * The strategy associated with a rollout to delete a `ManagedService`.
   * Readonly.
   * </pre>
   *
   * <code>optional .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
   */
  private void mergeDeleteServiceStrategy(com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy value) {
    if (strategyCase_ == 200 &&
        strategy_ != com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.getDefaultInstance()) {
      strategy_ = com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.newBuilder((com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) strategy_)
          .mergeFrom(value).buildPartial();
    } else {
      strategy_ = value;
    }
    strategyCase_ = 200;
  }
  /**
   * <pre>
   * The strategy associated with a rollout to delete a `ManagedService`.
   * Readonly.
   * </pre>
   *
   * <code>optional .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
   */
  private void clearDeleteServiceStrategy() {
    if (strategyCase_ == 200) {
      strategyCase_ = 0;
      strategy_ = null;
    }
  }

  public static final int SERVICE_NAME_FIELD_NUMBER = 8;
  private java.lang.String serviceName_;
  /**
   * <pre>
   * The name of the service associated with this Rollout.
   * </pre>
   *
   * <code>optional string service_name = 8;</code>
   */
  public java.lang.String getServiceName() {
    return serviceName_;
  }
  /**
   * <pre>
   * The name of the service associated with this Rollout.
   * </pre>
   *
   * <code>optional string service_name = 8;</code>
   */
  public com.google.protobuf.ByteString
      getServiceNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(serviceName_);
  }
  /**
   * <pre>
   * The name of the service associated with this Rollout.
   * </pre>
   *
   * <code>optional string service_name = 8;</code>
   */
  private void setServiceName(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    serviceName_ = value;
  }
  /**
   * <pre>
   * The name of the service associated with this Rollout.
   * </pre>
   *
   * <code>optional string service_name = 8;</code>
   */
  private void clearServiceName() {
    
    serviceName_ = getDefaultInstance().getServiceName();
  }
  /**
   * <pre>
   * The name of the service associated with this Rollout.
   * </pre>
   *
   * <code>optional string service_name = 8;</code>
   */
  private void setServiceNameBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    serviceName_ = value.toStringUtf8();
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!rolloutId_.isEmpty()) {
      output.writeString(1, getRolloutId());
    }
    if (createTime_ != null) {
      output.writeMessage(2, getCreateTime());
    }
    if (!createdBy_.isEmpty()) {
      output.writeString(3, getCreatedBy());
    }
    if (status_ != com.google.api.servicemanagement.v1.Rollout.RolloutStatus.ROLLOUT_STATUS_UNSPECIFIED.getNumber()) {
      output.writeEnum(4, status_);
    }
    if (strategyCase_ == 5) {
      output.writeMessage(5, (com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) strategy_);
    }
    if (!serviceName_.isEmpty()) {
      output.writeString(8, getServiceName());
    }
    if (strategyCase_ == 200) {
      output.writeMessage(200, (com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) strategy_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (!rolloutId_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getRolloutId());
    }
    if (createTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getCreateTime());
    }
    if (!createdBy_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(3, getCreatedBy());
    }
    if (status_ != com.google.api.servicemanagement.v1.Rollout.RolloutStatus.ROLLOUT_STATUS_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, status_);
    }
    if (strategyCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) strategy_);
    }
    if (!serviceName_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(8, getServiceName());
    }
    if (strategyCase_ == 200) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(200, (com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) strategy_);
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.google.api.servicemanagement.v1.Rollout parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.servicemanagement.v1.Rollout parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.servicemanagement.v1.Rollout parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.servicemanagement.v1.Rollout parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.servicemanagement.v1.Rollout parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.servicemanagement.v1.Rollout parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.servicemanagement.v1.Rollout parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.api.servicemanagement.v1.Rollout parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.servicemanagement.v1.Rollout parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.servicemanagement.v1.Rollout parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.api.servicemanagement.v1.Rollout prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * A rollout resource that defines how service configuration versions are pushed
   * to control plane systems. Typically, you create a new version of the
   * service config, and then create a Rollout to push the service config.
   * </pre>
   *
   * Protobuf type {@code google.api.servicemanagement.v1.Rollout}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.api.servicemanagement.v1.Rollout, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.api.servicemanagement.v1.Rollout)
      com.google.api.servicemanagement.v1.RolloutOrBuilder {
    // Construct using com.google.api.servicemanagement.v1.Rollout.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    public StrategyCase
        getStrategyCase() {
      return instance.getStrategyCase();
    }

    public Builder clearStrategy() {
      copyOnWrite();
      instance.clearStrategy();
      return this;
    }


    /**
     * <pre>
     * Optional unique identifier of this Rollout. Only lower case letters, digits
     *  and '-' are allowed.
     * If not specified by client, the server will generate one. The generated id
     * will have the form of &lt;date&gt;&lt;revision number&gt;, where "date" is the create
     * date in ISO 8601 format.  "revision number" is a monotonically increasing
     * positive number that is reset every day for each service.
     * An example of the generated rollout_id is '2016-02-16r1'
     * </pre>
     *
     * <code>optional string rollout_id = 1;</code>
     */
    public java.lang.String getRolloutId() {
      return instance.getRolloutId();
    }
    /**
     * <pre>
     * Optional unique identifier of this Rollout. Only lower case letters, digits
     *  and '-' are allowed.
     * If not specified by client, the server will generate one. The generated id
     * will have the form of &lt;date&gt;&lt;revision number&gt;, where "date" is the create
     * date in ISO 8601 format.  "revision number" is a monotonically increasing
     * positive number that is reset every day for each service.
     * An example of the generated rollout_id is '2016-02-16r1'
     * </pre>
     *
     * <code>optional string rollout_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRolloutIdBytes() {
      return instance.getRolloutIdBytes();
    }
    /**
     * <pre>
     * Optional unique identifier of this Rollout. Only lower case letters, digits
     *  and '-' are allowed.
     * If not specified by client, the server will generate one. The generated id
     * will have the form of &lt;date&gt;&lt;revision number&gt;, where "date" is the create
     * date in ISO 8601 format.  "revision number" is a monotonically increasing
     * positive number that is reset every day for each service.
     * An example of the generated rollout_id is '2016-02-16r1'
     * </pre>
     *
     * <code>optional string rollout_id = 1;</code>
     */
    public Builder setRolloutId(
        java.lang.String value) {
      copyOnWrite();
      instance.setRolloutId(value);
      return this;
    }
    /**
     * <pre>
     * Optional unique identifier of this Rollout. Only lower case letters, digits
     *  and '-' are allowed.
     * If not specified by client, the server will generate one. The generated id
     * will have the form of &lt;date&gt;&lt;revision number&gt;, where "date" is the create
     * date in ISO 8601 format.  "revision number" is a monotonically increasing
     * positive number that is reset every day for each service.
     * An example of the generated rollout_id is '2016-02-16r1'
     * </pre>
     *
     * <code>optional string rollout_id = 1;</code>
     */
    public Builder clearRolloutId() {
      copyOnWrite();
      instance.clearRolloutId();
      return this;
    }
    /**
     * <pre>
     * Optional unique identifier of this Rollout. Only lower case letters, digits
     *  and '-' are allowed.
     * If not specified by client, the server will generate one. The generated id
     * will have the form of &lt;date&gt;&lt;revision number&gt;, where "date" is the create
     * date in ISO 8601 format.  "revision number" is a monotonically increasing
     * positive number that is reset every day for each service.
     * An example of the generated rollout_id is '2016-02-16r1'
     * </pre>
     *
     * <code>optional string rollout_id = 1;</code>
     */
    public Builder setRolloutIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setRolloutIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * Creation time of the rollout. Readonly.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 2;</code>
     */
    public boolean hasCreateTime() {
      return instance.hasCreateTime();
    }
    /**
     * <pre>
     * Creation time of the rollout. Readonly.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 2;</code>
     */
    public com.google.protobuf.Timestamp getCreateTime() {
      return instance.getCreateTime();
    }
    /**
     * <pre>
     * Creation time of the rollout. Readonly.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 2;</code>
     */
    public Builder setCreateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setCreateTime(value);
      return this;
      }
    /**
     * <pre>
     * Creation time of the rollout. Readonly.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 2;</code>
     */
    public Builder setCreateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setCreateTime(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Creation time of the rollout. Readonly.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 2;</code>
     */
    public Builder mergeCreateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeCreateTime(value);
      return this;
    }
    /**
     * <pre>
     * Creation time of the rollout. Readonly.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 2;</code>
     */
    public Builder clearCreateTime() {  copyOnWrite();
      instance.clearCreateTime();
      return this;
    }

    /**
     * <pre>
     * The user who created the Rollout. Readonly.
     * </pre>
     *
     * <code>optional string created_by = 3;</code>
     */
    public java.lang.String getCreatedBy() {
      return instance.getCreatedBy();
    }
    /**
     * <pre>
     * The user who created the Rollout. Readonly.
     * </pre>
     *
     * <code>optional string created_by = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCreatedByBytes() {
      return instance.getCreatedByBytes();
    }
    /**
     * <pre>
     * The user who created the Rollout. Readonly.
     * </pre>
     *
     * <code>optional string created_by = 3;</code>
     */
    public Builder setCreatedBy(
        java.lang.String value) {
      copyOnWrite();
      instance.setCreatedBy(value);
      return this;
    }
    /**
     * <pre>
     * The user who created the Rollout. Readonly.
     * </pre>
     *
     * <code>optional string created_by = 3;</code>
     */
    public Builder clearCreatedBy() {
      copyOnWrite();
      instance.clearCreatedBy();
      return this;
    }
    /**
     * <pre>
     * The user who created the Rollout. Readonly.
     * </pre>
     *
     * <code>optional string created_by = 3;</code>
     */
    public Builder setCreatedByBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setCreatedByBytes(value);
      return this;
    }

    /**
     * <pre>
     * The status of this rollout. Readonly. In case of a failed rollout,
     * the system will automatically rollback to the current Rollout
     * version. Readonly.
     * </pre>
     *
     * <code>optional .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;</code>
     */
    public int getStatusValue() {
      return instance.getStatusValue();
    }
    /**
     * <pre>
     * The status of this rollout. Readonly. In case of a failed rollout,
     * the system will automatically rollback to the current Rollout
     * version. Readonly.
     * </pre>
     *
     * <code>optional .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;</code>
     */
    public Builder setStatusValue(int value) {
      copyOnWrite();
      instance.setStatusValue(value);
      return this;
    }
    /**
     * <pre>
     * The status of this rollout. Readonly. In case of a failed rollout,
     * the system will automatically rollback to the current Rollout
     * version. Readonly.
     * </pre>
     *
     * <code>optional .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;</code>
     */
    public com.google.api.servicemanagement.v1.Rollout.RolloutStatus getStatus() {
      return instance.getStatus();
    }
    /**
     * <pre>
     * The status of this rollout. Readonly. In case of a failed rollout,
     * the system will automatically rollback to the current Rollout
     * version. Readonly.
     * </pre>
     *
     * <code>optional .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;</code>
     */
    public Builder setStatus(com.google.api.servicemanagement.v1.Rollout.RolloutStatus value) {
      copyOnWrite();
      instance.setStatus(value);
      return this;
    }
    /**
     * <pre>
     * The status of this rollout. Readonly. In case of a failed rollout,
     * the system will automatically rollback to the current Rollout
     * version. Readonly.
     * </pre>
     *
     * <code>optional .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;</code>
     */
    public Builder clearStatus() {
      copyOnWrite();
      instance.clearStatus();
      return this;
    }

    /**
     * <pre>
     * Google Service Control selects service configurations based on
     * traffic percentage.
     * </pre>
     *
     * <code>optional .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
     */
    public com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy getTrafficPercentStrategy() {
      return instance.getTrafficPercentStrategy();
    }
    /**
     * <pre>
     * Google Service Control selects service configurations based on
     * traffic percentage.
     * </pre>
     *
     * <code>optional .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
     */
    public Builder setTrafficPercentStrategy(com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy value) {
      copyOnWrite();
      instance.setTrafficPercentStrategy(value);
      return this;
    }
    /**
     * <pre>
     * Google Service Control selects service configurations based on
     * traffic percentage.
     * </pre>
     *
     * <code>optional .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
     */
    public Builder setTrafficPercentStrategy(
        com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.Builder builderForValue) {
      copyOnWrite();
      instance.setTrafficPercentStrategy(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Google Service Control selects service configurations based on
     * traffic percentage.
     * </pre>
     *
     * <code>optional .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
     */
    public Builder mergeTrafficPercentStrategy(com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy value) {
      copyOnWrite();
      instance.mergeTrafficPercentStrategy(value);
      return this;
    }
    /**
     * <pre>
     * Google Service Control selects service configurations based on
     * traffic percentage.
     * </pre>
     *
     * <code>optional .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
     */
    public Builder clearTrafficPercentStrategy() {
      copyOnWrite();
      instance.clearTrafficPercentStrategy();
      return this;
    }

    /**
     * <pre>
     * The strategy associated with a rollout to delete a `ManagedService`.
     * Readonly.
     * </pre>
     *
     * <code>optional .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
     */
    public com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy getDeleteServiceStrategy() {
      return instance.getDeleteServiceStrategy();
    }
    /**
     * <pre>
     * The strategy associated with a rollout to delete a `ManagedService`.
     * Readonly.
     * </pre>
     *
     * <code>optional .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
     */
    public Builder setDeleteServiceStrategy(com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy value) {
      copyOnWrite();
      instance.setDeleteServiceStrategy(value);
      return this;
    }
    /**
     * <pre>
     * The strategy associated with a rollout to delete a `ManagedService`.
     * Readonly.
     * </pre>
     *
     * <code>optional .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
     */
    public Builder setDeleteServiceStrategy(
        com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.Builder builderForValue) {
      copyOnWrite();
      instance.setDeleteServiceStrategy(builderForValue);
      return this;
    }
    /**
     * <pre>
     * The strategy associated with a rollout to delete a `ManagedService`.
     * Readonly.
     * </pre>
     *
     * <code>optional .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
     */
    public Builder mergeDeleteServiceStrategy(com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy value) {
      copyOnWrite();
      instance.mergeDeleteServiceStrategy(value);
      return this;
    }
    /**
     * <pre>
     * The strategy associated with a rollout to delete a `ManagedService`.
     * Readonly.
     * </pre>
     *
     * <code>optional .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
     */
    public Builder clearDeleteServiceStrategy() {
      copyOnWrite();
      instance.clearDeleteServiceStrategy();
      return this;
    }

    /**
     * <pre>
     * The name of the service associated with this Rollout.
     * </pre>
     *
     * <code>optional string service_name = 8;</code>
     */
    public java.lang.String getServiceName() {
      return instance.getServiceName();
    }
    /**
     * <pre>
     * The name of the service associated with this Rollout.
     * </pre>
     *
     * <code>optional string service_name = 8;</code>
     */
    public com.google.protobuf.ByteString
        getServiceNameBytes() {
      return instance.getServiceNameBytes();
    }
    /**
     * <pre>
     * The name of the service associated with this Rollout.
     * </pre>
     *
     * <code>optional string service_name = 8;</code>
     */
    public Builder setServiceName(
        java.lang.String value) {
      copyOnWrite();
      instance.setServiceName(value);
      return this;
    }
    /**
     * <pre>
     * The name of the service associated with this Rollout.
     * </pre>
     *
     * <code>optional string service_name = 8;</code>
     */
    public Builder clearServiceName() {
      copyOnWrite();
      instance.clearServiceName();
      return this;
    }
    /**
     * <pre>
     * The name of the service associated with this Rollout.
     * </pre>
     *
     * <code>optional string service_name = 8;</code>
     */
    public Builder setServiceNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setServiceNameBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.api.servicemanagement.v1.Rollout)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.api.servicemanagement.v1.Rollout();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.google.api.servicemanagement.v1.Rollout other = (com.google.api.servicemanagement.v1.Rollout) arg1;
        rolloutId_ = visitor.visitString(!rolloutId_.isEmpty(), rolloutId_,
            !other.rolloutId_.isEmpty(), other.rolloutId_);
        createTime_ = visitor.visitMessage(createTime_, other.createTime_);
        createdBy_ = visitor.visitString(!createdBy_.isEmpty(), createdBy_,
            !other.createdBy_.isEmpty(), other.createdBy_);
        status_ = visitor.visitInt(status_ != 0, status_,    other.status_ != 0, other.status_);
        serviceName_ = visitor.visitString(!serviceName_.isEmpty(), serviceName_,
            !other.serviceName_.isEmpty(), other.serviceName_);
        switch (other.getStrategyCase()) {
          case TRAFFIC_PERCENT_STRATEGY: {
            strategy_ = visitor.visitOneofMessage(
                strategyCase_ == 5,
                strategy_,
                other.strategy_);
            break;
          }
          case DELETE_SERVICE_STRATEGY: {
            strategy_ = visitor.visitOneofMessage(
                strategyCase_ == 200,
                strategy_,
                other.strategy_);
            break;
          }
          case STRATEGY_NOT_SET: {
            visitor.visitOneofNotSet(strategyCase_ != 0);
            break;
          }
        }
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          if (other.strategyCase_ != 0) {
            strategyCase_ = other.strategyCase_;
          }
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                rolloutId_ = s;
                break;
              }
              case 18: {
                com.google.protobuf.Timestamp.Builder subBuilder = null;
                if (createTime_ != null) {
                  subBuilder = createTime_.toBuilder();
                }
                createTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(createTime_);
                  createTime_ = subBuilder.buildPartial();
                }

                break;
              }
              case 26: {
                String s = input.readStringRequireUtf8();

                createdBy_ = s;
                break;
              }
              case 32: {
                int rawValue = input.readEnum();

                status_ = rawValue;
                break;
              }
              case 42: {
                com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.Builder subBuilder = null;
                if (strategyCase_ == 5) {
                  subBuilder = ((com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) strategy_).toBuilder();
                }
                strategy_ =
                     input.readMessage(com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((com.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) strategy_);
                  strategy_ = subBuilder.buildPartial();
                }
                strategyCase_ = 5;
                break;
              }
              case 66: {
                String s = input.readStringRequireUtf8();

                serviceName_ = s;
                break;
              }
              case 1602: {
                com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.Builder subBuilder = null;
                if (strategyCase_ == 200) {
                  subBuilder = ((com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) strategy_).toBuilder();
                }
                strategy_ =
                     input.readMessage(com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((com.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) strategy_);
                  strategy_ = subBuilder.buildPartial();
                }
                strategyCase_ = 200;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.google.api.servicemanagement.v1.Rollout.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.Rollout)
  private static final com.google.api.servicemanagement.v1.Rollout DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Rollout();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.google.api.servicemanagement.v1.Rollout getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Rollout> PARSER;

  public static com.google.protobuf.Parser<Rollout> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

