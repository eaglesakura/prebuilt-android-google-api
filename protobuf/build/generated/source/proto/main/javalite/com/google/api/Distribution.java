// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/distribution.proto

package com.google.api;

/**
 * <pre>
 * Distribution contains summary statistics for a population of values and,
 * optionally, a histogram representing the distribution of those values across
 * a specified set of histogram buckets.
 * The summary statistics are the count, mean, sum of the squared deviation from
 * the mean, the minimum, and the maximum of the set of population of values.
 * The histogram is based on a sequence of buckets and gives a count of values
 * that fall into each bucket.  The boundaries of the buckets are given either
 * explicitly or by specifying parameters for a method of computing them
 * (buckets of fixed width or buckets of exponentially increasing width).
 * Although it is not forbidden, it is generally a bad idea to include
 * non-finite values (infinities or NaNs) in the population of values, as this
 * will render the `mean` and `sum_of_squared_deviation` fields meaningless.
 * </pre>
 *
 * Protobuf type {@code google.api.Distribution}
 */
public  final class Distribution extends
    com.google.protobuf.GeneratedMessageLite<
        Distribution, Distribution.Builder> implements
    // @@protoc_insertion_point(message_implements:google.api.Distribution)
    DistributionOrBuilder {
  private Distribution() {
    bucketCounts_ = emptyLongList();
  }
  public interface RangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.api.Distribution.Range)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The minimum of the population values.
     * </pre>
     *
     * <code>optional double min = 1;</code>
     */
    double getMin();

    /**
     * <pre>
     * The maximum of the population values.
     * </pre>
     *
     * <code>optional double max = 2;</code>
     */
    double getMax();
  }
  /**
   * <pre>
   * The range of the population values.
   * </pre>
   *
   * Protobuf type {@code google.api.Distribution.Range}
   */
  public  static final class Range extends
      com.google.protobuf.GeneratedMessageLite<
          Range, Range.Builder> implements
      // @@protoc_insertion_point(message_implements:google.api.Distribution.Range)
      RangeOrBuilder {
    private Range() {
    }
    public static final int MIN_FIELD_NUMBER = 1;
    private double min_;
    /**
     * <pre>
     * The minimum of the population values.
     * </pre>
     *
     * <code>optional double min = 1;</code>
     */
    public double getMin() {
      return min_;
    }
    /**
     * <pre>
     * The minimum of the population values.
     * </pre>
     *
     * <code>optional double min = 1;</code>
     */
    private void setMin(double value) {
      
      min_ = value;
    }
    /**
     * <pre>
     * The minimum of the population values.
     * </pre>
     *
     * <code>optional double min = 1;</code>
     */
    private void clearMin() {
      
      min_ = 0D;
    }

    public static final int MAX_FIELD_NUMBER = 2;
    private double max_;
    /**
     * <pre>
     * The maximum of the population values.
     * </pre>
     *
     * <code>optional double max = 2;</code>
     */
    public double getMax() {
      return max_;
    }
    /**
     * <pre>
     * The maximum of the population values.
     * </pre>
     *
     * <code>optional double max = 2;</code>
     */
    private void setMax(double value) {
      
      max_ = value;
    }
    /**
     * <pre>
     * The maximum of the population values.
     * </pre>
     *
     * <code>optional double max = 2;</code>
     */
    private void clearMax() {
      
      max_ = 0D;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (min_ != 0D) {
        output.writeDouble(1, min_);
      }
      if (max_ != 0D) {
        output.writeDouble(2, max_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (min_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, min_);
      }
      if (max_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, max_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.api.Distribution.Range parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.api.Distribution.Range parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.api.Distribution.Range parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.api.Distribution.Range parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.api.Distribution.Range parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.api.Distribution.Range parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.api.Distribution.Range parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.api.Distribution.Range parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.api.Distribution.Range parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.api.Distribution.Range parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.api.Distribution.Range prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * The range of the population values.
     * </pre>
     *
     * Protobuf type {@code google.api.Distribution.Range}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.api.Distribution.Range, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.api.Distribution.Range)
        com.google.api.Distribution.RangeOrBuilder {
      // Construct using com.google.api.Distribution.Range.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The minimum of the population values.
       * </pre>
       *
       * <code>optional double min = 1;</code>
       */
      public double getMin() {
        return instance.getMin();
      }
      /**
       * <pre>
       * The minimum of the population values.
       * </pre>
       *
       * <code>optional double min = 1;</code>
       */
      public Builder setMin(double value) {
        copyOnWrite();
        instance.setMin(value);
        return this;
      }
      /**
       * <pre>
       * The minimum of the population values.
       * </pre>
       *
       * <code>optional double min = 1;</code>
       */
      public Builder clearMin() {
        copyOnWrite();
        instance.clearMin();
        return this;
      }

      /**
       * <pre>
       * The maximum of the population values.
       * </pre>
       *
       * <code>optional double max = 2;</code>
       */
      public double getMax() {
        return instance.getMax();
      }
      /**
       * <pre>
       * The maximum of the population values.
       * </pre>
       *
       * <code>optional double max = 2;</code>
       */
      public Builder setMax(double value) {
        copyOnWrite();
        instance.setMax(value);
        return this;
      }
      /**
       * <pre>
       * The maximum of the population values.
       * </pre>
       *
       * <code>optional double max = 2;</code>
       */
      public Builder clearMax() {
        copyOnWrite();
        instance.clearMax();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.api.Distribution.Range)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.api.Distribution.Range();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.api.Distribution.Range other = (com.google.api.Distribution.Range) arg1;
          min_ = visitor.visitDouble(min_ != 0D, min_,
              other.min_ != 0D, other.min_);
          max_ = visitor.visitDouble(max_ != 0D, max_,
              other.max_ != 0D, other.max_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 9: {

                  min_ = input.readDouble();
                  break;
                }
                case 17: {

                  max_ = input.readDouble();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.api.Distribution.Range.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.api.Distribution.Range)
    private static final com.google.api.Distribution.Range DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Range();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.api.Distribution.Range getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Range> PARSER;

    public static com.google.protobuf.Parser<Range> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BucketOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.api.Distribution.BucketOptions)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The linear bucket.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;</code>
     */
    com.google.api.Distribution.BucketOptions.Linear getLinearBuckets();

    /**
     * <pre>
     * The exponential buckets.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;</code>
     */
    com.google.api.Distribution.BucketOptions.Exponential getExponentialBuckets();

    /**
     * <pre>
     * The explicit buckets.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;</code>
     */
    com.google.api.Distribution.BucketOptions.Explicit getExplicitBuckets();

    public com.google.api.Distribution.BucketOptions.OptionsCase getOptionsCase();
  }
  /**
   * <pre>
   * A Distribution may optionally contain a histogram of the values in the
   * population.  The histogram is given in `bucket_counts` as counts of values
   * that fall into one of a sequence of non-overlapping buckets.  The sequence
   * of buckets is described by `bucket_options`.
   * A bucket specifies an inclusive lower bound and exclusive upper bound for
   * the values that are counted for that bucket.  The upper bound of a bucket
   * is strictly greater than the lower bound.
   * The sequence of N buckets for a Distribution consists of an underflow
   * bucket (number 0), zero or more finite buckets (number 1 through N - 2) and
   * an overflow bucket (number N - 1).  The buckets are contiguous:  the lower
   * bound of bucket i (i &gt; 0) is the same as the upper bound of bucket i - 1.
   * The buckets span the whole range of finite values: lower bound of the
   * underflow bucket is -infinity and the upper bound of the overflow bucket is
   * +infinity.  The finite buckets are so-called because both bounds are
   * finite.
   * `BucketOptions` describes bucket boundaries in one of three ways.  Two
   * describe the boundaries by giving parameters for a formula to generate
   * boundaries and one gives the bucket boundaries explicitly.
   * If `bucket_boundaries` is not given, then no `bucket_counts` may be given.
   * </pre>
   *
   * Protobuf type {@code google.api.Distribution.BucketOptions}
   */
  public  static final class BucketOptions extends
      com.google.protobuf.GeneratedMessageLite<
          BucketOptions, BucketOptions.Builder> implements
      // @@protoc_insertion_point(message_implements:google.api.Distribution.BucketOptions)
      BucketOptionsOrBuilder {
    private BucketOptions() {
    }
    public interface LinearOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.api.Distribution.BucketOptions.Linear)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Must be greater than 0.
       * </pre>
       *
       * <code>optional int32 num_finite_buckets = 1;</code>
       */
      int getNumFiniteBuckets();

      /**
       * <pre>
       * Must be greater than 0.
       * </pre>
       *
       * <code>optional double width = 2;</code>
       */
      double getWidth();

      /**
       * <pre>
       * Lower bound of the first bucket.
       * </pre>
       *
       * <code>optional double offset = 3;</code>
       */
      double getOffset();
    }
    /**
     * <pre>
     * Specify a sequence of buckets that all have the same width (except
     * overflow and underflow).  Each bucket represents a constant absolute
     * uncertainty on the specific value in the bucket.
     * Defines `num_finite_buckets + 2` (= N) buckets with these boundaries for
     * bucket `i`:
     *    Upper bound (0 &lt;= i &lt; N-1):     offset + (width * i).
     *    Lower bound (1 &lt;= i &lt; N):       offset + (width * (i - 1)).
     * </pre>
     *
     * Protobuf type {@code google.api.Distribution.BucketOptions.Linear}
     */
    public  static final class Linear extends
        com.google.protobuf.GeneratedMessageLite<
            Linear, Linear.Builder> implements
        // @@protoc_insertion_point(message_implements:google.api.Distribution.BucketOptions.Linear)
        LinearOrBuilder {
      private Linear() {
      }
      public static final int NUM_FINITE_BUCKETS_FIELD_NUMBER = 1;
      private int numFiniteBuckets_;
      /**
       * <pre>
       * Must be greater than 0.
       * </pre>
       *
       * <code>optional int32 num_finite_buckets = 1;</code>
       */
      public int getNumFiniteBuckets() {
        return numFiniteBuckets_;
      }
      /**
       * <pre>
       * Must be greater than 0.
       * </pre>
       *
       * <code>optional int32 num_finite_buckets = 1;</code>
       */
      private void setNumFiniteBuckets(int value) {
        
        numFiniteBuckets_ = value;
      }
      /**
       * <pre>
       * Must be greater than 0.
       * </pre>
       *
       * <code>optional int32 num_finite_buckets = 1;</code>
       */
      private void clearNumFiniteBuckets() {
        
        numFiniteBuckets_ = 0;
      }

      public static final int WIDTH_FIELD_NUMBER = 2;
      private double width_;
      /**
       * <pre>
       * Must be greater than 0.
       * </pre>
       *
       * <code>optional double width = 2;</code>
       */
      public double getWidth() {
        return width_;
      }
      /**
       * <pre>
       * Must be greater than 0.
       * </pre>
       *
       * <code>optional double width = 2;</code>
       */
      private void setWidth(double value) {
        
        width_ = value;
      }
      /**
       * <pre>
       * Must be greater than 0.
       * </pre>
       *
       * <code>optional double width = 2;</code>
       */
      private void clearWidth() {
        
        width_ = 0D;
      }

      public static final int OFFSET_FIELD_NUMBER = 3;
      private double offset_;
      /**
       * <pre>
       * Lower bound of the first bucket.
       * </pre>
       *
       * <code>optional double offset = 3;</code>
       */
      public double getOffset() {
        return offset_;
      }
      /**
       * <pre>
       * Lower bound of the first bucket.
       * </pre>
       *
       * <code>optional double offset = 3;</code>
       */
      private void setOffset(double value) {
        
        offset_ = value;
      }
      /**
       * <pre>
       * Lower bound of the first bucket.
       * </pre>
       *
       * <code>optional double offset = 3;</code>
       */
      private void clearOffset() {
        
        offset_ = 0D;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (numFiniteBuckets_ != 0) {
          output.writeInt32(1, numFiniteBuckets_);
        }
        if (width_ != 0D) {
          output.writeDouble(2, width_);
        }
        if (offset_ != 0D) {
          output.writeDouble(3, offset_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (numFiniteBuckets_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, numFiniteBuckets_);
        }
        if (width_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, width_);
        }
        if (offset_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, offset_);
        }
        memoizedSerializedSize = size;
        return size;
      }

      public static com.google.api.Distribution.BucketOptions.Linear parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.api.Distribution.BucketOptions.Linear parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.api.Distribution.BucketOptions.Linear parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.api.Distribution.BucketOptions.Linear parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.api.Distribution.BucketOptions.Linear parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.api.Distribution.BucketOptions.Linear parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.api.Distribution.BucketOptions.Linear parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.google.api.Distribution.BucketOptions.Linear parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.api.Distribution.BucketOptions.Linear parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.api.Distribution.BucketOptions.Linear parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.api.Distribution.BucketOptions.Linear prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * <pre>
       * Specify a sequence of buckets that all have the same width (except
       * overflow and underflow).  Each bucket represents a constant absolute
       * uncertainty on the specific value in the bucket.
       * Defines `num_finite_buckets + 2` (= N) buckets with these boundaries for
       * bucket `i`:
       *    Upper bound (0 &lt;= i &lt; N-1):     offset + (width * i).
       *    Lower bound (1 &lt;= i &lt; N):       offset + (width * (i - 1)).
       * </pre>
       *
       * Protobuf type {@code google.api.Distribution.BucketOptions.Linear}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.api.Distribution.BucketOptions.Linear, Builder> implements
          // @@protoc_insertion_point(builder_implements:google.api.Distribution.BucketOptions.Linear)
          com.google.api.Distribution.BucketOptions.LinearOrBuilder {
        // Construct using com.google.api.Distribution.BucketOptions.Linear.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Must be greater than 0.
         * </pre>
         *
         * <code>optional int32 num_finite_buckets = 1;</code>
         */
        public int getNumFiniteBuckets() {
          return instance.getNumFiniteBuckets();
        }
        /**
         * <pre>
         * Must be greater than 0.
         * </pre>
         *
         * <code>optional int32 num_finite_buckets = 1;</code>
         */
        public Builder setNumFiniteBuckets(int value) {
          copyOnWrite();
          instance.setNumFiniteBuckets(value);
          return this;
        }
        /**
         * <pre>
         * Must be greater than 0.
         * </pre>
         *
         * <code>optional int32 num_finite_buckets = 1;</code>
         */
        public Builder clearNumFiniteBuckets() {
          copyOnWrite();
          instance.clearNumFiniteBuckets();
          return this;
        }

        /**
         * <pre>
         * Must be greater than 0.
         * </pre>
         *
         * <code>optional double width = 2;</code>
         */
        public double getWidth() {
          return instance.getWidth();
        }
        /**
         * <pre>
         * Must be greater than 0.
         * </pre>
         *
         * <code>optional double width = 2;</code>
         */
        public Builder setWidth(double value) {
          copyOnWrite();
          instance.setWidth(value);
          return this;
        }
        /**
         * <pre>
         * Must be greater than 0.
         * </pre>
         *
         * <code>optional double width = 2;</code>
         */
        public Builder clearWidth() {
          copyOnWrite();
          instance.clearWidth();
          return this;
        }

        /**
         * <pre>
         * Lower bound of the first bucket.
         * </pre>
         *
         * <code>optional double offset = 3;</code>
         */
        public double getOffset() {
          return instance.getOffset();
        }
        /**
         * <pre>
         * Lower bound of the first bucket.
         * </pre>
         *
         * <code>optional double offset = 3;</code>
         */
        public Builder setOffset(double value) {
          copyOnWrite();
          instance.setOffset(value);
          return this;
        }
        /**
         * <pre>
         * Lower bound of the first bucket.
         * </pre>
         *
         * <code>optional double offset = 3;</code>
         */
        public Builder clearOffset() {
          copyOnWrite();
          instance.clearOffset();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:google.api.Distribution.BucketOptions.Linear)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.google.api.Distribution.BucketOptions.Linear();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.google.api.Distribution.BucketOptions.Linear other = (com.google.api.Distribution.BucketOptions.Linear) arg1;
            numFiniteBuckets_ = visitor.visitInt(numFiniteBuckets_ != 0, numFiniteBuckets_,
                other.numFiniteBuckets_ != 0, other.numFiniteBuckets_);
            width_ = visitor.visitDouble(width_ != 0D, width_,
                other.width_ != 0D, other.width_);
            offset_ = visitor.visitDouble(offset_ != 0D, offset_,
                other.offset_ != 0D, other.offset_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!input.skipField(tag)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {

                    numFiniteBuckets_ = input.readInt32();
                    break;
                  }
                  case 17: {

                    width_ = input.readDouble();
                    break;
                  }
                  case 25: {

                    offset_ = input.readDouble();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (com.google.api.Distribution.BucketOptions.Linear.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:google.api.Distribution.BucketOptions.Linear)
      private static final com.google.api.Distribution.BucketOptions.Linear DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Linear();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static com.google.api.Distribution.BucketOptions.Linear getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Linear> PARSER;

      public static com.google.protobuf.Parser<Linear> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface ExponentialOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.api.Distribution.BucketOptions.Exponential)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Must be greater than 0.
       * </pre>
       *
       * <code>optional int32 num_finite_buckets = 1;</code>
       */
      int getNumFiniteBuckets();

      /**
       * <pre>
       * Must be greater than 1.
       * </pre>
       *
       * <code>optional double growth_factor = 2;</code>
       */
      double getGrowthFactor();

      /**
       * <pre>
       * Must be greater than 0.
       * </pre>
       *
       * <code>optional double scale = 3;</code>
       */
      double getScale();
    }
    /**
     * <pre>
     * Specify a sequence of buckets that have a width that is proportional to
     * the value of the lower bound.  Each bucket represents a constant relative
     * uncertainty on a specific value in the bucket.
     * Defines `num_finite_buckets + 2` (= N) buckets with these boundaries for
     * bucket i:
     *    Upper bound (0 &lt;= i &lt; N-1):     scale * (growth_factor ^ i).
     *    Lower bound (1 &lt;= i &lt; N):       scale * (growth_factor ^ (i - 1)).
     * </pre>
     *
     * Protobuf type {@code google.api.Distribution.BucketOptions.Exponential}
     */
    public  static final class Exponential extends
        com.google.protobuf.GeneratedMessageLite<
            Exponential, Exponential.Builder> implements
        // @@protoc_insertion_point(message_implements:google.api.Distribution.BucketOptions.Exponential)
        ExponentialOrBuilder {
      private Exponential() {
      }
      public static final int NUM_FINITE_BUCKETS_FIELD_NUMBER = 1;
      private int numFiniteBuckets_;
      /**
       * <pre>
       * Must be greater than 0.
       * </pre>
       *
       * <code>optional int32 num_finite_buckets = 1;</code>
       */
      public int getNumFiniteBuckets() {
        return numFiniteBuckets_;
      }
      /**
       * <pre>
       * Must be greater than 0.
       * </pre>
       *
       * <code>optional int32 num_finite_buckets = 1;</code>
       */
      private void setNumFiniteBuckets(int value) {
        
        numFiniteBuckets_ = value;
      }
      /**
       * <pre>
       * Must be greater than 0.
       * </pre>
       *
       * <code>optional int32 num_finite_buckets = 1;</code>
       */
      private void clearNumFiniteBuckets() {
        
        numFiniteBuckets_ = 0;
      }

      public static final int GROWTH_FACTOR_FIELD_NUMBER = 2;
      private double growthFactor_;
      /**
       * <pre>
       * Must be greater than 1.
       * </pre>
       *
       * <code>optional double growth_factor = 2;</code>
       */
      public double getGrowthFactor() {
        return growthFactor_;
      }
      /**
       * <pre>
       * Must be greater than 1.
       * </pre>
       *
       * <code>optional double growth_factor = 2;</code>
       */
      private void setGrowthFactor(double value) {
        
        growthFactor_ = value;
      }
      /**
       * <pre>
       * Must be greater than 1.
       * </pre>
       *
       * <code>optional double growth_factor = 2;</code>
       */
      private void clearGrowthFactor() {
        
        growthFactor_ = 0D;
      }

      public static final int SCALE_FIELD_NUMBER = 3;
      private double scale_;
      /**
       * <pre>
       * Must be greater than 0.
       * </pre>
       *
       * <code>optional double scale = 3;</code>
       */
      public double getScale() {
        return scale_;
      }
      /**
       * <pre>
       * Must be greater than 0.
       * </pre>
       *
       * <code>optional double scale = 3;</code>
       */
      private void setScale(double value) {
        
        scale_ = value;
      }
      /**
       * <pre>
       * Must be greater than 0.
       * </pre>
       *
       * <code>optional double scale = 3;</code>
       */
      private void clearScale() {
        
        scale_ = 0D;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (numFiniteBuckets_ != 0) {
          output.writeInt32(1, numFiniteBuckets_);
        }
        if (growthFactor_ != 0D) {
          output.writeDouble(2, growthFactor_);
        }
        if (scale_ != 0D) {
          output.writeDouble(3, scale_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (numFiniteBuckets_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, numFiniteBuckets_);
        }
        if (growthFactor_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, growthFactor_);
        }
        if (scale_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, scale_);
        }
        memoizedSerializedSize = size;
        return size;
      }

      public static com.google.api.Distribution.BucketOptions.Exponential parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.api.Distribution.BucketOptions.Exponential parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.api.Distribution.BucketOptions.Exponential parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.api.Distribution.BucketOptions.Exponential parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.api.Distribution.BucketOptions.Exponential parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.api.Distribution.BucketOptions.Exponential parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.api.Distribution.BucketOptions.Exponential parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.google.api.Distribution.BucketOptions.Exponential parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.api.Distribution.BucketOptions.Exponential parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.api.Distribution.BucketOptions.Exponential parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.api.Distribution.BucketOptions.Exponential prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * <pre>
       * Specify a sequence of buckets that have a width that is proportional to
       * the value of the lower bound.  Each bucket represents a constant relative
       * uncertainty on a specific value in the bucket.
       * Defines `num_finite_buckets + 2` (= N) buckets with these boundaries for
       * bucket i:
       *    Upper bound (0 &lt;= i &lt; N-1):     scale * (growth_factor ^ i).
       *    Lower bound (1 &lt;= i &lt; N):       scale * (growth_factor ^ (i - 1)).
       * </pre>
       *
       * Protobuf type {@code google.api.Distribution.BucketOptions.Exponential}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.api.Distribution.BucketOptions.Exponential, Builder> implements
          // @@protoc_insertion_point(builder_implements:google.api.Distribution.BucketOptions.Exponential)
          com.google.api.Distribution.BucketOptions.ExponentialOrBuilder {
        // Construct using com.google.api.Distribution.BucketOptions.Exponential.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Must be greater than 0.
         * </pre>
         *
         * <code>optional int32 num_finite_buckets = 1;</code>
         */
        public int getNumFiniteBuckets() {
          return instance.getNumFiniteBuckets();
        }
        /**
         * <pre>
         * Must be greater than 0.
         * </pre>
         *
         * <code>optional int32 num_finite_buckets = 1;</code>
         */
        public Builder setNumFiniteBuckets(int value) {
          copyOnWrite();
          instance.setNumFiniteBuckets(value);
          return this;
        }
        /**
         * <pre>
         * Must be greater than 0.
         * </pre>
         *
         * <code>optional int32 num_finite_buckets = 1;</code>
         */
        public Builder clearNumFiniteBuckets() {
          copyOnWrite();
          instance.clearNumFiniteBuckets();
          return this;
        }

        /**
         * <pre>
         * Must be greater than 1.
         * </pre>
         *
         * <code>optional double growth_factor = 2;</code>
         */
        public double getGrowthFactor() {
          return instance.getGrowthFactor();
        }
        /**
         * <pre>
         * Must be greater than 1.
         * </pre>
         *
         * <code>optional double growth_factor = 2;</code>
         */
        public Builder setGrowthFactor(double value) {
          copyOnWrite();
          instance.setGrowthFactor(value);
          return this;
        }
        /**
         * <pre>
         * Must be greater than 1.
         * </pre>
         *
         * <code>optional double growth_factor = 2;</code>
         */
        public Builder clearGrowthFactor() {
          copyOnWrite();
          instance.clearGrowthFactor();
          return this;
        }

        /**
         * <pre>
         * Must be greater than 0.
         * </pre>
         *
         * <code>optional double scale = 3;</code>
         */
        public double getScale() {
          return instance.getScale();
        }
        /**
         * <pre>
         * Must be greater than 0.
         * </pre>
         *
         * <code>optional double scale = 3;</code>
         */
        public Builder setScale(double value) {
          copyOnWrite();
          instance.setScale(value);
          return this;
        }
        /**
         * <pre>
         * Must be greater than 0.
         * </pre>
         *
         * <code>optional double scale = 3;</code>
         */
        public Builder clearScale() {
          copyOnWrite();
          instance.clearScale();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:google.api.Distribution.BucketOptions.Exponential)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.google.api.Distribution.BucketOptions.Exponential();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.google.api.Distribution.BucketOptions.Exponential other = (com.google.api.Distribution.BucketOptions.Exponential) arg1;
            numFiniteBuckets_ = visitor.visitInt(numFiniteBuckets_ != 0, numFiniteBuckets_,
                other.numFiniteBuckets_ != 0, other.numFiniteBuckets_);
            growthFactor_ = visitor.visitDouble(growthFactor_ != 0D, growthFactor_,
                other.growthFactor_ != 0D, other.growthFactor_);
            scale_ = visitor.visitDouble(scale_ != 0D, scale_,
                other.scale_ != 0D, other.scale_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!input.skipField(tag)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {

                    numFiniteBuckets_ = input.readInt32();
                    break;
                  }
                  case 17: {

                    growthFactor_ = input.readDouble();
                    break;
                  }
                  case 25: {

                    scale_ = input.readDouble();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (com.google.api.Distribution.BucketOptions.Exponential.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:google.api.Distribution.BucketOptions.Exponential)
      private static final com.google.api.Distribution.BucketOptions.Exponential DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Exponential();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static com.google.api.Distribution.BucketOptions.Exponential getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Exponential> PARSER;

      public static com.google.protobuf.Parser<Exponential> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface ExplicitOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.api.Distribution.BucketOptions.Explicit)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * The values must be monotonically increasing.
       * </pre>
       *
       * <code>repeated double bounds = 1;</code>
       */
      java.util.List<java.lang.Double> getBoundsList();
      /**
       * <pre>
       * The values must be monotonically increasing.
       * </pre>
       *
       * <code>repeated double bounds = 1;</code>
       */
      int getBoundsCount();
      /**
       * <pre>
       * The values must be monotonically increasing.
       * </pre>
       *
       * <code>repeated double bounds = 1;</code>
       */
      double getBounds(int index);
    }
    /**
     * <pre>
     * A set of buckets with arbitrary widths.
     * Defines `size(bounds) + 1` (= N) buckets with these boundaries for
     * bucket i:
     *    Upper bound (0 &lt;= i &lt; N-1):     bounds[i]
     *    Lower bound (1 &lt;= i &lt; N);       bounds[i - 1]
     * There must be at least one element in `bounds`.  If `bounds` has only one
     * element, there are no finite buckets, and that single element is the
     * common boundary of the overflow and underflow buckets.
     * </pre>
     *
     * Protobuf type {@code google.api.Distribution.BucketOptions.Explicit}
     */
    public  static final class Explicit extends
        com.google.protobuf.GeneratedMessageLite<
            Explicit, Explicit.Builder> implements
        // @@protoc_insertion_point(message_implements:google.api.Distribution.BucketOptions.Explicit)
        ExplicitOrBuilder {
      private Explicit() {
        bounds_ = emptyDoubleList();
      }
      public static final int BOUNDS_FIELD_NUMBER = 1;
      private com.google.protobuf.Internal.DoubleList bounds_;
      /**
       * <pre>
       * The values must be monotonically increasing.
       * </pre>
       *
       * <code>repeated double bounds = 1;</code>
       */
      public java.util.List<java.lang.Double>
          getBoundsList() {
        return bounds_;
      }
      /**
       * <pre>
       * The values must be monotonically increasing.
       * </pre>
       *
       * <code>repeated double bounds = 1;</code>
       */
      public int getBoundsCount() {
        return bounds_.size();
      }
      /**
       * <pre>
       * The values must be monotonically increasing.
       * </pre>
       *
       * <code>repeated double bounds = 1;</code>
       */
      public double getBounds(int index) {
        return bounds_.getDouble(index);
      }
      private void ensureBoundsIsMutable() {
        if (!bounds_.isModifiable()) {
          bounds_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(bounds_);
         }
      }
      /**
       * <pre>
       * The values must be monotonically increasing.
       * </pre>
       *
       * <code>repeated double bounds = 1;</code>
       */
      private void setBounds(
          int index, double value) {
        ensureBoundsIsMutable();
        bounds_.setDouble(index, value);
      }
      /**
       * <pre>
       * The values must be monotonically increasing.
       * </pre>
       *
       * <code>repeated double bounds = 1;</code>
       */
      private void addBounds(double value) {
        ensureBoundsIsMutable();
        bounds_.addDouble(value);
      }
      /**
       * <pre>
       * The values must be monotonically increasing.
       * </pre>
       *
       * <code>repeated double bounds = 1;</code>
       */
      private void addAllBounds(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureBoundsIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, bounds_);
      }
      /**
       * <pre>
       * The values must be monotonically increasing.
       * </pre>
       *
       * <code>repeated double bounds = 1;</code>
       */
      private void clearBounds() {
        bounds_ = emptyDoubleList();
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < bounds_.size(); i++) {
          output.writeDouble(1, bounds_.getDouble(i));
        }
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          dataSize = 8 * getBoundsList().size();
          size += dataSize;
          size += 1 * getBoundsList().size();
        }
        memoizedSerializedSize = size;
        return size;
      }

      public static com.google.api.Distribution.BucketOptions.Explicit parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.api.Distribution.BucketOptions.Explicit parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.api.Distribution.BucketOptions.Explicit parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.api.Distribution.BucketOptions.Explicit parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.api.Distribution.BucketOptions.Explicit parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.api.Distribution.BucketOptions.Explicit parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.api.Distribution.BucketOptions.Explicit parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.google.api.Distribution.BucketOptions.Explicit parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.api.Distribution.BucketOptions.Explicit parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.api.Distribution.BucketOptions.Explicit parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.api.Distribution.BucketOptions.Explicit prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * <pre>
       * A set of buckets with arbitrary widths.
       * Defines `size(bounds) + 1` (= N) buckets with these boundaries for
       * bucket i:
       *    Upper bound (0 &lt;= i &lt; N-1):     bounds[i]
       *    Lower bound (1 &lt;= i &lt; N);       bounds[i - 1]
       * There must be at least one element in `bounds`.  If `bounds` has only one
       * element, there are no finite buckets, and that single element is the
       * common boundary of the overflow and underflow buckets.
       * </pre>
       *
       * Protobuf type {@code google.api.Distribution.BucketOptions.Explicit}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.api.Distribution.BucketOptions.Explicit, Builder> implements
          // @@protoc_insertion_point(builder_implements:google.api.Distribution.BucketOptions.Explicit)
          com.google.api.Distribution.BucketOptions.ExplicitOrBuilder {
        // Construct using com.google.api.Distribution.BucketOptions.Explicit.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * The values must be monotonically increasing.
         * </pre>
         *
         * <code>repeated double bounds = 1;</code>
         */
        public java.util.List<java.lang.Double>
            getBoundsList() {
          return java.util.Collections.unmodifiableList(
              instance.getBoundsList());
        }
        /**
         * <pre>
         * The values must be monotonically increasing.
         * </pre>
         *
         * <code>repeated double bounds = 1;</code>
         */
        public int getBoundsCount() {
          return instance.getBoundsCount();
        }
        /**
         * <pre>
         * The values must be monotonically increasing.
         * </pre>
         *
         * <code>repeated double bounds = 1;</code>
         */
        public double getBounds(int index) {
          return instance.getBounds(index);
        }
        /**
         * <pre>
         * The values must be monotonically increasing.
         * </pre>
         *
         * <code>repeated double bounds = 1;</code>
         */
        public Builder setBounds(
            int index, double value) {
          copyOnWrite();
          instance.setBounds(index, value);
          return this;
        }
        /**
         * <pre>
         * The values must be monotonically increasing.
         * </pre>
         *
         * <code>repeated double bounds = 1;</code>
         */
        public Builder addBounds(double value) {
          copyOnWrite();
          instance.addBounds(value);
          return this;
        }
        /**
         * <pre>
         * The values must be monotonically increasing.
         * </pre>
         *
         * <code>repeated double bounds = 1;</code>
         */
        public Builder addAllBounds(
            java.lang.Iterable<? extends java.lang.Double> values) {
          copyOnWrite();
          instance.addAllBounds(values);
          return this;
        }
        /**
         * <pre>
         * The values must be monotonically increasing.
         * </pre>
         *
         * <code>repeated double bounds = 1;</code>
         */
        public Builder clearBounds() {
          copyOnWrite();
          instance.clearBounds();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:google.api.Distribution.BucketOptions.Explicit)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.google.api.Distribution.BucketOptions.Explicit();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            bounds_.makeImmutable();
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.google.api.Distribution.BucketOptions.Explicit other = (com.google.api.Distribution.BucketOptions.Explicit) arg1;
            bounds_= visitor.visitDoubleList(bounds_, other.bounds_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!input.skipField(tag)) {
                      done = true;
                    }
                    break;
                  }
                  case 9: {
                    if (!bounds_.isModifiable()) {
                      bounds_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(bounds_);
                    }
                    bounds_.addDouble(input.readDouble());
                    break;
                  }
                  case 10: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    if (!bounds_.isModifiable() && input.getBytesUntilLimit() > 0) {
                      final int currentSize = bounds_.size();
                      bounds_ = bounds_.mutableCopyWithCapacity(
                          currentSize + (length/8));
                    }
                    while (input.getBytesUntilLimit() > 0) {
                      bounds_.addDouble(input.readDouble());
                    }
                    input.popLimit(limit);
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (com.google.api.Distribution.BucketOptions.Explicit.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:google.api.Distribution.BucketOptions.Explicit)
      private static final com.google.api.Distribution.BucketOptions.Explicit DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Explicit();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static com.google.api.Distribution.BucketOptions.Explicit getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Explicit> PARSER;

      public static com.google.protobuf.Parser<Explicit> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int optionsCase_ = 0;
    private java.lang.Object options_;
    public enum OptionsCase
        implements com.google.protobuf.Internal.EnumLite {
      LINEAR_BUCKETS(1),
      EXPONENTIAL_BUCKETS(2),
      EXPLICIT_BUCKETS(3),
      OPTIONS_NOT_SET(0);
      private final int value;
      private OptionsCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionsCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionsCase forNumber(int value) {
        switch (value) {
          case 1: return LINEAR_BUCKETS;
          case 2: return EXPONENTIAL_BUCKETS;
          case 3: return EXPLICIT_BUCKETS;
          case 0: return OPTIONS_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionsCase
    getOptionsCase() {
      return OptionsCase.forNumber(
          optionsCase_);
    }

    private void clearOptions() {
      optionsCase_ = 0;
      options_ = null;
    }

    public static final int LINEAR_BUCKETS_FIELD_NUMBER = 1;
    /**
     * <pre>
     * The linear bucket.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;</code>
     */
    public com.google.api.Distribution.BucketOptions.Linear getLinearBuckets() {
      if (optionsCase_ == 1) {
         return (com.google.api.Distribution.BucketOptions.Linear) options_;
      }
      return com.google.api.Distribution.BucketOptions.Linear.getDefaultInstance();
    }
    /**
     * <pre>
     * The linear bucket.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;</code>
     */
    private void setLinearBuckets(com.google.api.Distribution.BucketOptions.Linear value) {
      if (value == null) {
        throw new NullPointerException();
      }
      options_ = value;
      optionsCase_ = 1;
    }
    /**
     * <pre>
     * The linear bucket.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;</code>
     */
    private void setLinearBuckets(
        com.google.api.Distribution.BucketOptions.Linear.Builder builderForValue) {
      options_ = builderForValue.build();
      optionsCase_ = 1;
    }
    /**
     * <pre>
     * The linear bucket.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;</code>
     */
    private void mergeLinearBuckets(com.google.api.Distribution.BucketOptions.Linear value) {
      if (optionsCase_ == 1 &&
          options_ != com.google.api.Distribution.BucketOptions.Linear.getDefaultInstance()) {
        options_ = com.google.api.Distribution.BucketOptions.Linear.newBuilder((com.google.api.Distribution.BucketOptions.Linear) options_)
            .mergeFrom(value).buildPartial();
      } else {
        options_ = value;
      }
      optionsCase_ = 1;
    }
    /**
     * <pre>
     * The linear bucket.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;</code>
     */
    private void clearLinearBuckets() {
      if (optionsCase_ == 1) {
        optionsCase_ = 0;
        options_ = null;
      }
    }

    public static final int EXPONENTIAL_BUCKETS_FIELD_NUMBER = 2;
    /**
     * <pre>
     * The exponential buckets.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;</code>
     */
    public com.google.api.Distribution.BucketOptions.Exponential getExponentialBuckets() {
      if (optionsCase_ == 2) {
         return (com.google.api.Distribution.BucketOptions.Exponential) options_;
      }
      return com.google.api.Distribution.BucketOptions.Exponential.getDefaultInstance();
    }
    /**
     * <pre>
     * The exponential buckets.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;</code>
     */
    private void setExponentialBuckets(com.google.api.Distribution.BucketOptions.Exponential value) {
      if (value == null) {
        throw new NullPointerException();
      }
      options_ = value;
      optionsCase_ = 2;
    }
    /**
     * <pre>
     * The exponential buckets.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;</code>
     */
    private void setExponentialBuckets(
        com.google.api.Distribution.BucketOptions.Exponential.Builder builderForValue) {
      options_ = builderForValue.build();
      optionsCase_ = 2;
    }
    /**
     * <pre>
     * The exponential buckets.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;</code>
     */
    private void mergeExponentialBuckets(com.google.api.Distribution.BucketOptions.Exponential value) {
      if (optionsCase_ == 2 &&
          options_ != com.google.api.Distribution.BucketOptions.Exponential.getDefaultInstance()) {
        options_ = com.google.api.Distribution.BucketOptions.Exponential.newBuilder((com.google.api.Distribution.BucketOptions.Exponential) options_)
            .mergeFrom(value).buildPartial();
      } else {
        options_ = value;
      }
      optionsCase_ = 2;
    }
    /**
     * <pre>
     * The exponential buckets.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;</code>
     */
    private void clearExponentialBuckets() {
      if (optionsCase_ == 2) {
        optionsCase_ = 0;
        options_ = null;
      }
    }

    public static final int EXPLICIT_BUCKETS_FIELD_NUMBER = 3;
    /**
     * <pre>
     * The explicit buckets.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;</code>
     */
    public com.google.api.Distribution.BucketOptions.Explicit getExplicitBuckets() {
      if (optionsCase_ == 3) {
         return (com.google.api.Distribution.BucketOptions.Explicit) options_;
      }
      return com.google.api.Distribution.BucketOptions.Explicit.getDefaultInstance();
    }
    /**
     * <pre>
     * The explicit buckets.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;</code>
     */
    private void setExplicitBuckets(com.google.api.Distribution.BucketOptions.Explicit value) {
      if (value == null) {
        throw new NullPointerException();
      }
      options_ = value;
      optionsCase_ = 3;
    }
    /**
     * <pre>
     * The explicit buckets.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;</code>
     */
    private void setExplicitBuckets(
        com.google.api.Distribution.BucketOptions.Explicit.Builder builderForValue) {
      options_ = builderForValue.build();
      optionsCase_ = 3;
    }
    /**
     * <pre>
     * The explicit buckets.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;</code>
     */
    private void mergeExplicitBuckets(com.google.api.Distribution.BucketOptions.Explicit value) {
      if (optionsCase_ == 3 &&
          options_ != com.google.api.Distribution.BucketOptions.Explicit.getDefaultInstance()) {
        options_ = com.google.api.Distribution.BucketOptions.Explicit.newBuilder((com.google.api.Distribution.BucketOptions.Explicit) options_)
            .mergeFrom(value).buildPartial();
      } else {
        options_ = value;
      }
      optionsCase_ = 3;
    }
    /**
     * <pre>
     * The explicit buckets.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;</code>
     */
    private void clearExplicitBuckets() {
      if (optionsCase_ == 3) {
        optionsCase_ = 0;
        options_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (optionsCase_ == 1) {
        output.writeMessage(1, (com.google.api.Distribution.BucketOptions.Linear) options_);
      }
      if (optionsCase_ == 2) {
        output.writeMessage(2, (com.google.api.Distribution.BucketOptions.Exponential) options_);
      }
      if (optionsCase_ == 3) {
        output.writeMessage(3, (com.google.api.Distribution.BucketOptions.Explicit) options_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (optionsCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.google.api.Distribution.BucketOptions.Linear) options_);
      }
      if (optionsCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.google.api.Distribution.BucketOptions.Exponential) options_);
      }
      if (optionsCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.google.api.Distribution.BucketOptions.Explicit) options_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.api.Distribution.BucketOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.api.Distribution.BucketOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.api.Distribution.BucketOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.api.Distribution.BucketOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.api.Distribution.BucketOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.api.Distribution.BucketOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.api.Distribution.BucketOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.api.Distribution.BucketOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.api.Distribution.BucketOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.api.Distribution.BucketOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.api.Distribution.BucketOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * A Distribution may optionally contain a histogram of the values in the
     * population.  The histogram is given in `bucket_counts` as counts of values
     * that fall into one of a sequence of non-overlapping buckets.  The sequence
     * of buckets is described by `bucket_options`.
     * A bucket specifies an inclusive lower bound and exclusive upper bound for
     * the values that are counted for that bucket.  The upper bound of a bucket
     * is strictly greater than the lower bound.
     * The sequence of N buckets for a Distribution consists of an underflow
     * bucket (number 0), zero or more finite buckets (number 1 through N - 2) and
     * an overflow bucket (number N - 1).  The buckets are contiguous:  the lower
     * bound of bucket i (i &gt; 0) is the same as the upper bound of bucket i - 1.
     * The buckets span the whole range of finite values: lower bound of the
     * underflow bucket is -infinity and the upper bound of the overflow bucket is
     * +infinity.  The finite buckets are so-called because both bounds are
     * finite.
     * `BucketOptions` describes bucket boundaries in one of three ways.  Two
     * describe the boundaries by giving parameters for a formula to generate
     * boundaries and one gives the bucket boundaries explicitly.
     * If `bucket_boundaries` is not given, then no `bucket_counts` may be given.
     * </pre>
     *
     * Protobuf type {@code google.api.Distribution.BucketOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.api.Distribution.BucketOptions, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.api.Distribution.BucketOptions)
        com.google.api.Distribution.BucketOptionsOrBuilder {
      // Construct using com.google.api.Distribution.BucketOptions.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public OptionsCase
          getOptionsCase() {
        return instance.getOptionsCase();
      }

      public Builder clearOptions() {
        copyOnWrite();
        instance.clearOptions();
        return this;
      }


      /**
       * <pre>
       * The linear bucket.
       * </pre>
       *
       * <code>optional .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;</code>
       */
      public com.google.api.Distribution.BucketOptions.Linear getLinearBuckets() {
        return instance.getLinearBuckets();
      }
      /**
       * <pre>
       * The linear bucket.
       * </pre>
       *
       * <code>optional .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;</code>
       */
      public Builder setLinearBuckets(com.google.api.Distribution.BucketOptions.Linear value) {
        copyOnWrite();
        instance.setLinearBuckets(value);
        return this;
      }
      /**
       * <pre>
       * The linear bucket.
       * </pre>
       *
       * <code>optional .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;</code>
       */
      public Builder setLinearBuckets(
          com.google.api.Distribution.BucketOptions.Linear.Builder builderForValue) {
        copyOnWrite();
        instance.setLinearBuckets(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The linear bucket.
       * </pre>
       *
       * <code>optional .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;</code>
       */
      public Builder mergeLinearBuckets(com.google.api.Distribution.BucketOptions.Linear value) {
        copyOnWrite();
        instance.mergeLinearBuckets(value);
        return this;
      }
      /**
       * <pre>
       * The linear bucket.
       * </pre>
       *
       * <code>optional .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;</code>
       */
      public Builder clearLinearBuckets() {
        copyOnWrite();
        instance.clearLinearBuckets();
        return this;
      }

      /**
       * <pre>
       * The exponential buckets.
       * </pre>
       *
       * <code>optional .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;</code>
       */
      public com.google.api.Distribution.BucketOptions.Exponential getExponentialBuckets() {
        return instance.getExponentialBuckets();
      }
      /**
       * <pre>
       * The exponential buckets.
       * </pre>
       *
       * <code>optional .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;</code>
       */
      public Builder setExponentialBuckets(com.google.api.Distribution.BucketOptions.Exponential value) {
        copyOnWrite();
        instance.setExponentialBuckets(value);
        return this;
      }
      /**
       * <pre>
       * The exponential buckets.
       * </pre>
       *
       * <code>optional .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;</code>
       */
      public Builder setExponentialBuckets(
          com.google.api.Distribution.BucketOptions.Exponential.Builder builderForValue) {
        copyOnWrite();
        instance.setExponentialBuckets(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The exponential buckets.
       * </pre>
       *
       * <code>optional .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;</code>
       */
      public Builder mergeExponentialBuckets(com.google.api.Distribution.BucketOptions.Exponential value) {
        copyOnWrite();
        instance.mergeExponentialBuckets(value);
        return this;
      }
      /**
       * <pre>
       * The exponential buckets.
       * </pre>
       *
       * <code>optional .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;</code>
       */
      public Builder clearExponentialBuckets() {
        copyOnWrite();
        instance.clearExponentialBuckets();
        return this;
      }

      /**
       * <pre>
       * The explicit buckets.
       * </pre>
       *
       * <code>optional .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;</code>
       */
      public com.google.api.Distribution.BucketOptions.Explicit getExplicitBuckets() {
        return instance.getExplicitBuckets();
      }
      /**
       * <pre>
       * The explicit buckets.
       * </pre>
       *
       * <code>optional .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;</code>
       */
      public Builder setExplicitBuckets(com.google.api.Distribution.BucketOptions.Explicit value) {
        copyOnWrite();
        instance.setExplicitBuckets(value);
        return this;
      }
      /**
       * <pre>
       * The explicit buckets.
       * </pre>
       *
       * <code>optional .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;</code>
       */
      public Builder setExplicitBuckets(
          com.google.api.Distribution.BucketOptions.Explicit.Builder builderForValue) {
        copyOnWrite();
        instance.setExplicitBuckets(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The explicit buckets.
       * </pre>
       *
       * <code>optional .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;</code>
       */
      public Builder mergeExplicitBuckets(com.google.api.Distribution.BucketOptions.Explicit value) {
        copyOnWrite();
        instance.mergeExplicitBuckets(value);
        return this;
      }
      /**
       * <pre>
       * The explicit buckets.
       * </pre>
       *
       * <code>optional .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;</code>
       */
      public Builder clearExplicitBuckets() {
        copyOnWrite();
        instance.clearExplicitBuckets();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.api.Distribution.BucketOptions)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.api.Distribution.BucketOptions();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.api.Distribution.BucketOptions other = (com.google.api.Distribution.BucketOptions) arg1;
          switch (other.getOptionsCase()) {
            case LINEAR_BUCKETS: {
              options_ = visitor.visitOneofMessage(
                  optionsCase_ == 1,
                  options_,
                  other.options_);
              break;
            }
            case EXPONENTIAL_BUCKETS: {
              options_ = visitor.visitOneofMessage(
                  optionsCase_ == 2,
                  options_,
                  other.options_);
              break;
            }
            case EXPLICIT_BUCKETS: {
              options_ = visitor.visitOneofMessage(
                  optionsCase_ == 3,
                  options_,
                  other.options_);
              break;
            }
            case OPTIONS_NOT_SET: {
              visitor.visitOneofNotSet(optionsCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.optionsCase_ != 0) {
              optionsCase_ = other.optionsCase_;
            }
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.google.api.Distribution.BucketOptions.Linear.Builder subBuilder = null;
                  if (optionsCase_ == 1) {
                    subBuilder = ((com.google.api.Distribution.BucketOptions.Linear) options_).toBuilder();
                  }
                  options_ =
                       input.readMessage(com.google.api.Distribution.BucketOptions.Linear.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.google.api.Distribution.BucketOptions.Linear) options_);
                    options_ = subBuilder.buildPartial();
                  }
                  optionsCase_ = 1;
                  break;
                }
                case 18: {
                  com.google.api.Distribution.BucketOptions.Exponential.Builder subBuilder = null;
                  if (optionsCase_ == 2) {
                    subBuilder = ((com.google.api.Distribution.BucketOptions.Exponential) options_).toBuilder();
                  }
                  options_ =
                       input.readMessage(com.google.api.Distribution.BucketOptions.Exponential.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.google.api.Distribution.BucketOptions.Exponential) options_);
                    options_ = subBuilder.buildPartial();
                  }
                  optionsCase_ = 2;
                  break;
                }
                case 26: {
                  com.google.api.Distribution.BucketOptions.Explicit.Builder subBuilder = null;
                  if (optionsCase_ == 3) {
                    subBuilder = ((com.google.api.Distribution.BucketOptions.Explicit) options_).toBuilder();
                  }
                  options_ =
                       input.readMessage(com.google.api.Distribution.BucketOptions.Explicit.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.google.api.Distribution.BucketOptions.Explicit) options_);
                    options_ = subBuilder.buildPartial();
                  }
                  optionsCase_ = 3;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.api.Distribution.BucketOptions.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.api.Distribution.BucketOptions)
    private static final com.google.api.Distribution.BucketOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BucketOptions();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.api.Distribution.BucketOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BucketOptions> PARSER;

    public static com.google.protobuf.Parser<BucketOptions> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  public static final int COUNT_FIELD_NUMBER = 1;
  private long count_;
  /**
   * <pre>
   * The number of values in the population. Must be non-negative.
   * </pre>
   *
   * <code>optional int64 count = 1;</code>
   */
  public long getCount() {
    return count_;
  }
  /**
   * <pre>
   * The number of values in the population. Must be non-negative.
   * </pre>
   *
   * <code>optional int64 count = 1;</code>
   */
  private void setCount(long value) {
    
    count_ = value;
  }
  /**
   * <pre>
   * The number of values in the population. Must be non-negative.
   * </pre>
   *
   * <code>optional int64 count = 1;</code>
   */
  private void clearCount() {
    
    count_ = 0L;
  }

  public static final int MEAN_FIELD_NUMBER = 2;
  private double mean_;
  /**
   * <pre>
   * The arithmetic mean of the values in the population. If `count` is zero
   * then this field must be zero.
   * </pre>
   *
   * <code>optional double mean = 2;</code>
   */
  public double getMean() {
    return mean_;
  }
  /**
   * <pre>
   * The arithmetic mean of the values in the population. If `count` is zero
   * then this field must be zero.
   * </pre>
   *
   * <code>optional double mean = 2;</code>
   */
  private void setMean(double value) {
    
    mean_ = value;
  }
  /**
   * <pre>
   * The arithmetic mean of the values in the population. If `count` is zero
   * then this field must be zero.
   * </pre>
   *
   * <code>optional double mean = 2;</code>
   */
  private void clearMean() {
    
    mean_ = 0D;
  }

  public static final int SUM_OF_SQUARED_DEVIATION_FIELD_NUMBER = 3;
  private double sumOfSquaredDeviation_;
  /**
   * <pre>
   * The sum of squared deviations from the mean of the values in the
   * population.  For values x_i this is:
   *     Sum[i=1..n]((x_i - mean)^2)
   * Knuth, "The Art of Computer Programming", Vol. 2, page 323, 3rd edition
   * describes Welford's method for accumulating this sum in one pass.
   * If `count` is zero then this field must be zero.
   * </pre>
   *
   * <code>optional double sum_of_squared_deviation = 3;</code>
   */
  public double getSumOfSquaredDeviation() {
    return sumOfSquaredDeviation_;
  }
  /**
   * <pre>
   * The sum of squared deviations from the mean of the values in the
   * population.  For values x_i this is:
   *     Sum[i=1..n]((x_i - mean)^2)
   * Knuth, "The Art of Computer Programming", Vol. 2, page 323, 3rd edition
   * describes Welford's method for accumulating this sum in one pass.
   * If `count` is zero then this field must be zero.
   * </pre>
   *
   * <code>optional double sum_of_squared_deviation = 3;</code>
   */
  private void setSumOfSquaredDeviation(double value) {
    
    sumOfSquaredDeviation_ = value;
  }
  /**
   * <pre>
   * The sum of squared deviations from the mean of the values in the
   * population.  For values x_i this is:
   *     Sum[i=1..n]((x_i - mean)^2)
   * Knuth, "The Art of Computer Programming", Vol. 2, page 323, 3rd edition
   * describes Welford's method for accumulating this sum in one pass.
   * If `count` is zero then this field must be zero.
   * </pre>
   *
   * <code>optional double sum_of_squared_deviation = 3;</code>
   */
  private void clearSumOfSquaredDeviation() {
    
    sumOfSquaredDeviation_ = 0D;
  }

  public static final int RANGE_FIELD_NUMBER = 4;
  private com.google.api.Distribution.Range range_;
  /**
   * <pre>
   * If specified, contains the range of the population values. The field
   * must not be present if the `count` is zero.
   * </pre>
   *
   * <code>optional .google.api.Distribution.Range range = 4;</code>
   */
  public boolean hasRange() {
    return range_ != null;
  }
  /**
   * <pre>
   * If specified, contains the range of the population values. The field
   * must not be present if the `count` is zero.
   * </pre>
   *
   * <code>optional .google.api.Distribution.Range range = 4;</code>
   */
  public com.google.api.Distribution.Range getRange() {
    return range_ == null ? com.google.api.Distribution.Range.getDefaultInstance() : range_;
  }
  /**
   * <pre>
   * If specified, contains the range of the population values. The field
   * must not be present if the `count` is zero.
   * </pre>
   *
   * <code>optional .google.api.Distribution.Range range = 4;</code>
   */
  private void setRange(com.google.api.Distribution.Range value) {
    if (value == null) {
      throw new NullPointerException();
    }
    range_ = value;
    
    }
  /**
   * <pre>
   * If specified, contains the range of the population values. The field
   * must not be present if the `count` is zero.
   * </pre>
   *
   * <code>optional .google.api.Distribution.Range range = 4;</code>
   */
  private void setRange(
      com.google.api.Distribution.Range.Builder builderForValue) {
    range_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * If specified, contains the range of the population values. The field
   * must not be present if the `count` is zero.
   * </pre>
   *
   * <code>optional .google.api.Distribution.Range range = 4;</code>
   */
  private void mergeRange(com.google.api.Distribution.Range value) {
    if (range_ != null &&
        range_ != com.google.api.Distribution.Range.getDefaultInstance()) {
      range_ =
        com.google.api.Distribution.Range.newBuilder(range_).mergeFrom(value).buildPartial();
    } else {
      range_ = value;
    }
    
  }
  /**
   * <pre>
   * If specified, contains the range of the population values. The field
   * must not be present if the `count` is zero.
   * </pre>
   *
   * <code>optional .google.api.Distribution.Range range = 4;</code>
   */
  private void clearRange() {  range_ = null;
    
  }

  public static final int BUCKET_OPTIONS_FIELD_NUMBER = 6;
  private com.google.api.Distribution.BucketOptions bucketOptions_;
  /**
   * <pre>
   * Defines the histogram bucket boundaries.
   * </pre>
   *
   * <code>optional .google.api.Distribution.BucketOptions bucket_options = 6;</code>
   */
  public boolean hasBucketOptions() {
    return bucketOptions_ != null;
  }
  /**
   * <pre>
   * Defines the histogram bucket boundaries.
   * </pre>
   *
   * <code>optional .google.api.Distribution.BucketOptions bucket_options = 6;</code>
   */
  public com.google.api.Distribution.BucketOptions getBucketOptions() {
    return bucketOptions_ == null ? com.google.api.Distribution.BucketOptions.getDefaultInstance() : bucketOptions_;
  }
  /**
   * <pre>
   * Defines the histogram bucket boundaries.
   * </pre>
   *
   * <code>optional .google.api.Distribution.BucketOptions bucket_options = 6;</code>
   */
  private void setBucketOptions(com.google.api.Distribution.BucketOptions value) {
    if (value == null) {
      throw new NullPointerException();
    }
    bucketOptions_ = value;
    
    }
  /**
   * <pre>
   * Defines the histogram bucket boundaries.
   * </pre>
   *
   * <code>optional .google.api.Distribution.BucketOptions bucket_options = 6;</code>
   */
  private void setBucketOptions(
      com.google.api.Distribution.BucketOptions.Builder builderForValue) {
    bucketOptions_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * Defines the histogram bucket boundaries.
   * </pre>
   *
   * <code>optional .google.api.Distribution.BucketOptions bucket_options = 6;</code>
   */
  private void mergeBucketOptions(com.google.api.Distribution.BucketOptions value) {
    if (bucketOptions_ != null &&
        bucketOptions_ != com.google.api.Distribution.BucketOptions.getDefaultInstance()) {
      bucketOptions_ =
        com.google.api.Distribution.BucketOptions.newBuilder(bucketOptions_).mergeFrom(value).buildPartial();
    } else {
      bucketOptions_ = value;
    }
    
  }
  /**
   * <pre>
   * Defines the histogram bucket boundaries.
   * </pre>
   *
   * <code>optional .google.api.Distribution.BucketOptions bucket_options = 6;</code>
   */
  private void clearBucketOptions() {  bucketOptions_ = null;
    
  }

  public static final int BUCKET_COUNTS_FIELD_NUMBER = 7;
  private com.google.protobuf.Internal.LongList bucketCounts_;
  /**
   * <pre>
   * If `bucket_options` is given, then the sum of the values in `bucket_counts`
   * must equal the value in `count`.  If `bucket_options` is not given, no
   * `bucket_counts` fields may be given.
   * Bucket counts are given in order under the numbering scheme described
   * above (the underflow bucket has number 0; the finite buckets, if any,
   * have numbers 1 through N-2; the overflow bucket has number N-1).
   * The size of `bucket_counts` must be no greater than N as defined in
   * `bucket_options`.
   * Any suffix of trailing zero bucket_count fields may be omitted.
   * </pre>
   *
   * <code>repeated int64 bucket_counts = 7;</code>
   */
  public java.util.List<java.lang.Long>
      getBucketCountsList() {
    return bucketCounts_;
  }
  /**
   * <pre>
   * If `bucket_options` is given, then the sum of the values in `bucket_counts`
   * must equal the value in `count`.  If `bucket_options` is not given, no
   * `bucket_counts` fields may be given.
   * Bucket counts are given in order under the numbering scheme described
   * above (the underflow bucket has number 0; the finite buckets, if any,
   * have numbers 1 through N-2; the overflow bucket has number N-1).
   * The size of `bucket_counts` must be no greater than N as defined in
   * `bucket_options`.
   * Any suffix of trailing zero bucket_count fields may be omitted.
   * </pre>
   *
   * <code>repeated int64 bucket_counts = 7;</code>
   */
  public int getBucketCountsCount() {
    return bucketCounts_.size();
  }
  /**
   * <pre>
   * If `bucket_options` is given, then the sum of the values in `bucket_counts`
   * must equal the value in `count`.  If `bucket_options` is not given, no
   * `bucket_counts` fields may be given.
   * Bucket counts are given in order under the numbering scheme described
   * above (the underflow bucket has number 0; the finite buckets, if any,
   * have numbers 1 through N-2; the overflow bucket has number N-1).
   * The size of `bucket_counts` must be no greater than N as defined in
   * `bucket_options`.
   * Any suffix of trailing zero bucket_count fields may be omitted.
   * </pre>
   *
   * <code>repeated int64 bucket_counts = 7;</code>
   */
  public long getBucketCounts(int index) {
    return bucketCounts_.getLong(index);
  }
  private void ensureBucketCountsIsMutable() {
    if (!bucketCounts_.isModifiable()) {
      bucketCounts_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(bucketCounts_);
     }
  }
  /**
   * <pre>
   * If `bucket_options` is given, then the sum of the values in `bucket_counts`
   * must equal the value in `count`.  If `bucket_options` is not given, no
   * `bucket_counts` fields may be given.
   * Bucket counts are given in order under the numbering scheme described
   * above (the underflow bucket has number 0; the finite buckets, if any,
   * have numbers 1 through N-2; the overflow bucket has number N-1).
   * The size of `bucket_counts` must be no greater than N as defined in
   * `bucket_options`.
   * Any suffix of trailing zero bucket_count fields may be omitted.
   * </pre>
   *
   * <code>repeated int64 bucket_counts = 7;</code>
   */
  private void setBucketCounts(
      int index, long value) {
    ensureBucketCountsIsMutable();
    bucketCounts_.setLong(index, value);
  }
  /**
   * <pre>
   * If `bucket_options` is given, then the sum of the values in `bucket_counts`
   * must equal the value in `count`.  If `bucket_options` is not given, no
   * `bucket_counts` fields may be given.
   * Bucket counts are given in order under the numbering scheme described
   * above (the underflow bucket has number 0; the finite buckets, if any,
   * have numbers 1 through N-2; the overflow bucket has number N-1).
   * The size of `bucket_counts` must be no greater than N as defined in
   * `bucket_options`.
   * Any suffix of trailing zero bucket_count fields may be omitted.
   * </pre>
   *
   * <code>repeated int64 bucket_counts = 7;</code>
   */
  private void addBucketCounts(long value) {
    ensureBucketCountsIsMutable();
    bucketCounts_.addLong(value);
  }
  /**
   * <pre>
   * If `bucket_options` is given, then the sum of the values in `bucket_counts`
   * must equal the value in `count`.  If `bucket_options` is not given, no
   * `bucket_counts` fields may be given.
   * Bucket counts are given in order under the numbering scheme described
   * above (the underflow bucket has number 0; the finite buckets, if any,
   * have numbers 1 through N-2; the overflow bucket has number N-1).
   * The size of `bucket_counts` must be no greater than N as defined in
   * `bucket_options`.
   * Any suffix of trailing zero bucket_count fields may be omitted.
   * </pre>
   *
   * <code>repeated int64 bucket_counts = 7;</code>
   */
  private void addAllBucketCounts(
      java.lang.Iterable<? extends java.lang.Long> values) {
    ensureBucketCountsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, bucketCounts_);
  }
  /**
   * <pre>
   * If `bucket_options` is given, then the sum of the values in `bucket_counts`
   * must equal the value in `count`.  If `bucket_options` is not given, no
   * `bucket_counts` fields may be given.
   * Bucket counts are given in order under the numbering scheme described
   * above (the underflow bucket has number 0; the finite buckets, if any,
   * have numbers 1 through N-2; the overflow bucket has number N-1).
   * The size of `bucket_counts` must be no greater than N as defined in
   * `bucket_options`.
   * Any suffix of trailing zero bucket_count fields may be omitted.
   * </pre>
   *
   * <code>repeated int64 bucket_counts = 7;</code>
   */
  private void clearBucketCounts() {
    bucketCounts_ = emptyLongList();
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (count_ != 0L) {
      output.writeInt64(1, count_);
    }
    if (mean_ != 0D) {
      output.writeDouble(2, mean_);
    }
    if (sumOfSquaredDeviation_ != 0D) {
      output.writeDouble(3, sumOfSquaredDeviation_);
    }
    if (range_ != null) {
      output.writeMessage(4, getRange());
    }
    if (bucketOptions_ != null) {
      output.writeMessage(6, getBucketOptions());
    }
    for (int i = 0; i < bucketCounts_.size(); i++) {
      output.writeInt64(7, bucketCounts_.getLong(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (count_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, count_);
    }
    if (mean_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, mean_);
    }
    if (sumOfSquaredDeviation_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, sumOfSquaredDeviation_);
    }
    if (range_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getRange());
    }
    if (bucketOptions_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getBucketOptions());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < bucketCounts_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt64SizeNoTag(bucketCounts_.getLong(i));
      }
      size += dataSize;
      size += 1 * getBucketCountsList().size();
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.google.api.Distribution parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.Distribution parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.Distribution parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.Distribution parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.Distribution parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.Distribution parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.Distribution parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.api.Distribution parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.Distribution parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.Distribution parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.api.Distribution prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Distribution contains summary statistics for a population of values and,
   * optionally, a histogram representing the distribution of those values across
   * a specified set of histogram buckets.
   * The summary statistics are the count, mean, sum of the squared deviation from
   * the mean, the minimum, and the maximum of the set of population of values.
   * The histogram is based on a sequence of buckets and gives a count of values
   * that fall into each bucket.  The boundaries of the buckets are given either
   * explicitly or by specifying parameters for a method of computing them
   * (buckets of fixed width or buckets of exponentially increasing width).
   * Although it is not forbidden, it is generally a bad idea to include
   * non-finite values (infinities or NaNs) in the population of values, as this
   * will render the `mean` and `sum_of_squared_deviation` fields meaningless.
   * </pre>
   *
   * Protobuf type {@code google.api.Distribution}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.api.Distribution, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.api.Distribution)
      com.google.api.DistributionOrBuilder {
    // Construct using com.google.api.Distribution.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The number of values in the population. Must be non-negative.
     * </pre>
     *
     * <code>optional int64 count = 1;</code>
     */
    public long getCount() {
      return instance.getCount();
    }
    /**
     * <pre>
     * The number of values in the population. Must be non-negative.
     * </pre>
     *
     * <code>optional int64 count = 1;</code>
     */
    public Builder setCount(long value) {
      copyOnWrite();
      instance.setCount(value);
      return this;
    }
    /**
     * <pre>
     * The number of values in the population. Must be non-negative.
     * </pre>
     *
     * <code>optional int64 count = 1;</code>
     */
    public Builder clearCount() {
      copyOnWrite();
      instance.clearCount();
      return this;
    }

    /**
     * <pre>
     * The arithmetic mean of the values in the population. If `count` is zero
     * then this field must be zero.
     * </pre>
     *
     * <code>optional double mean = 2;</code>
     */
    public double getMean() {
      return instance.getMean();
    }
    /**
     * <pre>
     * The arithmetic mean of the values in the population. If `count` is zero
     * then this field must be zero.
     * </pre>
     *
     * <code>optional double mean = 2;</code>
     */
    public Builder setMean(double value) {
      copyOnWrite();
      instance.setMean(value);
      return this;
    }
    /**
     * <pre>
     * The arithmetic mean of the values in the population. If `count` is zero
     * then this field must be zero.
     * </pre>
     *
     * <code>optional double mean = 2;</code>
     */
    public Builder clearMean() {
      copyOnWrite();
      instance.clearMean();
      return this;
    }

    /**
     * <pre>
     * The sum of squared deviations from the mean of the values in the
     * population.  For values x_i this is:
     *     Sum[i=1..n]((x_i - mean)^2)
     * Knuth, "The Art of Computer Programming", Vol. 2, page 323, 3rd edition
     * describes Welford's method for accumulating this sum in one pass.
     * If `count` is zero then this field must be zero.
     * </pre>
     *
     * <code>optional double sum_of_squared_deviation = 3;</code>
     */
    public double getSumOfSquaredDeviation() {
      return instance.getSumOfSquaredDeviation();
    }
    /**
     * <pre>
     * The sum of squared deviations from the mean of the values in the
     * population.  For values x_i this is:
     *     Sum[i=1..n]((x_i - mean)^2)
     * Knuth, "The Art of Computer Programming", Vol. 2, page 323, 3rd edition
     * describes Welford's method for accumulating this sum in one pass.
     * If `count` is zero then this field must be zero.
     * </pre>
     *
     * <code>optional double sum_of_squared_deviation = 3;</code>
     */
    public Builder setSumOfSquaredDeviation(double value) {
      copyOnWrite();
      instance.setSumOfSquaredDeviation(value);
      return this;
    }
    /**
     * <pre>
     * The sum of squared deviations from the mean of the values in the
     * population.  For values x_i this is:
     *     Sum[i=1..n]((x_i - mean)^2)
     * Knuth, "The Art of Computer Programming", Vol. 2, page 323, 3rd edition
     * describes Welford's method for accumulating this sum in one pass.
     * If `count` is zero then this field must be zero.
     * </pre>
     *
     * <code>optional double sum_of_squared_deviation = 3;</code>
     */
    public Builder clearSumOfSquaredDeviation() {
      copyOnWrite();
      instance.clearSumOfSquaredDeviation();
      return this;
    }

    /**
     * <pre>
     * If specified, contains the range of the population values. The field
     * must not be present if the `count` is zero.
     * </pre>
     *
     * <code>optional .google.api.Distribution.Range range = 4;</code>
     */
    public boolean hasRange() {
      return instance.hasRange();
    }
    /**
     * <pre>
     * If specified, contains the range of the population values. The field
     * must not be present if the `count` is zero.
     * </pre>
     *
     * <code>optional .google.api.Distribution.Range range = 4;</code>
     */
    public com.google.api.Distribution.Range getRange() {
      return instance.getRange();
    }
    /**
     * <pre>
     * If specified, contains the range of the population values. The field
     * must not be present if the `count` is zero.
     * </pre>
     *
     * <code>optional .google.api.Distribution.Range range = 4;</code>
     */
    public Builder setRange(com.google.api.Distribution.Range value) {
      copyOnWrite();
      instance.setRange(value);
      return this;
      }
    /**
     * <pre>
     * If specified, contains the range of the population values. The field
     * must not be present if the `count` is zero.
     * </pre>
     *
     * <code>optional .google.api.Distribution.Range range = 4;</code>
     */
    public Builder setRange(
        com.google.api.Distribution.Range.Builder builderForValue) {
      copyOnWrite();
      instance.setRange(builderForValue);
      return this;
    }
    /**
     * <pre>
     * If specified, contains the range of the population values. The field
     * must not be present if the `count` is zero.
     * </pre>
     *
     * <code>optional .google.api.Distribution.Range range = 4;</code>
     */
    public Builder mergeRange(com.google.api.Distribution.Range value) {
      copyOnWrite();
      instance.mergeRange(value);
      return this;
    }
    /**
     * <pre>
     * If specified, contains the range of the population values. The field
     * must not be present if the `count` is zero.
     * </pre>
     *
     * <code>optional .google.api.Distribution.Range range = 4;</code>
     */
    public Builder clearRange() {  copyOnWrite();
      instance.clearRange();
      return this;
    }

    /**
     * <pre>
     * Defines the histogram bucket boundaries.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions bucket_options = 6;</code>
     */
    public boolean hasBucketOptions() {
      return instance.hasBucketOptions();
    }
    /**
     * <pre>
     * Defines the histogram bucket boundaries.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions bucket_options = 6;</code>
     */
    public com.google.api.Distribution.BucketOptions getBucketOptions() {
      return instance.getBucketOptions();
    }
    /**
     * <pre>
     * Defines the histogram bucket boundaries.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions bucket_options = 6;</code>
     */
    public Builder setBucketOptions(com.google.api.Distribution.BucketOptions value) {
      copyOnWrite();
      instance.setBucketOptions(value);
      return this;
      }
    /**
     * <pre>
     * Defines the histogram bucket boundaries.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions bucket_options = 6;</code>
     */
    public Builder setBucketOptions(
        com.google.api.Distribution.BucketOptions.Builder builderForValue) {
      copyOnWrite();
      instance.setBucketOptions(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Defines the histogram bucket boundaries.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions bucket_options = 6;</code>
     */
    public Builder mergeBucketOptions(com.google.api.Distribution.BucketOptions value) {
      copyOnWrite();
      instance.mergeBucketOptions(value);
      return this;
    }
    /**
     * <pre>
     * Defines the histogram bucket boundaries.
     * </pre>
     *
     * <code>optional .google.api.Distribution.BucketOptions bucket_options = 6;</code>
     */
    public Builder clearBucketOptions() {  copyOnWrite();
      instance.clearBucketOptions();
      return this;
    }

    /**
     * <pre>
     * If `bucket_options` is given, then the sum of the values in `bucket_counts`
     * must equal the value in `count`.  If `bucket_options` is not given, no
     * `bucket_counts` fields may be given.
     * Bucket counts are given in order under the numbering scheme described
     * above (the underflow bucket has number 0; the finite buckets, if any,
     * have numbers 1 through N-2; the overflow bucket has number N-1).
     * The size of `bucket_counts` must be no greater than N as defined in
     * `bucket_options`.
     * Any suffix of trailing zero bucket_count fields may be omitted.
     * </pre>
     *
     * <code>repeated int64 bucket_counts = 7;</code>
     */
    public java.util.List<java.lang.Long>
        getBucketCountsList() {
      return java.util.Collections.unmodifiableList(
          instance.getBucketCountsList());
    }
    /**
     * <pre>
     * If `bucket_options` is given, then the sum of the values in `bucket_counts`
     * must equal the value in `count`.  If `bucket_options` is not given, no
     * `bucket_counts` fields may be given.
     * Bucket counts are given in order under the numbering scheme described
     * above (the underflow bucket has number 0; the finite buckets, if any,
     * have numbers 1 through N-2; the overflow bucket has number N-1).
     * The size of `bucket_counts` must be no greater than N as defined in
     * `bucket_options`.
     * Any suffix of trailing zero bucket_count fields may be omitted.
     * </pre>
     *
     * <code>repeated int64 bucket_counts = 7;</code>
     */
    public int getBucketCountsCount() {
      return instance.getBucketCountsCount();
    }
    /**
     * <pre>
     * If `bucket_options` is given, then the sum of the values in `bucket_counts`
     * must equal the value in `count`.  If `bucket_options` is not given, no
     * `bucket_counts` fields may be given.
     * Bucket counts are given in order under the numbering scheme described
     * above (the underflow bucket has number 0; the finite buckets, if any,
     * have numbers 1 through N-2; the overflow bucket has number N-1).
     * The size of `bucket_counts` must be no greater than N as defined in
     * `bucket_options`.
     * Any suffix of trailing zero bucket_count fields may be omitted.
     * </pre>
     *
     * <code>repeated int64 bucket_counts = 7;</code>
     */
    public long getBucketCounts(int index) {
      return instance.getBucketCounts(index);
    }
    /**
     * <pre>
     * If `bucket_options` is given, then the sum of the values in `bucket_counts`
     * must equal the value in `count`.  If `bucket_options` is not given, no
     * `bucket_counts` fields may be given.
     * Bucket counts are given in order under the numbering scheme described
     * above (the underflow bucket has number 0; the finite buckets, if any,
     * have numbers 1 through N-2; the overflow bucket has number N-1).
     * The size of `bucket_counts` must be no greater than N as defined in
     * `bucket_options`.
     * Any suffix of trailing zero bucket_count fields may be omitted.
     * </pre>
     *
     * <code>repeated int64 bucket_counts = 7;</code>
     */
    public Builder setBucketCounts(
        int index, long value) {
      copyOnWrite();
      instance.setBucketCounts(index, value);
      return this;
    }
    /**
     * <pre>
     * If `bucket_options` is given, then the sum of the values in `bucket_counts`
     * must equal the value in `count`.  If `bucket_options` is not given, no
     * `bucket_counts` fields may be given.
     * Bucket counts are given in order under the numbering scheme described
     * above (the underflow bucket has number 0; the finite buckets, if any,
     * have numbers 1 through N-2; the overflow bucket has number N-1).
     * The size of `bucket_counts` must be no greater than N as defined in
     * `bucket_options`.
     * Any suffix of trailing zero bucket_count fields may be omitted.
     * </pre>
     *
     * <code>repeated int64 bucket_counts = 7;</code>
     */
    public Builder addBucketCounts(long value) {
      copyOnWrite();
      instance.addBucketCounts(value);
      return this;
    }
    /**
     * <pre>
     * If `bucket_options` is given, then the sum of the values in `bucket_counts`
     * must equal the value in `count`.  If `bucket_options` is not given, no
     * `bucket_counts` fields may be given.
     * Bucket counts are given in order under the numbering scheme described
     * above (the underflow bucket has number 0; the finite buckets, if any,
     * have numbers 1 through N-2; the overflow bucket has number N-1).
     * The size of `bucket_counts` must be no greater than N as defined in
     * `bucket_options`.
     * Any suffix of trailing zero bucket_count fields may be omitted.
     * </pre>
     *
     * <code>repeated int64 bucket_counts = 7;</code>
     */
    public Builder addAllBucketCounts(
        java.lang.Iterable<? extends java.lang.Long> values) {
      copyOnWrite();
      instance.addAllBucketCounts(values);
      return this;
    }
    /**
     * <pre>
     * If `bucket_options` is given, then the sum of the values in `bucket_counts`
     * must equal the value in `count`.  If `bucket_options` is not given, no
     * `bucket_counts` fields may be given.
     * Bucket counts are given in order under the numbering scheme described
     * above (the underflow bucket has number 0; the finite buckets, if any,
     * have numbers 1 through N-2; the overflow bucket has number N-1).
     * The size of `bucket_counts` must be no greater than N as defined in
     * `bucket_options`.
     * Any suffix of trailing zero bucket_count fields may be omitted.
     * </pre>
     *
     * <code>repeated int64 bucket_counts = 7;</code>
     */
    public Builder clearBucketCounts() {
      copyOnWrite();
      instance.clearBucketCounts();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.api.Distribution)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.api.Distribution();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        bucketCounts_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.google.api.Distribution other = (com.google.api.Distribution) arg1;
        count_ = visitor.visitLong(count_ != 0L, count_,
            other.count_ != 0L, other.count_);
        mean_ = visitor.visitDouble(mean_ != 0D, mean_,
            other.mean_ != 0D, other.mean_);
        sumOfSquaredDeviation_ = visitor.visitDouble(sumOfSquaredDeviation_ != 0D, sumOfSquaredDeviation_,
            other.sumOfSquaredDeviation_ != 0D, other.sumOfSquaredDeviation_);
        range_ = visitor.visitMessage(range_, other.range_);
        bucketOptions_ = visitor.visitMessage(bucketOptions_, other.bucketOptions_);
        bucketCounts_= visitor.visitLongList(bucketCounts_, other.bucketCounts_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                count_ = input.readInt64();
                break;
              }
              case 17: {

                mean_ = input.readDouble();
                break;
              }
              case 25: {

                sumOfSquaredDeviation_ = input.readDouble();
                break;
              }
              case 34: {
                com.google.api.Distribution.Range.Builder subBuilder = null;
                if (range_ != null) {
                  subBuilder = range_.toBuilder();
                }
                range_ = input.readMessage(com.google.api.Distribution.Range.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(range_);
                  range_ = subBuilder.buildPartial();
                }

                break;
              }
              case 50: {
                com.google.api.Distribution.BucketOptions.Builder subBuilder = null;
                if (bucketOptions_ != null) {
                  subBuilder = bucketOptions_.toBuilder();
                }
                bucketOptions_ = input.readMessage(com.google.api.Distribution.BucketOptions.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(bucketOptions_);
                  bucketOptions_ = subBuilder.buildPartial();
                }

                break;
              }
              case 56: {
                if (!bucketCounts_.isModifiable()) {
                  bucketCounts_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(bucketCounts_);
                }
                bucketCounts_.addLong(input.readInt64());
                break;
              }
              case 58: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!bucketCounts_.isModifiable() && input.getBytesUntilLimit() > 0) {
                  bucketCounts_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(bucketCounts_);
                }
                while (input.getBytesUntilLimit() > 0) {
                  bucketCounts_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.google.api.Distribution.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.api.Distribution)
  private static final com.google.api.Distribution DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Distribution();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.google.api.Distribution getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Distribution> PARSER;

  public static com.google.protobuf.Parser<Distribution> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

