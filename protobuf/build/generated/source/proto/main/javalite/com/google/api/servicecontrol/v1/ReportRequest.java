// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/service_controller.proto

package com.google.api.servicecontrol.v1;

/**
 * <pre>
 * Request message for the Report method.
 * </pre>
 *
 * Protobuf type {@code google.api.servicecontrol.v1.ReportRequest}
 */
public  final class ReportRequest extends
    com.google.protobuf.GeneratedMessageLite<
        ReportRequest, ReportRequest.Builder> implements
    // @@protoc_insertion_point(message_implements:google.api.servicecontrol.v1.ReportRequest)
    ReportRequestOrBuilder {
  private ReportRequest() {
    serviceName_ = "";
    operations_ = emptyProtobufList();
    serviceConfigId_ = "";
  }
  private int bitField0_;
  public static final int SERVICE_NAME_FIELD_NUMBER = 1;
  private java.lang.String serviceName_;
  /**
   * <pre>
   * The service name as specified in its service configuration. For example,
   * `"pubsub.googleapis.com"`.
   * See [google.api.Service][google.api.Service] for the definition of a service name.
   * </pre>
   *
   * <code>optional string service_name = 1;</code>
   */
  public java.lang.String getServiceName() {
    return serviceName_;
  }
  /**
   * <pre>
   * The service name as specified in its service configuration. For example,
   * `"pubsub.googleapis.com"`.
   * See [google.api.Service][google.api.Service] for the definition of a service name.
   * </pre>
   *
   * <code>optional string service_name = 1;</code>
   */
  public com.google.protobuf.ByteString
      getServiceNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(serviceName_);
  }
  /**
   * <pre>
   * The service name as specified in its service configuration. For example,
   * `"pubsub.googleapis.com"`.
   * See [google.api.Service][google.api.Service] for the definition of a service name.
   * </pre>
   *
   * <code>optional string service_name = 1;</code>
   */
  private void setServiceName(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    serviceName_ = value;
  }
  /**
   * <pre>
   * The service name as specified in its service configuration. For example,
   * `"pubsub.googleapis.com"`.
   * See [google.api.Service][google.api.Service] for the definition of a service name.
   * </pre>
   *
   * <code>optional string service_name = 1;</code>
   */
  private void clearServiceName() {
    
    serviceName_ = getDefaultInstance().getServiceName();
  }
  /**
   * <pre>
   * The service name as specified in its service configuration. For example,
   * `"pubsub.googleapis.com"`.
   * See [google.api.Service][google.api.Service] for the definition of a service name.
   * </pre>
   *
   * <code>optional string service_name = 1;</code>
   */
  private void setServiceNameBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    serviceName_ = value.toStringUtf8();
  }

  public static final int OPERATIONS_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<com.google.api.servicecontrol.v1.Operation> operations_;
  /**
   * <pre>
   * Operations to be reported.
   * Typically the service should report one operation per request.
   * Putting multiple operations into a single request is allowed, but should
   * be used only when multiple operations are natually available at the time
   * of the report.
   * If multiple operations are in a single request, the total request size
   * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
   * partial failure behavior.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
   */
  public java.util.List<com.google.api.servicecontrol.v1.Operation> getOperationsList() {
    return operations_;
  }
  /**
   * <pre>
   * Operations to be reported.
   * Typically the service should report one operation per request.
   * Putting multiple operations into a single request is allowed, but should
   * be used only when multiple operations are natually available at the time
   * of the report.
   * If multiple operations are in a single request, the total request size
   * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
   * partial failure behavior.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
   */
  public java.util.List<? extends com.google.api.servicecontrol.v1.OperationOrBuilder> 
      getOperationsOrBuilderList() {
    return operations_;
  }
  /**
   * <pre>
   * Operations to be reported.
   * Typically the service should report one operation per request.
   * Putting multiple operations into a single request is allowed, but should
   * be used only when multiple operations are natually available at the time
   * of the report.
   * If multiple operations are in a single request, the total request size
   * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
   * partial failure behavior.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
   */
  public int getOperationsCount() {
    return operations_.size();
  }
  /**
   * <pre>
   * Operations to be reported.
   * Typically the service should report one operation per request.
   * Putting multiple operations into a single request is allowed, but should
   * be used only when multiple operations are natually available at the time
   * of the report.
   * If multiple operations are in a single request, the total request size
   * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
   * partial failure behavior.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
   */
  public com.google.api.servicecontrol.v1.Operation getOperations(int index) {
    return operations_.get(index);
  }
  /**
   * <pre>
   * Operations to be reported.
   * Typically the service should report one operation per request.
   * Putting multiple operations into a single request is allowed, but should
   * be used only when multiple operations are natually available at the time
   * of the report.
   * If multiple operations are in a single request, the total request size
   * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
   * partial failure behavior.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
   */
  public com.google.api.servicecontrol.v1.OperationOrBuilder getOperationsOrBuilder(
      int index) {
    return operations_.get(index);
  }
  private void ensureOperationsIsMutable() {
    if (!operations_.isModifiable()) {
      operations_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(operations_);
     }
  }

  /**
   * <pre>
   * Operations to be reported.
   * Typically the service should report one operation per request.
   * Putting multiple operations into a single request is allowed, but should
   * be used only when multiple operations are natually available at the time
   * of the report.
   * If multiple operations are in a single request, the total request size
   * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
   * partial failure behavior.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
   */
  private void setOperations(
      int index, com.google.api.servicecontrol.v1.Operation value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureOperationsIsMutable();
    operations_.set(index, value);
  }
  /**
   * <pre>
   * Operations to be reported.
   * Typically the service should report one operation per request.
   * Putting multiple operations into a single request is allowed, but should
   * be used only when multiple operations are natually available at the time
   * of the report.
   * If multiple operations are in a single request, the total request size
   * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
   * partial failure behavior.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
   */
  private void setOperations(
      int index, com.google.api.servicecontrol.v1.Operation.Builder builderForValue) {
    ensureOperationsIsMutable();
    operations_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * Operations to be reported.
   * Typically the service should report one operation per request.
   * Putting multiple operations into a single request is allowed, but should
   * be used only when multiple operations are natually available at the time
   * of the report.
   * If multiple operations are in a single request, the total request size
   * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
   * partial failure behavior.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
   */
  private void addOperations(com.google.api.servicecontrol.v1.Operation value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureOperationsIsMutable();
    operations_.add(value);
  }
  /**
   * <pre>
   * Operations to be reported.
   * Typically the service should report one operation per request.
   * Putting multiple operations into a single request is allowed, but should
   * be used only when multiple operations are natually available at the time
   * of the report.
   * If multiple operations are in a single request, the total request size
   * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
   * partial failure behavior.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
   */
  private void addOperations(
      int index, com.google.api.servicecontrol.v1.Operation value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureOperationsIsMutable();
    operations_.add(index, value);
  }
  /**
   * <pre>
   * Operations to be reported.
   * Typically the service should report one operation per request.
   * Putting multiple operations into a single request is allowed, but should
   * be used only when multiple operations are natually available at the time
   * of the report.
   * If multiple operations are in a single request, the total request size
   * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
   * partial failure behavior.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
   */
  private void addOperations(
      com.google.api.servicecontrol.v1.Operation.Builder builderForValue) {
    ensureOperationsIsMutable();
    operations_.add(builderForValue.build());
  }
  /**
   * <pre>
   * Operations to be reported.
   * Typically the service should report one operation per request.
   * Putting multiple operations into a single request is allowed, but should
   * be used only when multiple operations are natually available at the time
   * of the report.
   * If multiple operations are in a single request, the total request size
   * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
   * partial failure behavior.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
   */
  private void addOperations(
      int index, com.google.api.servicecontrol.v1.Operation.Builder builderForValue) {
    ensureOperationsIsMutable();
    operations_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * Operations to be reported.
   * Typically the service should report one operation per request.
   * Putting multiple operations into a single request is allowed, but should
   * be used only when multiple operations are natually available at the time
   * of the report.
   * If multiple operations are in a single request, the total request size
   * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
   * partial failure behavior.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
   */
  private void addAllOperations(
      java.lang.Iterable<? extends com.google.api.servicecontrol.v1.Operation> values) {
    ensureOperationsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, operations_);
  }
  /**
   * <pre>
   * Operations to be reported.
   * Typically the service should report one operation per request.
   * Putting multiple operations into a single request is allowed, but should
   * be used only when multiple operations are natually available at the time
   * of the report.
   * If multiple operations are in a single request, the total request size
   * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
   * partial failure behavior.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
   */
  private void clearOperations() {
    operations_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Operations to be reported.
   * Typically the service should report one operation per request.
   * Putting multiple operations into a single request is allowed, but should
   * be used only when multiple operations are natually available at the time
   * of the report.
   * If multiple operations are in a single request, the total request size
   * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
   * partial failure behavior.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
   */
  private void removeOperations(int index) {
    ensureOperationsIsMutable();
    operations_.remove(index);
  }

  public static final int SERVICE_CONFIG_ID_FIELD_NUMBER = 3;
  private java.lang.String serviceConfigId_;
  /**
   * <pre>
   * Specifies which version of service config should be used to process the
   * request.
   * If unspecified or no matching version can be found, the
   * latest one will be used.
   * </pre>
   *
   * <code>optional string service_config_id = 3;</code>
   */
  public java.lang.String getServiceConfigId() {
    return serviceConfigId_;
  }
  /**
   * <pre>
   * Specifies which version of service config should be used to process the
   * request.
   * If unspecified or no matching version can be found, the
   * latest one will be used.
   * </pre>
   *
   * <code>optional string service_config_id = 3;</code>
   */
  public com.google.protobuf.ByteString
      getServiceConfigIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(serviceConfigId_);
  }
  /**
   * <pre>
   * Specifies which version of service config should be used to process the
   * request.
   * If unspecified or no matching version can be found, the
   * latest one will be used.
   * </pre>
   *
   * <code>optional string service_config_id = 3;</code>
   */
  private void setServiceConfigId(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    serviceConfigId_ = value;
  }
  /**
   * <pre>
   * Specifies which version of service config should be used to process the
   * request.
   * If unspecified or no matching version can be found, the
   * latest one will be used.
   * </pre>
   *
   * <code>optional string service_config_id = 3;</code>
   */
  private void clearServiceConfigId() {
    
    serviceConfigId_ = getDefaultInstance().getServiceConfigId();
  }
  /**
   * <pre>
   * Specifies which version of service config should be used to process the
   * request.
   * If unspecified or no matching version can be found, the
   * latest one will be used.
   * </pre>
   *
   * <code>optional string service_config_id = 3;</code>
   */
  private void setServiceConfigIdBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    serviceConfigId_ = value.toStringUtf8();
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!serviceName_.isEmpty()) {
      output.writeString(1, getServiceName());
    }
    for (int i = 0; i < operations_.size(); i++) {
      output.writeMessage(2, operations_.get(i));
    }
    if (!serviceConfigId_.isEmpty()) {
      output.writeString(3, getServiceConfigId());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (!serviceName_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getServiceName());
    }
    for (int i = 0; i < operations_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, operations_.get(i));
    }
    if (!serviceConfigId_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(3, getServiceConfigId());
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.google.api.servicecontrol.v1.ReportRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.servicecontrol.v1.ReportRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.servicecontrol.v1.ReportRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.servicecontrol.v1.ReportRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.servicecontrol.v1.ReportRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.servicecontrol.v1.ReportRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.servicecontrol.v1.ReportRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.api.servicecontrol.v1.ReportRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.servicecontrol.v1.ReportRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.servicecontrol.v1.ReportRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.api.servicecontrol.v1.ReportRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Request message for the Report method.
   * </pre>
   *
   * Protobuf type {@code google.api.servicecontrol.v1.ReportRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.api.servicecontrol.v1.ReportRequest, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.api.servicecontrol.v1.ReportRequest)
      com.google.api.servicecontrol.v1.ReportRequestOrBuilder {
    // Construct using com.google.api.servicecontrol.v1.ReportRequest.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The service name as specified in its service configuration. For example,
     * `"pubsub.googleapis.com"`.
     * See [google.api.Service][google.api.Service] for the definition of a service name.
     * </pre>
     *
     * <code>optional string service_name = 1;</code>
     */
    public java.lang.String getServiceName() {
      return instance.getServiceName();
    }
    /**
     * <pre>
     * The service name as specified in its service configuration. For example,
     * `"pubsub.googleapis.com"`.
     * See [google.api.Service][google.api.Service] for the definition of a service name.
     * </pre>
     *
     * <code>optional string service_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getServiceNameBytes() {
      return instance.getServiceNameBytes();
    }
    /**
     * <pre>
     * The service name as specified in its service configuration. For example,
     * `"pubsub.googleapis.com"`.
     * See [google.api.Service][google.api.Service] for the definition of a service name.
     * </pre>
     *
     * <code>optional string service_name = 1;</code>
     */
    public Builder setServiceName(
        java.lang.String value) {
      copyOnWrite();
      instance.setServiceName(value);
      return this;
    }
    /**
     * <pre>
     * The service name as specified in its service configuration. For example,
     * `"pubsub.googleapis.com"`.
     * See [google.api.Service][google.api.Service] for the definition of a service name.
     * </pre>
     *
     * <code>optional string service_name = 1;</code>
     */
    public Builder clearServiceName() {
      copyOnWrite();
      instance.clearServiceName();
      return this;
    }
    /**
     * <pre>
     * The service name as specified in its service configuration. For example,
     * `"pubsub.googleapis.com"`.
     * See [google.api.Service][google.api.Service] for the definition of a service name.
     * </pre>
     *
     * <code>optional string service_name = 1;</code>
     */
    public Builder setServiceNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setServiceNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * Operations to be reported.
     * Typically the service should report one operation per request.
     * Putting multiple operations into a single request is allowed, but should
     * be used only when multiple operations are natually available at the time
     * of the report.
     * If multiple operations are in a single request, the total request size
     * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
     * partial failure behavior.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
     */
    public java.util.List<com.google.api.servicecontrol.v1.Operation> getOperationsList() {
      return java.util.Collections.unmodifiableList(
          instance.getOperationsList());
    }
    /**
     * <pre>
     * Operations to be reported.
     * Typically the service should report one operation per request.
     * Putting multiple operations into a single request is allowed, but should
     * be used only when multiple operations are natually available at the time
     * of the report.
     * If multiple operations are in a single request, the total request size
     * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
     * partial failure behavior.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
     */
    public int getOperationsCount() {
      return instance.getOperationsCount();
    }/**
     * <pre>
     * Operations to be reported.
     * Typically the service should report one operation per request.
     * Putting multiple operations into a single request is allowed, but should
     * be used only when multiple operations are natually available at the time
     * of the report.
     * If multiple operations are in a single request, the total request size
     * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
     * partial failure behavior.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
     */
    public com.google.api.servicecontrol.v1.Operation getOperations(int index) {
      return instance.getOperations(index);
    }
    /**
     * <pre>
     * Operations to be reported.
     * Typically the service should report one operation per request.
     * Putting multiple operations into a single request is allowed, but should
     * be used only when multiple operations are natually available at the time
     * of the report.
     * If multiple operations are in a single request, the total request size
     * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
     * partial failure behavior.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
     */
    public Builder setOperations(
        int index, com.google.api.servicecontrol.v1.Operation value) {
      copyOnWrite();
      instance.setOperations(index, value);
      return this;
    }
    /**
     * <pre>
     * Operations to be reported.
     * Typically the service should report one operation per request.
     * Putting multiple operations into a single request is allowed, but should
     * be used only when multiple operations are natually available at the time
     * of the report.
     * If multiple operations are in a single request, the total request size
     * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
     * partial failure behavior.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
     */
    public Builder setOperations(
        int index, com.google.api.servicecontrol.v1.Operation.Builder builderForValue) {
      copyOnWrite();
      instance.setOperations(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Operations to be reported.
     * Typically the service should report one operation per request.
     * Putting multiple operations into a single request is allowed, but should
     * be used only when multiple operations are natually available at the time
     * of the report.
     * If multiple operations are in a single request, the total request size
     * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
     * partial failure behavior.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
     */
    public Builder addOperations(com.google.api.servicecontrol.v1.Operation value) {
      copyOnWrite();
      instance.addOperations(value);
      return this;
    }
    /**
     * <pre>
     * Operations to be reported.
     * Typically the service should report one operation per request.
     * Putting multiple operations into a single request is allowed, but should
     * be used only when multiple operations are natually available at the time
     * of the report.
     * If multiple operations are in a single request, the total request size
     * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
     * partial failure behavior.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
     */
    public Builder addOperations(
        int index, com.google.api.servicecontrol.v1.Operation value) {
      copyOnWrite();
      instance.addOperations(index, value);
      return this;
    }
    /**
     * <pre>
     * Operations to be reported.
     * Typically the service should report one operation per request.
     * Putting multiple operations into a single request is allowed, but should
     * be used only when multiple operations are natually available at the time
     * of the report.
     * If multiple operations are in a single request, the total request size
     * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
     * partial failure behavior.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
     */
    public Builder addOperations(
        com.google.api.servicecontrol.v1.Operation.Builder builderForValue) {
      copyOnWrite();
      instance.addOperations(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Operations to be reported.
     * Typically the service should report one operation per request.
     * Putting multiple operations into a single request is allowed, but should
     * be used only when multiple operations are natually available at the time
     * of the report.
     * If multiple operations are in a single request, the total request size
     * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
     * partial failure behavior.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
     */
    public Builder addOperations(
        int index, com.google.api.servicecontrol.v1.Operation.Builder builderForValue) {
      copyOnWrite();
      instance.addOperations(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Operations to be reported.
     * Typically the service should report one operation per request.
     * Putting multiple operations into a single request is allowed, but should
     * be used only when multiple operations are natually available at the time
     * of the report.
     * If multiple operations are in a single request, the total request size
     * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
     * partial failure behavior.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
     */
    public Builder addAllOperations(
        java.lang.Iterable<? extends com.google.api.servicecontrol.v1.Operation> values) {
      copyOnWrite();
      instance.addAllOperations(values);
      return this;
    }
    /**
     * <pre>
     * Operations to be reported.
     * Typically the service should report one operation per request.
     * Putting multiple operations into a single request is allowed, but should
     * be used only when multiple operations are natually available at the time
     * of the report.
     * If multiple operations are in a single request, the total request size
     * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
     * partial failure behavior.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
     */
    public Builder clearOperations() {
      copyOnWrite();
      instance.clearOperations();
      return this;
    }
    /**
     * <pre>
     * Operations to be reported.
     * Typically the service should report one operation per request.
     * Putting multiple operations into a single request is allowed, but should
     * be used only when multiple operations are natually available at the time
     * of the report.
     * If multiple operations are in a single request, the total request size
     * should be no larger than 1MB. See [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors] for
     * partial failure behavior.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.Operation operations = 2;</code>
     */
    public Builder removeOperations(int index) {
      copyOnWrite();
      instance.removeOperations(index);
      return this;
    }

    /**
     * <pre>
     * Specifies which version of service config should be used to process the
     * request.
     * If unspecified or no matching version can be found, the
     * latest one will be used.
     * </pre>
     *
     * <code>optional string service_config_id = 3;</code>
     */
    public java.lang.String getServiceConfigId() {
      return instance.getServiceConfigId();
    }
    /**
     * <pre>
     * Specifies which version of service config should be used to process the
     * request.
     * If unspecified or no matching version can be found, the
     * latest one will be used.
     * </pre>
     *
     * <code>optional string service_config_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getServiceConfigIdBytes() {
      return instance.getServiceConfigIdBytes();
    }
    /**
     * <pre>
     * Specifies which version of service config should be used to process the
     * request.
     * If unspecified or no matching version can be found, the
     * latest one will be used.
     * </pre>
     *
     * <code>optional string service_config_id = 3;</code>
     */
    public Builder setServiceConfigId(
        java.lang.String value) {
      copyOnWrite();
      instance.setServiceConfigId(value);
      return this;
    }
    /**
     * <pre>
     * Specifies which version of service config should be used to process the
     * request.
     * If unspecified or no matching version can be found, the
     * latest one will be used.
     * </pre>
     *
     * <code>optional string service_config_id = 3;</code>
     */
    public Builder clearServiceConfigId() {
      copyOnWrite();
      instance.clearServiceConfigId();
      return this;
    }
    /**
     * <pre>
     * Specifies which version of service config should be used to process the
     * request.
     * If unspecified or no matching version can be found, the
     * latest one will be used.
     * </pre>
     *
     * <code>optional string service_config_id = 3;</code>
     */
    public Builder setServiceConfigIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setServiceConfigIdBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.api.servicecontrol.v1.ReportRequest)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.api.servicecontrol.v1.ReportRequest();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        operations_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.google.api.servicecontrol.v1.ReportRequest other = (com.google.api.servicecontrol.v1.ReportRequest) arg1;
        serviceName_ = visitor.visitString(!serviceName_.isEmpty(), serviceName_,
            !other.serviceName_.isEmpty(), other.serviceName_);
        operations_= visitor.visitList(operations_, other.operations_);
        serviceConfigId_ = visitor.visitString(!serviceConfigId_.isEmpty(), serviceConfigId_,
            !other.serviceConfigId_.isEmpty(), other.serviceConfigId_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                serviceName_ = s;
                break;
              }
              case 18: {
                if (!operations_.isModifiable()) {
                  operations_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(operations_);
                }
                operations_.add(
                    input.readMessage(com.google.api.servicecontrol.v1.Operation.parser(), extensionRegistry));
                break;
              }
              case 26: {
                String s = input.readStringRequireUtf8();

                serviceConfigId_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.google.api.servicecontrol.v1.ReportRequest.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.ReportRequest)
  private static final com.google.api.servicecontrol.v1.ReportRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ReportRequest();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.google.api.servicecontrol.v1.ReportRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ReportRequest> PARSER;

  public static com.google.protobuf.Parser<ReportRequest> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

