// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/check_error.proto

package com.google.api.servicecontrol.v1;

/**
 * <pre>
 * Defines the errors to be returned in
 * [google.api.servicecontrol.v1.CheckResponse.check_errors][google.api.servicecontrol.v1.CheckResponse.check_errors].
 * </pre>
 *
 * Protobuf type {@code google.api.servicecontrol.v1.CheckError}
 */
public  final class CheckError extends
    com.google.protobuf.GeneratedMessageLite<
        CheckError, CheckError.Builder> implements
    // @@protoc_insertion_point(message_implements:google.api.servicecontrol.v1.CheckError)
    CheckErrorOrBuilder {
  private CheckError() {
    detail_ = "";
  }
  /**
   * <pre>
   * Error codes for Check responses.
   * </pre>
   *
   * Protobuf enum {@code google.api.servicecontrol.v1.CheckError.Code}
   */
  public enum Code
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * This is never used in `CheckResponse`.
     * </pre>
     *
     * <code>ERROR_CODE_UNSPECIFIED = 0;</code>
     */
    ERROR_CODE_UNSPECIFIED(0),
    /**
     * <pre>
     * The consumer's project id was not found.
     * Same as [google.rpc.Code.NOT_FOUND][].
     * </pre>
     *
     * <code>NOT_FOUND = 5;</code>
     */
    NOT_FOUND(5),
    /**
     * <pre>
     * The consumer doesn't have access to the specified resource.
     * Same as [google.rpc.Code.PERMISSION_DENIED][].
     * </pre>
     *
     * <code>PERMISSION_DENIED = 7;</code>
     */
    PERMISSION_DENIED(7),
    /**
     * <pre>
     * Quota check failed. Same as [google.rpc.Code.RESOURCE_EXHAUSTED][].
     * </pre>
     *
     * <code>RESOURCE_EXHAUSTED = 8;</code>
     */
    RESOURCE_EXHAUSTED(8),
    /**
     * <pre>
     * The consumer hasn't activated the service.
     * </pre>
     *
     * <code>SERVICE_NOT_ACTIVATED = 104;</code>
     */
    SERVICE_NOT_ACTIVATED(104),
    /**
     * <pre>
     * The consumer cannot access the service because billing is disabled.
     * </pre>
     *
     * <code>BILLING_DISABLED = 107;</code>
     */
    BILLING_DISABLED(107),
    /**
     * <pre>
     * The consumer's project has been marked as deleted (soft deletion).
     * </pre>
     *
     * <code>PROJECT_DELETED = 108;</code>
     */
    PROJECT_DELETED(108),
    /**
     * <pre>
     * The consumer's project number or id does not represent a valid project.
     * </pre>
     *
     * <code>PROJECT_INVALID = 114;</code>
     */
    PROJECT_INVALID(114),
    /**
     * <pre>
     * The IP address of the consumer is invalid for the specific consumer
     * project.
     * </pre>
     *
     * <code>IP_ADDRESS_BLOCKED = 109;</code>
     */
    IP_ADDRESS_BLOCKED(109),
    /**
     * <pre>
     * The referer address of the consumer request is invalid for the specific
     * consumer project.
     * </pre>
     *
     * <code>REFERER_BLOCKED = 110;</code>
     */
    REFERER_BLOCKED(110),
    /**
     * <pre>
     * The client application of the consumer request is invalid for the
     * specific consumer project.
     * </pre>
     *
     * <code>CLIENT_APP_BLOCKED = 111;</code>
     */
    CLIENT_APP_BLOCKED(111),
    /**
     * <pre>
     * The consumer's API key is invalid.
     * </pre>
     *
     * <code>API_KEY_INVALID = 105;</code>
     */
    API_KEY_INVALID(105),
    /**
     * <pre>
     * The consumer's API Key has expired.
     * </pre>
     *
     * <code>API_KEY_EXPIRED = 112;</code>
     */
    API_KEY_EXPIRED(112),
    /**
     * <pre>
     * The consumer's API Key was not found in config record.
     * </pre>
     *
     * <code>API_KEY_NOT_FOUND = 113;</code>
     */
    API_KEY_NOT_FOUND(113),
    /**
     * <pre>
     * The backend server for looking up project id/number is unavailable.
     * </pre>
     *
     * <code>NAMESPACE_LOOKUP_UNAVAILABLE = 300;</code>
     */
    NAMESPACE_LOOKUP_UNAVAILABLE(300),
    /**
     * <pre>
     * The backend server for checking service status is unavailable.
     * </pre>
     *
     * <code>SERVICE_STATUS_UNAVAILABLE = 301;</code>
     */
    SERVICE_STATUS_UNAVAILABLE(301),
    /**
     * <pre>
     * The backend server for checking billing status is unavailable.
     * </pre>
     *
     * <code>BILLING_STATUS_UNAVAILABLE = 302;</code>
     */
    BILLING_STATUS_UNAVAILABLE(302),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * This is never used in `CheckResponse`.
     * </pre>
     *
     * <code>ERROR_CODE_UNSPECIFIED = 0;</code>
     */
    public static final int ERROR_CODE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The consumer's project id was not found.
     * Same as [google.rpc.Code.NOT_FOUND][].
     * </pre>
     *
     * <code>NOT_FOUND = 5;</code>
     */
    public static final int NOT_FOUND_VALUE = 5;
    /**
     * <pre>
     * The consumer doesn't have access to the specified resource.
     * Same as [google.rpc.Code.PERMISSION_DENIED][].
     * </pre>
     *
     * <code>PERMISSION_DENIED = 7;</code>
     */
    public static final int PERMISSION_DENIED_VALUE = 7;
    /**
     * <pre>
     * Quota check failed. Same as [google.rpc.Code.RESOURCE_EXHAUSTED][].
     * </pre>
     *
     * <code>RESOURCE_EXHAUSTED = 8;</code>
     */
    public static final int RESOURCE_EXHAUSTED_VALUE = 8;
    /**
     * <pre>
     * The consumer hasn't activated the service.
     * </pre>
     *
     * <code>SERVICE_NOT_ACTIVATED = 104;</code>
     */
    public static final int SERVICE_NOT_ACTIVATED_VALUE = 104;
    /**
     * <pre>
     * The consumer cannot access the service because billing is disabled.
     * </pre>
     *
     * <code>BILLING_DISABLED = 107;</code>
     */
    public static final int BILLING_DISABLED_VALUE = 107;
    /**
     * <pre>
     * The consumer's project has been marked as deleted (soft deletion).
     * </pre>
     *
     * <code>PROJECT_DELETED = 108;</code>
     */
    public static final int PROJECT_DELETED_VALUE = 108;
    /**
     * <pre>
     * The consumer's project number or id does not represent a valid project.
     * </pre>
     *
     * <code>PROJECT_INVALID = 114;</code>
     */
    public static final int PROJECT_INVALID_VALUE = 114;
    /**
     * <pre>
     * The IP address of the consumer is invalid for the specific consumer
     * project.
     * </pre>
     *
     * <code>IP_ADDRESS_BLOCKED = 109;</code>
     */
    public static final int IP_ADDRESS_BLOCKED_VALUE = 109;
    /**
     * <pre>
     * The referer address of the consumer request is invalid for the specific
     * consumer project.
     * </pre>
     *
     * <code>REFERER_BLOCKED = 110;</code>
     */
    public static final int REFERER_BLOCKED_VALUE = 110;
    /**
     * <pre>
     * The client application of the consumer request is invalid for the
     * specific consumer project.
     * </pre>
     *
     * <code>CLIENT_APP_BLOCKED = 111;</code>
     */
    public static final int CLIENT_APP_BLOCKED_VALUE = 111;
    /**
     * <pre>
     * The consumer's API key is invalid.
     * </pre>
     *
     * <code>API_KEY_INVALID = 105;</code>
     */
    public static final int API_KEY_INVALID_VALUE = 105;
    /**
     * <pre>
     * The consumer's API Key has expired.
     * </pre>
     *
     * <code>API_KEY_EXPIRED = 112;</code>
     */
    public static final int API_KEY_EXPIRED_VALUE = 112;
    /**
     * <pre>
     * The consumer's API Key was not found in config record.
     * </pre>
     *
     * <code>API_KEY_NOT_FOUND = 113;</code>
     */
    public static final int API_KEY_NOT_FOUND_VALUE = 113;
    /**
     * <pre>
     * The backend server for looking up project id/number is unavailable.
     * </pre>
     *
     * <code>NAMESPACE_LOOKUP_UNAVAILABLE = 300;</code>
     */
    public static final int NAMESPACE_LOOKUP_UNAVAILABLE_VALUE = 300;
    /**
     * <pre>
     * The backend server for checking service status is unavailable.
     * </pre>
     *
     * <code>SERVICE_STATUS_UNAVAILABLE = 301;</code>
     */
    public static final int SERVICE_STATUS_UNAVAILABLE_VALUE = 301;
    /**
     * <pre>
     * The backend server for checking billing status is unavailable.
     * </pre>
     *
     * <code>BILLING_STATUS_UNAVAILABLE = 302;</code>
     */
    public static final int BILLING_STATUS_UNAVAILABLE_VALUE = 302;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Code valueOf(int value) {
      return forNumber(value);
    }

    public static Code forNumber(int value) {
      switch (value) {
        case 0: return ERROR_CODE_UNSPECIFIED;
        case 5: return NOT_FOUND;
        case 7: return PERMISSION_DENIED;
        case 8: return RESOURCE_EXHAUSTED;
        case 104: return SERVICE_NOT_ACTIVATED;
        case 107: return BILLING_DISABLED;
        case 108: return PROJECT_DELETED;
        case 114: return PROJECT_INVALID;
        case 109: return IP_ADDRESS_BLOCKED;
        case 110: return REFERER_BLOCKED;
        case 111: return CLIENT_APP_BLOCKED;
        case 105: return API_KEY_INVALID;
        case 112: return API_KEY_EXPIRED;
        case 113: return API_KEY_NOT_FOUND;
        case 300: return NAMESPACE_LOOKUP_UNAVAILABLE;
        case 301: return SERVICE_STATUS_UNAVAILABLE;
        case 302: return BILLING_STATUS_UNAVAILABLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Code>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Code> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Code>() {
            public Code findValueByNumber(int number) {
              return Code.forNumber(number);
            }
          };

    private final int value;

    private Code(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.api.servicecontrol.v1.CheckError.Code)
  }

  public static final int CODE_FIELD_NUMBER = 1;
  private int code_;
  /**
   * <pre>
   * The error code.
   * </pre>
   *
   * <code>optional .google.api.servicecontrol.v1.CheckError.Code code = 1;</code>
   */
  public int getCodeValue() {
    return code_;
  }
  /**
   * <pre>
   * The error code.
   * </pre>
   *
   * <code>optional .google.api.servicecontrol.v1.CheckError.Code code = 1;</code>
   */
  public com.google.api.servicecontrol.v1.CheckError.Code getCode() {
    com.google.api.servicecontrol.v1.CheckError.Code result = com.google.api.servicecontrol.v1.CheckError.Code.forNumber(code_);
    return result == null ? com.google.api.servicecontrol.v1.CheckError.Code.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * The error code.
   * </pre>
   *
   * <code>optional .google.api.servicecontrol.v1.CheckError.Code code = 1;</code>
   */
  private void setCodeValue(int value) {
      code_ = value;
  }
  /**
   * <pre>
   * The error code.
   * </pre>
   *
   * <code>optional .google.api.servicecontrol.v1.CheckError.Code code = 1;</code>
   */
  private void setCode(com.google.api.servicecontrol.v1.CheckError.Code value) {
    if (value == null) {
      throw new NullPointerException();
    }
    
    code_ = value.getNumber();
  }
  /**
   * <pre>
   * The error code.
   * </pre>
   *
   * <code>optional .google.api.servicecontrol.v1.CheckError.Code code = 1;</code>
   */
  private void clearCode() {
    
    code_ = 0;
  }

  public static final int DETAIL_FIELD_NUMBER = 2;
  private java.lang.String detail_;
  /**
   * <pre>
   * Free-form text providing details on the error cause of the error.
   * </pre>
   *
   * <code>optional string detail = 2;</code>
   */
  public java.lang.String getDetail() {
    return detail_;
  }
  /**
   * <pre>
   * Free-form text providing details on the error cause of the error.
   * </pre>
   *
   * <code>optional string detail = 2;</code>
   */
  public com.google.protobuf.ByteString
      getDetailBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(detail_);
  }
  /**
   * <pre>
   * Free-form text providing details on the error cause of the error.
   * </pre>
   *
   * <code>optional string detail = 2;</code>
   */
  private void setDetail(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    detail_ = value;
  }
  /**
   * <pre>
   * Free-form text providing details on the error cause of the error.
   * </pre>
   *
   * <code>optional string detail = 2;</code>
   */
  private void clearDetail() {
    
    detail_ = getDefaultInstance().getDetail();
  }
  /**
   * <pre>
   * Free-form text providing details on the error cause of the error.
   * </pre>
   *
   * <code>optional string detail = 2;</code>
   */
  private void setDetailBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    detail_ = value.toStringUtf8();
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (code_ != com.google.api.servicecontrol.v1.CheckError.Code.ERROR_CODE_UNSPECIFIED.getNumber()) {
      output.writeEnum(1, code_);
    }
    if (!detail_.isEmpty()) {
      output.writeString(2, getDetail());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (code_ != com.google.api.servicecontrol.v1.CheckError.Code.ERROR_CODE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, code_);
    }
    if (!detail_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getDetail());
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.google.api.servicecontrol.v1.CheckError parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.servicecontrol.v1.CheckError parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.servicecontrol.v1.CheckError parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.servicecontrol.v1.CheckError parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.servicecontrol.v1.CheckError parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.servicecontrol.v1.CheckError parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.servicecontrol.v1.CheckError parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.api.servicecontrol.v1.CheckError parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.servicecontrol.v1.CheckError parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.servicecontrol.v1.CheckError parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.api.servicecontrol.v1.CheckError prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Defines the errors to be returned in
   * [google.api.servicecontrol.v1.CheckResponse.check_errors][google.api.servicecontrol.v1.CheckResponse.check_errors].
   * </pre>
   *
   * Protobuf type {@code google.api.servicecontrol.v1.CheckError}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.api.servicecontrol.v1.CheckError, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.api.servicecontrol.v1.CheckError)
      com.google.api.servicecontrol.v1.CheckErrorOrBuilder {
    // Construct using com.google.api.servicecontrol.v1.CheckError.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The error code.
     * </pre>
     *
     * <code>optional .google.api.servicecontrol.v1.CheckError.Code code = 1;</code>
     */
    public int getCodeValue() {
      return instance.getCodeValue();
    }
    /**
     * <pre>
     * The error code.
     * </pre>
     *
     * <code>optional .google.api.servicecontrol.v1.CheckError.Code code = 1;</code>
     */
    public Builder setCodeValue(int value) {
      copyOnWrite();
      instance.setCodeValue(value);
      return this;
    }
    /**
     * <pre>
     * The error code.
     * </pre>
     *
     * <code>optional .google.api.servicecontrol.v1.CheckError.Code code = 1;</code>
     */
    public com.google.api.servicecontrol.v1.CheckError.Code getCode() {
      return instance.getCode();
    }
    /**
     * <pre>
     * The error code.
     * </pre>
     *
     * <code>optional .google.api.servicecontrol.v1.CheckError.Code code = 1;</code>
     */
    public Builder setCode(com.google.api.servicecontrol.v1.CheckError.Code value) {
      copyOnWrite();
      instance.setCode(value);
      return this;
    }
    /**
     * <pre>
     * The error code.
     * </pre>
     *
     * <code>optional .google.api.servicecontrol.v1.CheckError.Code code = 1;</code>
     */
    public Builder clearCode() {
      copyOnWrite();
      instance.clearCode();
      return this;
    }

    /**
     * <pre>
     * Free-form text providing details on the error cause of the error.
     * </pre>
     *
     * <code>optional string detail = 2;</code>
     */
    public java.lang.String getDetail() {
      return instance.getDetail();
    }
    /**
     * <pre>
     * Free-form text providing details on the error cause of the error.
     * </pre>
     *
     * <code>optional string detail = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDetailBytes() {
      return instance.getDetailBytes();
    }
    /**
     * <pre>
     * Free-form text providing details on the error cause of the error.
     * </pre>
     *
     * <code>optional string detail = 2;</code>
     */
    public Builder setDetail(
        java.lang.String value) {
      copyOnWrite();
      instance.setDetail(value);
      return this;
    }
    /**
     * <pre>
     * Free-form text providing details on the error cause of the error.
     * </pre>
     *
     * <code>optional string detail = 2;</code>
     */
    public Builder clearDetail() {
      copyOnWrite();
      instance.clearDetail();
      return this;
    }
    /**
     * <pre>
     * Free-form text providing details on the error cause of the error.
     * </pre>
     *
     * <code>optional string detail = 2;</code>
     */
    public Builder setDetailBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setDetailBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.api.servicecontrol.v1.CheckError)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.api.servicecontrol.v1.CheckError();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.google.api.servicecontrol.v1.CheckError other = (com.google.api.servicecontrol.v1.CheckError) arg1;
        code_ = visitor.visitInt(code_ != 0, code_,    other.code_ != 0, other.code_);
        detail_ = visitor.visitString(!detail_.isEmpty(), detail_,
            !other.detail_.isEmpty(), other.detail_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();

                code_ = rawValue;
                break;
              }
              case 18: {
                String s = input.readStringRequireUtf8();

                detail_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.google.api.servicecontrol.v1.CheckError.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.CheckError)
  private static final com.google.api.servicecontrol.v1.CheckError DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new CheckError();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.google.api.servicecontrol.v1.CheckError getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<CheckError> PARSER;

  public static com.google.protobuf.Parser<CheckError> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

