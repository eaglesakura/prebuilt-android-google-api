// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/documentation.proto

package com.google.api;

/**
 * <pre>
 * A documentation rule provides information about individual API elements.
 * </pre>
 *
 * Protobuf type {@code google.api.DocumentationRule}
 */
public  final class DocumentationRule extends
    com.google.protobuf.GeneratedMessageLite<
        DocumentationRule, DocumentationRule.Builder> implements
    // @@protoc_insertion_point(message_implements:google.api.DocumentationRule)
    DocumentationRuleOrBuilder {
  private DocumentationRule() {
    selector_ = "";
    description_ = "";
    deprecationDescription_ = "";
  }
  public static final int SELECTOR_FIELD_NUMBER = 1;
  private java.lang.String selector_;
  /**
   * <pre>
   * The selector is a comma-separated list of patterns. Each pattern is a
   * qualified name of the element which may end in "*", indicating a wildcard.
   * Wildcards are only allowed at the end and for a whole component of the
   * qualified name, i.e. "foo.*" is ok, but not "foo.b*" or "foo.*.bar". To
   * specify a default for all applicable elements, the whole pattern "*"
   * is used.
   * </pre>
   *
   * <code>optional string selector = 1;</code>
   */
  public java.lang.String getSelector() {
    return selector_;
  }
  /**
   * <pre>
   * The selector is a comma-separated list of patterns. Each pattern is a
   * qualified name of the element which may end in "*", indicating a wildcard.
   * Wildcards are only allowed at the end and for a whole component of the
   * qualified name, i.e. "foo.*" is ok, but not "foo.b*" or "foo.*.bar". To
   * specify a default for all applicable elements, the whole pattern "*"
   * is used.
   * </pre>
   *
   * <code>optional string selector = 1;</code>
   */
  public com.google.protobuf.ByteString
      getSelectorBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(selector_);
  }
  /**
   * <pre>
   * The selector is a comma-separated list of patterns. Each pattern is a
   * qualified name of the element which may end in "*", indicating a wildcard.
   * Wildcards are only allowed at the end and for a whole component of the
   * qualified name, i.e. "foo.*" is ok, but not "foo.b*" or "foo.*.bar". To
   * specify a default for all applicable elements, the whole pattern "*"
   * is used.
   * </pre>
   *
   * <code>optional string selector = 1;</code>
   */
  private void setSelector(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    selector_ = value;
  }
  /**
   * <pre>
   * The selector is a comma-separated list of patterns. Each pattern is a
   * qualified name of the element which may end in "*", indicating a wildcard.
   * Wildcards are only allowed at the end and for a whole component of the
   * qualified name, i.e. "foo.*" is ok, but not "foo.b*" or "foo.*.bar". To
   * specify a default for all applicable elements, the whole pattern "*"
   * is used.
   * </pre>
   *
   * <code>optional string selector = 1;</code>
   */
  private void clearSelector() {
    
    selector_ = getDefaultInstance().getSelector();
  }
  /**
   * <pre>
   * The selector is a comma-separated list of patterns. Each pattern is a
   * qualified name of the element which may end in "*", indicating a wildcard.
   * Wildcards are only allowed at the end and for a whole component of the
   * qualified name, i.e. "foo.*" is ok, but not "foo.b*" or "foo.*.bar". To
   * specify a default for all applicable elements, the whole pattern "*"
   * is used.
   * </pre>
   *
   * <code>optional string selector = 1;</code>
   */
  private void setSelectorBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    selector_ = value.toStringUtf8();
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 2;
  private java.lang.String description_;
  /**
   * <pre>
   * Description of the selected API(s).
   * </pre>
   *
   * <code>optional string description = 2;</code>
   */
  public java.lang.String getDescription() {
    return description_;
  }
  /**
   * <pre>
   * Description of the selected API(s).
   * </pre>
   *
   * <code>optional string description = 2;</code>
   */
  public com.google.protobuf.ByteString
      getDescriptionBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(description_);
  }
  /**
   * <pre>
   * Description of the selected API(s).
   * </pre>
   *
   * <code>optional string description = 2;</code>
   */
  private void setDescription(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    description_ = value;
  }
  /**
   * <pre>
   * Description of the selected API(s).
   * </pre>
   *
   * <code>optional string description = 2;</code>
   */
  private void clearDescription() {
    
    description_ = getDefaultInstance().getDescription();
  }
  /**
   * <pre>
   * Description of the selected API(s).
   * </pre>
   *
   * <code>optional string description = 2;</code>
   */
  private void setDescriptionBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    description_ = value.toStringUtf8();
  }

  public static final int DEPRECATION_DESCRIPTION_FIELD_NUMBER = 3;
  private java.lang.String deprecationDescription_;
  /**
   * <pre>
   * Deprecation description of the selected element(s). It can be provided if an
   * element is marked as `deprecated`.
   * </pre>
   *
   * <code>optional string deprecation_description = 3;</code>
   */
  public java.lang.String getDeprecationDescription() {
    return deprecationDescription_;
  }
  /**
   * <pre>
   * Deprecation description of the selected element(s). It can be provided if an
   * element is marked as `deprecated`.
   * </pre>
   *
   * <code>optional string deprecation_description = 3;</code>
   */
  public com.google.protobuf.ByteString
      getDeprecationDescriptionBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(deprecationDescription_);
  }
  /**
   * <pre>
   * Deprecation description of the selected element(s). It can be provided if an
   * element is marked as `deprecated`.
   * </pre>
   *
   * <code>optional string deprecation_description = 3;</code>
   */
  private void setDeprecationDescription(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    deprecationDescription_ = value;
  }
  /**
   * <pre>
   * Deprecation description of the selected element(s). It can be provided if an
   * element is marked as `deprecated`.
   * </pre>
   *
   * <code>optional string deprecation_description = 3;</code>
   */
  private void clearDeprecationDescription() {
    
    deprecationDescription_ = getDefaultInstance().getDeprecationDescription();
  }
  /**
   * <pre>
   * Deprecation description of the selected element(s). It can be provided if an
   * element is marked as `deprecated`.
   * </pre>
   *
   * <code>optional string deprecation_description = 3;</code>
   */
  private void setDeprecationDescriptionBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    deprecationDescription_ = value.toStringUtf8();
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!selector_.isEmpty()) {
      output.writeString(1, getSelector());
    }
    if (!description_.isEmpty()) {
      output.writeString(2, getDescription());
    }
    if (!deprecationDescription_.isEmpty()) {
      output.writeString(3, getDeprecationDescription());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (!selector_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getSelector());
    }
    if (!description_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getDescription());
    }
    if (!deprecationDescription_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(3, getDeprecationDescription());
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.google.api.DocumentationRule parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.DocumentationRule parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.DocumentationRule parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.DocumentationRule parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.DocumentationRule parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.DocumentationRule parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.DocumentationRule parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.api.DocumentationRule parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.DocumentationRule parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.DocumentationRule parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.api.DocumentationRule prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * A documentation rule provides information about individual API elements.
   * </pre>
   *
   * Protobuf type {@code google.api.DocumentationRule}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.api.DocumentationRule, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.api.DocumentationRule)
      com.google.api.DocumentationRuleOrBuilder {
    // Construct using com.google.api.DocumentationRule.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The selector is a comma-separated list of patterns. Each pattern is a
     * qualified name of the element which may end in "*", indicating a wildcard.
     * Wildcards are only allowed at the end and for a whole component of the
     * qualified name, i.e. "foo.*" is ok, but not "foo.b*" or "foo.*.bar". To
     * specify a default for all applicable elements, the whole pattern "*"
     * is used.
     * </pre>
     *
     * <code>optional string selector = 1;</code>
     */
    public java.lang.String getSelector() {
      return instance.getSelector();
    }
    /**
     * <pre>
     * The selector is a comma-separated list of patterns. Each pattern is a
     * qualified name of the element which may end in "*", indicating a wildcard.
     * Wildcards are only allowed at the end and for a whole component of the
     * qualified name, i.e. "foo.*" is ok, but not "foo.b*" or "foo.*.bar". To
     * specify a default for all applicable elements, the whole pattern "*"
     * is used.
     * </pre>
     *
     * <code>optional string selector = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSelectorBytes() {
      return instance.getSelectorBytes();
    }
    /**
     * <pre>
     * The selector is a comma-separated list of patterns. Each pattern is a
     * qualified name of the element which may end in "*", indicating a wildcard.
     * Wildcards are only allowed at the end and for a whole component of the
     * qualified name, i.e. "foo.*" is ok, but not "foo.b*" or "foo.*.bar". To
     * specify a default for all applicable elements, the whole pattern "*"
     * is used.
     * </pre>
     *
     * <code>optional string selector = 1;</code>
     */
    public Builder setSelector(
        java.lang.String value) {
      copyOnWrite();
      instance.setSelector(value);
      return this;
    }
    /**
     * <pre>
     * The selector is a comma-separated list of patterns. Each pattern is a
     * qualified name of the element which may end in "*", indicating a wildcard.
     * Wildcards are only allowed at the end and for a whole component of the
     * qualified name, i.e. "foo.*" is ok, but not "foo.b*" or "foo.*.bar". To
     * specify a default for all applicable elements, the whole pattern "*"
     * is used.
     * </pre>
     *
     * <code>optional string selector = 1;</code>
     */
    public Builder clearSelector() {
      copyOnWrite();
      instance.clearSelector();
      return this;
    }
    /**
     * <pre>
     * The selector is a comma-separated list of patterns. Each pattern is a
     * qualified name of the element which may end in "*", indicating a wildcard.
     * Wildcards are only allowed at the end and for a whole component of the
     * qualified name, i.e. "foo.*" is ok, but not "foo.b*" or "foo.*.bar". To
     * specify a default for all applicable elements, the whole pattern "*"
     * is used.
     * </pre>
     *
     * <code>optional string selector = 1;</code>
     */
    public Builder setSelectorBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSelectorBytes(value);
      return this;
    }

    /**
     * <pre>
     * Description of the selected API(s).
     * </pre>
     *
     * <code>optional string description = 2;</code>
     */
    public java.lang.String getDescription() {
      return instance.getDescription();
    }
    /**
     * <pre>
     * Description of the selected API(s).
     * </pre>
     *
     * <code>optional string description = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      return instance.getDescriptionBytes();
    }
    /**
     * <pre>
     * Description of the selected API(s).
     * </pre>
     *
     * <code>optional string description = 2;</code>
     */
    public Builder setDescription(
        java.lang.String value) {
      copyOnWrite();
      instance.setDescription(value);
      return this;
    }
    /**
     * <pre>
     * Description of the selected API(s).
     * </pre>
     *
     * <code>optional string description = 2;</code>
     */
    public Builder clearDescription() {
      copyOnWrite();
      instance.clearDescription();
      return this;
    }
    /**
     * <pre>
     * Description of the selected API(s).
     * </pre>
     *
     * <code>optional string description = 2;</code>
     */
    public Builder setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setDescriptionBytes(value);
      return this;
    }

    /**
     * <pre>
     * Deprecation description of the selected element(s). It can be provided if an
     * element is marked as `deprecated`.
     * </pre>
     *
     * <code>optional string deprecation_description = 3;</code>
     */
    public java.lang.String getDeprecationDescription() {
      return instance.getDeprecationDescription();
    }
    /**
     * <pre>
     * Deprecation description of the selected element(s). It can be provided if an
     * element is marked as `deprecated`.
     * </pre>
     *
     * <code>optional string deprecation_description = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDeprecationDescriptionBytes() {
      return instance.getDeprecationDescriptionBytes();
    }
    /**
     * <pre>
     * Deprecation description of the selected element(s). It can be provided if an
     * element is marked as `deprecated`.
     * </pre>
     *
     * <code>optional string deprecation_description = 3;</code>
     */
    public Builder setDeprecationDescription(
        java.lang.String value) {
      copyOnWrite();
      instance.setDeprecationDescription(value);
      return this;
    }
    /**
     * <pre>
     * Deprecation description of the selected element(s). It can be provided if an
     * element is marked as `deprecated`.
     * </pre>
     *
     * <code>optional string deprecation_description = 3;</code>
     */
    public Builder clearDeprecationDescription() {
      copyOnWrite();
      instance.clearDeprecationDescription();
      return this;
    }
    /**
     * <pre>
     * Deprecation description of the selected element(s). It can be provided if an
     * element is marked as `deprecated`.
     * </pre>
     *
     * <code>optional string deprecation_description = 3;</code>
     */
    public Builder setDeprecationDescriptionBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setDeprecationDescriptionBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.api.DocumentationRule)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.api.DocumentationRule();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.google.api.DocumentationRule other = (com.google.api.DocumentationRule) arg1;
        selector_ = visitor.visitString(!selector_.isEmpty(), selector_,
            !other.selector_.isEmpty(), other.selector_);
        description_ = visitor.visitString(!description_.isEmpty(), description_,
            !other.description_.isEmpty(), other.description_);
        deprecationDescription_ = visitor.visitString(!deprecationDescription_.isEmpty(), deprecationDescription_,
            !other.deprecationDescription_.isEmpty(), other.deprecationDescription_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                selector_ = s;
                break;
              }
              case 18: {
                String s = input.readStringRequireUtf8();

                description_ = s;
                break;
              }
              case 26: {
                String s = input.readStringRequireUtf8();

                deprecationDescription_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.google.api.DocumentationRule.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.api.DocumentationRule)
  private static final com.google.api.DocumentationRule DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new DocumentationRule();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.google.api.DocumentationRule getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<DocumentationRule> PARSER;

  public static com.google.protobuf.Parser<DocumentationRule> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

