// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/container/v1/cluster_service.proto

package com.google.container.v1;

/**
 * <pre>
 * NodePool contains the name and configuration for a cluster's node pool.
 * Node pools are a set of nodes (i.e. VM's), with a common configuration and
 * specification, under the control of the cluster master. They may have a set
 * of Kubernetes labels applied to them, which may be used to reference them
 * during pod scheduling. They may also be resized up or down, to accommodate
 * the workload.
 * </pre>
 *
 * Protobuf type {@code google.container.v1.NodePool}
 */
public  final class NodePool extends
    com.google.protobuf.GeneratedMessageLite<
        NodePool, NodePool.Builder> implements
    // @@protoc_insertion_point(message_implements:google.container.v1.NodePool)
    NodePoolOrBuilder {
  private NodePool() {
    name_ = "";
    selfLink_ = "";
    version_ = "";
    instanceGroupUrls_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    statusMessage_ = "";
  }
  /**
   * <pre>
   * The current status of the node pool instance.
   * </pre>
   *
   * Protobuf enum {@code google.container.v1.NodePool.Status}
   */
  public enum Status
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Not set.
     * </pre>
     *
     * <code>STATUS_UNSPECIFIED = 0;</code>
     */
    STATUS_UNSPECIFIED(0),
    /**
     * <pre>
     * The PROVISIONING state indicates the node pool is being created.
     * </pre>
     *
     * <code>PROVISIONING = 1;</code>
     */
    PROVISIONING(1),
    /**
     * <pre>
     * The RUNNING state indicates the node pool has been created
     * and is fully usable.
     * </pre>
     *
     * <code>RUNNING = 2;</code>
     */
    RUNNING(2),
    /**
     * <pre>
     * The RUNNING_WITH_ERROR state indicates the node pool has been created
     * and is partially usable. Some error state has occurred and some
     * functionality may be impaired. Customer may need to reissue a request
     * or trigger a new update.
     * </pre>
     *
     * <code>RUNNING_WITH_ERROR = 3;</code>
     */
    RUNNING_WITH_ERROR(3),
    /**
     * <pre>
     * The RECONCILING state indicates that some work is actively being done on
     * the node pool, such as upgrading node software. Details can
     * be found in the `statusMessage` field.
     * </pre>
     *
     * <code>RECONCILING = 4;</code>
     */
    RECONCILING(4),
    /**
     * <pre>
     * The STOPPING state indicates the node pool is being deleted.
     * </pre>
     *
     * <code>STOPPING = 5;</code>
     */
    STOPPING(5),
    /**
     * <pre>
     * The ERROR state indicates the node pool may be unusable. Details
     * can be found in the `statusMessage` field.
     * </pre>
     *
     * <code>ERROR = 6;</code>
     */
    ERROR(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Not set.
     * </pre>
     *
     * <code>STATUS_UNSPECIFIED = 0;</code>
     */
    public static final int STATUS_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The PROVISIONING state indicates the node pool is being created.
     * </pre>
     *
     * <code>PROVISIONING = 1;</code>
     */
    public static final int PROVISIONING_VALUE = 1;
    /**
     * <pre>
     * The RUNNING state indicates the node pool has been created
     * and is fully usable.
     * </pre>
     *
     * <code>RUNNING = 2;</code>
     */
    public static final int RUNNING_VALUE = 2;
    /**
     * <pre>
     * The RUNNING_WITH_ERROR state indicates the node pool has been created
     * and is partially usable. Some error state has occurred and some
     * functionality may be impaired. Customer may need to reissue a request
     * or trigger a new update.
     * </pre>
     *
     * <code>RUNNING_WITH_ERROR = 3;</code>
     */
    public static final int RUNNING_WITH_ERROR_VALUE = 3;
    /**
     * <pre>
     * The RECONCILING state indicates that some work is actively being done on
     * the node pool, such as upgrading node software. Details can
     * be found in the `statusMessage` field.
     * </pre>
     *
     * <code>RECONCILING = 4;</code>
     */
    public static final int RECONCILING_VALUE = 4;
    /**
     * <pre>
     * The STOPPING state indicates the node pool is being deleted.
     * </pre>
     *
     * <code>STOPPING = 5;</code>
     */
    public static final int STOPPING_VALUE = 5;
    /**
     * <pre>
     * The ERROR state indicates the node pool may be unusable. Details
     * can be found in the `statusMessage` field.
     * </pre>
     *
     * <code>ERROR = 6;</code>
     */
    public static final int ERROR_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Status valueOf(int value) {
      return forNumber(value);
    }

    public static Status forNumber(int value) {
      switch (value) {
        case 0: return STATUS_UNSPECIFIED;
        case 1: return PROVISIONING;
        case 2: return RUNNING;
        case 3: return RUNNING_WITH_ERROR;
        case 4: return RECONCILING;
        case 5: return STOPPING;
        case 6: return ERROR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Status> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Status>() {
            public Status findValueByNumber(int number) {
              return Status.forNumber(number);
            }
          };

    private final int value;

    private Status(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.container.v1.NodePool.Status)
  }

  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;
  private java.lang.String name_;
  /**
   * <pre>
   * The name of the node pool.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   */
  public java.lang.String getName() {
    return name_;
  }
  /**
   * <pre>
   * The name of the node pool.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(name_);
  }
  /**
   * <pre>
   * The name of the node pool.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   */
  private void setName(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    name_ = value;
  }
  /**
   * <pre>
   * The name of the node pool.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   */
  private void clearName() {
    
    name_ = getDefaultInstance().getName();
  }
  /**
   * <pre>
   * The name of the node pool.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   */
  private void setNameBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    name_ = value.toStringUtf8();
  }

  public static final int CONFIG_FIELD_NUMBER = 2;
  private com.google.container.v1.NodeConfig config_;
  /**
   * <pre>
   * The node configuration of the pool.
   * </pre>
   *
   * <code>optional .google.container.v1.NodeConfig config = 2;</code>
   */
  public boolean hasConfig() {
    return config_ != null;
  }
  /**
   * <pre>
   * The node configuration of the pool.
   * </pre>
   *
   * <code>optional .google.container.v1.NodeConfig config = 2;</code>
   */
  public com.google.container.v1.NodeConfig getConfig() {
    return config_ == null ? com.google.container.v1.NodeConfig.getDefaultInstance() : config_;
  }
  /**
   * <pre>
   * The node configuration of the pool.
   * </pre>
   *
   * <code>optional .google.container.v1.NodeConfig config = 2;</code>
   */
  private void setConfig(com.google.container.v1.NodeConfig value) {
    if (value == null) {
      throw new NullPointerException();
    }
    config_ = value;
    
    }
  /**
   * <pre>
   * The node configuration of the pool.
   * </pre>
   *
   * <code>optional .google.container.v1.NodeConfig config = 2;</code>
   */
  private void setConfig(
      com.google.container.v1.NodeConfig.Builder builderForValue) {
    config_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * The node configuration of the pool.
   * </pre>
   *
   * <code>optional .google.container.v1.NodeConfig config = 2;</code>
   */
  private void mergeConfig(com.google.container.v1.NodeConfig value) {
    if (config_ != null &&
        config_ != com.google.container.v1.NodeConfig.getDefaultInstance()) {
      config_ =
        com.google.container.v1.NodeConfig.newBuilder(config_).mergeFrom(value).buildPartial();
    } else {
      config_ = value;
    }
    
  }
  /**
   * <pre>
   * The node configuration of the pool.
   * </pre>
   *
   * <code>optional .google.container.v1.NodeConfig config = 2;</code>
   */
  private void clearConfig() {  config_ = null;
    
  }

  public static final int INITIAL_NODE_COUNT_FIELD_NUMBER = 3;
  private int initialNodeCount_;
  /**
   * <pre>
   * The initial node count for the pool. You must ensure that your
   * Compute Engine &lt;a href="/compute/docs/resource-quotas"&gt;resource quota&lt;/a&gt;
   * is sufficient for this number of instances. You must also have available
   * firewall and routes quota.
   * </pre>
   *
   * <code>optional int32 initial_node_count = 3;</code>
   */
  public int getInitialNodeCount() {
    return initialNodeCount_;
  }
  /**
   * <pre>
   * The initial node count for the pool. You must ensure that your
   * Compute Engine &lt;a href="/compute/docs/resource-quotas"&gt;resource quota&lt;/a&gt;
   * is sufficient for this number of instances. You must also have available
   * firewall and routes quota.
   * </pre>
   *
   * <code>optional int32 initial_node_count = 3;</code>
   */
  private void setInitialNodeCount(int value) {
    
    initialNodeCount_ = value;
  }
  /**
   * <pre>
   * The initial node count for the pool. You must ensure that your
   * Compute Engine &lt;a href="/compute/docs/resource-quotas"&gt;resource quota&lt;/a&gt;
   * is sufficient for this number of instances. You must also have available
   * firewall and routes quota.
   * </pre>
   *
   * <code>optional int32 initial_node_count = 3;</code>
   */
  private void clearInitialNodeCount() {
    
    initialNodeCount_ = 0;
  }

  public static final int SELF_LINK_FIELD_NUMBER = 100;
  private java.lang.String selfLink_;
  /**
   * <pre>
   * [Output only] Server-defined URL for the resource.
   * </pre>
   *
   * <code>optional string self_link = 100;</code>
   */
  public java.lang.String getSelfLink() {
    return selfLink_;
  }
  /**
   * <pre>
   * [Output only] Server-defined URL for the resource.
   * </pre>
   *
   * <code>optional string self_link = 100;</code>
   */
  public com.google.protobuf.ByteString
      getSelfLinkBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(selfLink_);
  }
  /**
   * <pre>
   * [Output only] Server-defined URL for the resource.
   * </pre>
   *
   * <code>optional string self_link = 100;</code>
   */
  private void setSelfLink(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    selfLink_ = value;
  }
  /**
   * <pre>
   * [Output only] Server-defined URL for the resource.
   * </pre>
   *
   * <code>optional string self_link = 100;</code>
   */
  private void clearSelfLink() {
    
    selfLink_ = getDefaultInstance().getSelfLink();
  }
  /**
   * <pre>
   * [Output only] Server-defined URL for the resource.
   * </pre>
   *
   * <code>optional string self_link = 100;</code>
   */
  private void setSelfLinkBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    selfLink_ = value.toStringUtf8();
  }

  public static final int VERSION_FIELD_NUMBER = 101;
  private java.lang.String version_;
  /**
   * <pre>
   * [Output only] The version of the Kubernetes of this node.
   * </pre>
   *
   * <code>optional string version = 101;</code>
   */
  public java.lang.String getVersion() {
    return version_;
  }
  /**
   * <pre>
   * [Output only] The version of the Kubernetes of this node.
   * </pre>
   *
   * <code>optional string version = 101;</code>
   */
  public com.google.protobuf.ByteString
      getVersionBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(version_);
  }
  /**
   * <pre>
   * [Output only] The version of the Kubernetes of this node.
   * </pre>
   *
   * <code>optional string version = 101;</code>
   */
  private void setVersion(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    version_ = value;
  }
  /**
   * <pre>
   * [Output only] The version of the Kubernetes of this node.
   * </pre>
   *
   * <code>optional string version = 101;</code>
   */
  private void clearVersion() {
    
    version_ = getDefaultInstance().getVersion();
  }
  /**
   * <pre>
   * [Output only] The version of the Kubernetes of this node.
   * </pre>
   *
   * <code>optional string version = 101;</code>
   */
  private void setVersionBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    version_ = value.toStringUtf8();
  }

  public static final int INSTANCE_GROUP_URLS_FIELD_NUMBER = 102;
  private com.google.protobuf.Internal.ProtobufList<String> instanceGroupUrls_;
  /**
   * <pre>
   * [Output only] The resource URLs of [instance
   * groups](/compute/docs/instance-groups/) associated with this
   * node pool.
   * </pre>
   *
   * <code>repeated string instance_group_urls = 102;</code>
   */
  public java.util.List<String> getInstanceGroupUrlsList() {
    return instanceGroupUrls_;
  }
  /**
   * <pre>
   * [Output only] The resource URLs of [instance
   * groups](/compute/docs/instance-groups/) associated with this
   * node pool.
   * </pre>
   *
   * <code>repeated string instance_group_urls = 102;</code>
   */
  public int getInstanceGroupUrlsCount() {
    return instanceGroupUrls_.size();
  }
  /**
   * <pre>
   * [Output only] The resource URLs of [instance
   * groups](/compute/docs/instance-groups/) associated with this
   * node pool.
   * </pre>
   *
   * <code>repeated string instance_group_urls = 102;</code>
   */
  public java.lang.String getInstanceGroupUrls(int index) {
    return instanceGroupUrls_.get(index);
  }
  /**
   * <pre>
   * [Output only] The resource URLs of [instance
   * groups](/compute/docs/instance-groups/) associated with this
   * node pool.
   * </pre>
   *
   * <code>repeated string instance_group_urls = 102;</code>
   */
  public com.google.protobuf.ByteString
      getInstanceGroupUrlsBytes(int index) {
    return com.google.protobuf.ByteString.copyFromUtf8(
        instanceGroupUrls_.get(index));
  }
  private void ensureInstanceGroupUrlsIsMutable() {
    if (!instanceGroupUrls_.isModifiable()) {
      instanceGroupUrls_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(instanceGroupUrls_);
     }
  }
  /**
   * <pre>
   * [Output only] The resource URLs of [instance
   * groups](/compute/docs/instance-groups/) associated with this
   * node pool.
   * </pre>
   *
   * <code>repeated string instance_group_urls = 102;</code>
   */
  private void setInstanceGroupUrls(
      int index, java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  ensureInstanceGroupUrlsIsMutable();
    instanceGroupUrls_.set(index, value);
  }
  /**
   * <pre>
   * [Output only] The resource URLs of [instance
   * groups](/compute/docs/instance-groups/) associated with this
   * node pool.
   * </pre>
   *
   * <code>repeated string instance_group_urls = 102;</code>
   */
  private void addInstanceGroupUrls(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  ensureInstanceGroupUrlsIsMutable();
    instanceGroupUrls_.add(value);
  }
  /**
   * <pre>
   * [Output only] The resource URLs of [instance
   * groups](/compute/docs/instance-groups/) associated with this
   * node pool.
   * </pre>
   *
   * <code>repeated string instance_group_urls = 102;</code>
   */
  private void addAllInstanceGroupUrls(
      java.lang.Iterable<java.lang.String> values) {
    ensureInstanceGroupUrlsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, instanceGroupUrls_);
  }
  /**
   * <pre>
   * [Output only] The resource URLs of [instance
   * groups](/compute/docs/instance-groups/) associated with this
   * node pool.
   * </pre>
   *
   * <code>repeated string instance_group_urls = 102;</code>
   */
  private void clearInstanceGroupUrls() {
    instanceGroupUrls_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  /**
   * <pre>
   * [Output only] The resource URLs of [instance
   * groups](/compute/docs/instance-groups/) associated with this
   * node pool.
   * </pre>
   *
   * <code>repeated string instance_group_urls = 102;</code>
   */
  private void addInstanceGroupUrlsBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    ensureInstanceGroupUrlsIsMutable();
    instanceGroupUrls_.add(value.toStringUtf8());
  }

  public static final int STATUS_FIELD_NUMBER = 103;
  private int status_;
  /**
   * <pre>
   * [Output only] The status of the nodes in this pool instance.
   * </pre>
   *
   * <code>optional .google.container.v1.NodePool.Status status = 103;</code>
   */
  public int getStatusValue() {
    return status_;
  }
  /**
   * <pre>
   * [Output only] The status of the nodes in this pool instance.
   * </pre>
   *
   * <code>optional .google.container.v1.NodePool.Status status = 103;</code>
   */
  public com.google.container.v1.NodePool.Status getStatus() {
    com.google.container.v1.NodePool.Status result = com.google.container.v1.NodePool.Status.forNumber(status_);
    return result == null ? com.google.container.v1.NodePool.Status.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * [Output only] The status of the nodes in this pool instance.
   * </pre>
   *
   * <code>optional .google.container.v1.NodePool.Status status = 103;</code>
   */
  private void setStatusValue(int value) {
      status_ = value;
  }
  /**
   * <pre>
   * [Output only] The status of the nodes in this pool instance.
   * </pre>
   *
   * <code>optional .google.container.v1.NodePool.Status status = 103;</code>
   */
  private void setStatus(com.google.container.v1.NodePool.Status value) {
    if (value == null) {
      throw new NullPointerException();
    }
    
    status_ = value.getNumber();
  }
  /**
   * <pre>
   * [Output only] The status of the nodes in this pool instance.
   * </pre>
   *
   * <code>optional .google.container.v1.NodePool.Status status = 103;</code>
   */
  private void clearStatus() {
    
    status_ = 0;
  }

  public static final int STATUS_MESSAGE_FIELD_NUMBER = 104;
  private java.lang.String statusMessage_;
  /**
   * <pre>
   * [Output only] Additional information about the current status of this
   * node pool instance, if available.
   * </pre>
   *
   * <code>optional string status_message = 104;</code>
   */
  public java.lang.String getStatusMessage() {
    return statusMessage_;
  }
  /**
   * <pre>
   * [Output only] Additional information about the current status of this
   * node pool instance, if available.
   * </pre>
   *
   * <code>optional string status_message = 104;</code>
   */
  public com.google.protobuf.ByteString
      getStatusMessageBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(statusMessage_);
  }
  /**
   * <pre>
   * [Output only] Additional information about the current status of this
   * node pool instance, if available.
   * </pre>
   *
   * <code>optional string status_message = 104;</code>
   */
  private void setStatusMessage(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    statusMessage_ = value;
  }
  /**
   * <pre>
   * [Output only] Additional information about the current status of this
   * node pool instance, if available.
   * </pre>
   *
   * <code>optional string status_message = 104;</code>
   */
  private void clearStatusMessage() {
    
    statusMessage_ = getDefaultInstance().getStatusMessage();
  }
  /**
   * <pre>
   * [Output only] Additional information about the current status of this
   * node pool instance, if available.
   * </pre>
   *
   * <code>optional string status_message = 104;</code>
   */
  private void setStatusMessageBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    statusMessage_ = value.toStringUtf8();
  }

  public static final int AUTOSCALING_FIELD_NUMBER = 4;
  private com.google.container.v1.NodePoolAutoscaling autoscaling_;
  /**
   * <pre>
   * Autoscaler configuration for this NodePool. Autoscaler is enabled
   * only if a valid configuration is present.
   * </pre>
   *
   * <code>optional .google.container.v1.NodePoolAutoscaling autoscaling = 4;</code>
   */
  public boolean hasAutoscaling() {
    return autoscaling_ != null;
  }
  /**
   * <pre>
   * Autoscaler configuration for this NodePool. Autoscaler is enabled
   * only if a valid configuration is present.
   * </pre>
   *
   * <code>optional .google.container.v1.NodePoolAutoscaling autoscaling = 4;</code>
   */
  public com.google.container.v1.NodePoolAutoscaling getAutoscaling() {
    return autoscaling_ == null ? com.google.container.v1.NodePoolAutoscaling.getDefaultInstance() : autoscaling_;
  }
  /**
   * <pre>
   * Autoscaler configuration for this NodePool. Autoscaler is enabled
   * only if a valid configuration is present.
   * </pre>
   *
   * <code>optional .google.container.v1.NodePoolAutoscaling autoscaling = 4;</code>
   */
  private void setAutoscaling(com.google.container.v1.NodePoolAutoscaling value) {
    if (value == null) {
      throw new NullPointerException();
    }
    autoscaling_ = value;
    
    }
  /**
   * <pre>
   * Autoscaler configuration for this NodePool. Autoscaler is enabled
   * only if a valid configuration is present.
   * </pre>
   *
   * <code>optional .google.container.v1.NodePoolAutoscaling autoscaling = 4;</code>
   */
  private void setAutoscaling(
      com.google.container.v1.NodePoolAutoscaling.Builder builderForValue) {
    autoscaling_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * Autoscaler configuration for this NodePool. Autoscaler is enabled
   * only if a valid configuration is present.
   * </pre>
   *
   * <code>optional .google.container.v1.NodePoolAutoscaling autoscaling = 4;</code>
   */
  private void mergeAutoscaling(com.google.container.v1.NodePoolAutoscaling value) {
    if (autoscaling_ != null &&
        autoscaling_ != com.google.container.v1.NodePoolAutoscaling.getDefaultInstance()) {
      autoscaling_ =
        com.google.container.v1.NodePoolAutoscaling.newBuilder(autoscaling_).mergeFrom(value).buildPartial();
    } else {
      autoscaling_ = value;
    }
    
  }
  /**
   * <pre>
   * Autoscaler configuration for this NodePool. Autoscaler is enabled
   * only if a valid configuration is present.
   * </pre>
   *
   * <code>optional .google.container.v1.NodePoolAutoscaling autoscaling = 4;</code>
   */
  private void clearAutoscaling() {  autoscaling_ = null;
    
  }

  public static final int MANAGEMENT_FIELD_NUMBER = 5;
  private com.google.container.v1.NodeManagement management_;
  /**
   * <pre>
   * NodeManagement configuration for this NodePool.
   * </pre>
   *
   * <code>optional .google.container.v1.NodeManagement management = 5;</code>
   */
  public boolean hasManagement() {
    return management_ != null;
  }
  /**
   * <pre>
   * NodeManagement configuration for this NodePool.
   * </pre>
   *
   * <code>optional .google.container.v1.NodeManagement management = 5;</code>
   */
  public com.google.container.v1.NodeManagement getManagement() {
    return management_ == null ? com.google.container.v1.NodeManagement.getDefaultInstance() : management_;
  }
  /**
   * <pre>
   * NodeManagement configuration for this NodePool.
   * </pre>
   *
   * <code>optional .google.container.v1.NodeManagement management = 5;</code>
   */
  private void setManagement(com.google.container.v1.NodeManagement value) {
    if (value == null) {
      throw new NullPointerException();
    }
    management_ = value;
    
    }
  /**
   * <pre>
   * NodeManagement configuration for this NodePool.
   * </pre>
   *
   * <code>optional .google.container.v1.NodeManagement management = 5;</code>
   */
  private void setManagement(
      com.google.container.v1.NodeManagement.Builder builderForValue) {
    management_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * NodeManagement configuration for this NodePool.
   * </pre>
   *
   * <code>optional .google.container.v1.NodeManagement management = 5;</code>
   */
  private void mergeManagement(com.google.container.v1.NodeManagement value) {
    if (management_ != null &&
        management_ != com.google.container.v1.NodeManagement.getDefaultInstance()) {
      management_ =
        com.google.container.v1.NodeManagement.newBuilder(management_).mergeFrom(value).buildPartial();
    } else {
      management_ = value;
    }
    
  }
  /**
   * <pre>
   * NodeManagement configuration for this NodePool.
   * </pre>
   *
   * <code>optional .google.container.v1.NodeManagement management = 5;</code>
   */
  private void clearManagement() {  management_ = null;
    
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!name_.isEmpty()) {
      output.writeString(1, getName());
    }
    if (config_ != null) {
      output.writeMessage(2, getConfig());
    }
    if (initialNodeCount_ != 0) {
      output.writeInt32(3, initialNodeCount_);
    }
    if (autoscaling_ != null) {
      output.writeMessage(4, getAutoscaling());
    }
    if (management_ != null) {
      output.writeMessage(5, getManagement());
    }
    if (!selfLink_.isEmpty()) {
      output.writeString(100, getSelfLink());
    }
    if (!version_.isEmpty()) {
      output.writeString(101, getVersion());
    }
    for (int i = 0; i < instanceGroupUrls_.size(); i++) {
      output.writeString(102, instanceGroupUrls_.get(i));
    }
    if (status_ != com.google.container.v1.NodePool.Status.STATUS_UNSPECIFIED.getNumber()) {
      output.writeEnum(103, status_);
    }
    if (!statusMessage_.isEmpty()) {
      output.writeString(104, getStatusMessage());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (!name_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getName());
    }
    if (config_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getConfig());
    }
    if (initialNodeCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, initialNodeCount_);
    }
    if (autoscaling_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getAutoscaling());
    }
    if (management_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getManagement());
    }
    if (!selfLink_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(100, getSelfLink());
    }
    if (!version_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(101, getVersion());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < instanceGroupUrls_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeStringSizeNoTag(instanceGroupUrls_.get(i));
      }
      size += dataSize;
      size += 2 * getInstanceGroupUrlsList().size();
    }
    if (status_ != com.google.container.v1.NodePool.Status.STATUS_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(103, status_);
    }
    if (!statusMessage_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(104, getStatusMessage());
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.google.container.v1.NodePool parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.container.v1.NodePool parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.container.v1.NodePool parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.container.v1.NodePool parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.container.v1.NodePool parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.container.v1.NodePool parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.container.v1.NodePool parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.container.v1.NodePool parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.container.v1.NodePool parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.container.v1.NodePool parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.container.v1.NodePool prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * NodePool contains the name and configuration for a cluster's node pool.
   * Node pools are a set of nodes (i.e. VM's), with a common configuration and
   * specification, under the control of the cluster master. They may have a set
   * of Kubernetes labels applied to them, which may be used to reference them
   * during pod scheduling. They may also be resized up or down, to accommodate
   * the workload.
   * </pre>
   *
   * Protobuf type {@code google.container.v1.NodePool}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.container.v1.NodePool, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.container.v1.NodePool)
      com.google.container.v1.NodePoolOrBuilder {
    // Construct using com.google.container.v1.NodePool.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The name of the node pool.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      return instance.getName();
    }
    /**
     * <pre>
     * The name of the node pool.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return instance.getNameBytes();
    }
    /**
     * <pre>
     * The name of the node pool.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public Builder setName(
        java.lang.String value) {
      copyOnWrite();
      instance.setName(value);
      return this;
    }
    /**
     * <pre>
     * The name of the node pool.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public Builder clearName() {
      copyOnWrite();
      instance.clearName();
      return this;
    }
    /**
     * <pre>
     * The name of the node pool.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * The node configuration of the pool.
     * </pre>
     *
     * <code>optional .google.container.v1.NodeConfig config = 2;</code>
     */
    public boolean hasConfig() {
      return instance.hasConfig();
    }
    /**
     * <pre>
     * The node configuration of the pool.
     * </pre>
     *
     * <code>optional .google.container.v1.NodeConfig config = 2;</code>
     */
    public com.google.container.v1.NodeConfig getConfig() {
      return instance.getConfig();
    }
    /**
     * <pre>
     * The node configuration of the pool.
     * </pre>
     *
     * <code>optional .google.container.v1.NodeConfig config = 2;</code>
     */
    public Builder setConfig(com.google.container.v1.NodeConfig value) {
      copyOnWrite();
      instance.setConfig(value);
      return this;
      }
    /**
     * <pre>
     * The node configuration of the pool.
     * </pre>
     *
     * <code>optional .google.container.v1.NodeConfig config = 2;</code>
     */
    public Builder setConfig(
        com.google.container.v1.NodeConfig.Builder builderForValue) {
      copyOnWrite();
      instance.setConfig(builderForValue);
      return this;
    }
    /**
     * <pre>
     * The node configuration of the pool.
     * </pre>
     *
     * <code>optional .google.container.v1.NodeConfig config = 2;</code>
     */
    public Builder mergeConfig(com.google.container.v1.NodeConfig value) {
      copyOnWrite();
      instance.mergeConfig(value);
      return this;
    }
    /**
     * <pre>
     * The node configuration of the pool.
     * </pre>
     *
     * <code>optional .google.container.v1.NodeConfig config = 2;</code>
     */
    public Builder clearConfig() {  copyOnWrite();
      instance.clearConfig();
      return this;
    }

    /**
     * <pre>
     * The initial node count for the pool. You must ensure that your
     * Compute Engine &lt;a href="/compute/docs/resource-quotas"&gt;resource quota&lt;/a&gt;
     * is sufficient for this number of instances. You must also have available
     * firewall and routes quota.
     * </pre>
     *
     * <code>optional int32 initial_node_count = 3;</code>
     */
    public int getInitialNodeCount() {
      return instance.getInitialNodeCount();
    }
    /**
     * <pre>
     * The initial node count for the pool. You must ensure that your
     * Compute Engine &lt;a href="/compute/docs/resource-quotas"&gt;resource quota&lt;/a&gt;
     * is sufficient for this number of instances. You must also have available
     * firewall and routes quota.
     * </pre>
     *
     * <code>optional int32 initial_node_count = 3;</code>
     */
    public Builder setInitialNodeCount(int value) {
      copyOnWrite();
      instance.setInitialNodeCount(value);
      return this;
    }
    /**
     * <pre>
     * The initial node count for the pool. You must ensure that your
     * Compute Engine &lt;a href="/compute/docs/resource-quotas"&gt;resource quota&lt;/a&gt;
     * is sufficient for this number of instances. You must also have available
     * firewall and routes quota.
     * </pre>
     *
     * <code>optional int32 initial_node_count = 3;</code>
     */
    public Builder clearInitialNodeCount() {
      copyOnWrite();
      instance.clearInitialNodeCount();
      return this;
    }

    /**
     * <pre>
     * [Output only] Server-defined URL for the resource.
     * </pre>
     *
     * <code>optional string self_link = 100;</code>
     */
    public java.lang.String getSelfLink() {
      return instance.getSelfLink();
    }
    /**
     * <pre>
     * [Output only] Server-defined URL for the resource.
     * </pre>
     *
     * <code>optional string self_link = 100;</code>
     */
    public com.google.protobuf.ByteString
        getSelfLinkBytes() {
      return instance.getSelfLinkBytes();
    }
    /**
     * <pre>
     * [Output only] Server-defined URL for the resource.
     * </pre>
     *
     * <code>optional string self_link = 100;</code>
     */
    public Builder setSelfLink(
        java.lang.String value) {
      copyOnWrite();
      instance.setSelfLink(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] Server-defined URL for the resource.
     * </pre>
     *
     * <code>optional string self_link = 100;</code>
     */
    public Builder clearSelfLink() {
      copyOnWrite();
      instance.clearSelfLink();
      return this;
    }
    /**
     * <pre>
     * [Output only] Server-defined URL for the resource.
     * </pre>
     *
     * <code>optional string self_link = 100;</code>
     */
    public Builder setSelfLinkBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSelfLinkBytes(value);
      return this;
    }

    /**
     * <pre>
     * [Output only] The version of the Kubernetes of this node.
     * </pre>
     *
     * <code>optional string version = 101;</code>
     */
    public java.lang.String getVersion() {
      return instance.getVersion();
    }
    /**
     * <pre>
     * [Output only] The version of the Kubernetes of this node.
     * </pre>
     *
     * <code>optional string version = 101;</code>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      return instance.getVersionBytes();
    }
    /**
     * <pre>
     * [Output only] The version of the Kubernetes of this node.
     * </pre>
     *
     * <code>optional string version = 101;</code>
     */
    public Builder setVersion(
        java.lang.String value) {
      copyOnWrite();
      instance.setVersion(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] The version of the Kubernetes of this node.
     * </pre>
     *
     * <code>optional string version = 101;</code>
     */
    public Builder clearVersion() {
      copyOnWrite();
      instance.clearVersion();
      return this;
    }
    /**
     * <pre>
     * [Output only] The version of the Kubernetes of this node.
     * </pre>
     *
     * <code>optional string version = 101;</code>
     */
    public Builder setVersionBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setVersionBytes(value);
      return this;
    }

    /**
     * <pre>
     * [Output only] The resource URLs of [instance
     * groups](/compute/docs/instance-groups/) associated with this
     * node pool.
     * </pre>
     *
     * <code>repeated string instance_group_urls = 102;</code>
     */
    public java.util.List<String>
        getInstanceGroupUrlsList() {
      return java.util.Collections.unmodifiableList(
          instance.getInstanceGroupUrlsList());
    }
    /**
     * <pre>
     * [Output only] The resource URLs of [instance
     * groups](/compute/docs/instance-groups/) associated with this
     * node pool.
     * </pre>
     *
     * <code>repeated string instance_group_urls = 102;</code>
     */
    public int getInstanceGroupUrlsCount() {
      return instance.getInstanceGroupUrlsCount();
    }
    /**
     * <pre>
     * [Output only] The resource URLs of [instance
     * groups](/compute/docs/instance-groups/) associated with this
     * node pool.
     * </pre>
     *
     * <code>repeated string instance_group_urls = 102;</code>
     */
    public java.lang.String getInstanceGroupUrls(int index) {
      return instance.getInstanceGroupUrls(index);
    }
    /**
     * <pre>
     * [Output only] The resource URLs of [instance
     * groups](/compute/docs/instance-groups/) associated with this
     * node pool.
     * </pre>
     *
     * <code>repeated string instance_group_urls = 102;</code>
     */
    public com.google.protobuf.ByteString
        getInstanceGroupUrlsBytes(int index) {
      return instance.getInstanceGroupUrlsBytes(index);
    }
    /**
     * <pre>
     * [Output only] The resource URLs of [instance
     * groups](/compute/docs/instance-groups/) associated with this
     * node pool.
     * </pre>
     *
     * <code>repeated string instance_group_urls = 102;</code>
     */
    public Builder setInstanceGroupUrls(
        int index, java.lang.String value) {
      copyOnWrite();
      instance.setInstanceGroupUrls(index, value);
      return this;
    }
    /**
     * <pre>
     * [Output only] The resource URLs of [instance
     * groups](/compute/docs/instance-groups/) associated with this
     * node pool.
     * </pre>
     *
     * <code>repeated string instance_group_urls = 102;</code>
     */
    public Builder addInstanceGroupUrls(
        java.lang.String value) {
      copyOnWrite();
      instance.addInstanceGroupUrls(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] The resource URLs of [instance
     * groups](/compute/docs/instance-groups/) associated with this
     * node pool.
     * </pre>
     *
     * <code>repeated string instance_group_urls = 102;</code>
     */
    public Builder addAllInstanceGroupUrls(
        java.lang.Iterable<java.lang.String> values) {
      copyOnWrite();
      instance.addAllInstanceGroupUrls(values);
      return this;
    }
    /**
     * <pre>
     * [Output only] The resource URLs of [instance
     * groups](/compute/docs/instance-groups/) associated with this
     * node pool.
     * </pre>
     *
     * <code>repeated string instance_group_urls = 102;</code>
     */
    public Builder clearInstanceGroupUrls() {
      copyOnWrite();
      instance.clearInstanceGroupUrls();
      return this;
    }
    /**
     * <pre>
     * [Output only] The resource URLs of [instance
     * groups](/compute/docs/instance-groups/) associated with this
     * node pool.
     * </pre>
     *
     * <code>repeated string instance_group_urls = 102;</code>
     */
    public Builder addInstanceGroupUrlsBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.addInstanceGroupUrlsBytes(value);
      return this;
    }

    /**
     * <pre>
     * [Output only] The status of the nodes in this pool instance.
     * </pre>
     *
     * <code>optional .google.container.v1.NodePool.Status status = 103;</code>
     */
    public int getStatusValue() {
      return instance.getStatusValue();
    }
    /**
     * <pre>
     * [Output only] The status of the nodes in this pool instance.
     * </pre>
     *
     * <code>optional .google.container.v1.NodePool.Status status = 103;</code>
     */
    public Builder setStatusValue(int value) {
      copyOnWrite();
      instance.setStatusValue(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] The status of the nodes in this pool instance.
     * </pre>
     *
     * <code>optional .google.container.v1.NodePool.Status status = 103;</code>
     */
    public com.google.container.v1.NodePool.Status getStatus() {
      return instance.getStatus();
    }
    /**
     * <pre>
     * [Output only] The status of the nodes in this pool instance.
     * </pre>
     *
     * <code>optional .google.container.v1.NodePool.Status status = 103;</code>
     */
    public Builder setStatus(com.google.container.v1.NodePool.Status value) {
      copyOnWrite();
      instance.setStatus(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] The status of the nodes in this pool instance.
     * </pre>
     *
     * <code>optional .google.container.v1.NodePool.Status status = 103;</code>
     */
    public Builder clearStatus() {
      copyOnWrite();
      instance.clearStatus();
      return this;
    }

    /**
     * <pre>
     * [Output only] Additional information about the current status of this
     * node pool instance, if available.
     * </pre>
     *
     * <code>optional string status_message = 104;</code>
     */
    public java.lang.String getStatusMessage() {
      return instance.getStatusMessage();
    }
    /**
     * <pre>
     * [Output only] Additional information about the current status of this
     * node pool instance, if available.
     * </pre>
     *
     * <code>optional string status_message = 104;</code>
     */
    public com.google.protobuf.ByteString
        getStatusMessageBytes() {
      return instance.getStatusMessageBytes();
    }
    /**
     * <pre>
     * [Output only] Additional information about the current status of this
     * node pool instance, if available.
     * </pre>
     *
     * <code>optional string status_message = 104;</code>
     */
    public Builder setStatusMessage(
        java.lang.String value) {
      copyOnWrite();
      instance.setStatusMessage(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] Additional information about the current status of this
     * node pool instance, if available.
     * </pre>
     *
     * <code>optional string status_message = 104;</code>
     */
    public Builder clearStatusMessage() {
      copyOnWrite();
      instance.clearStatusMessage();
      return this;
    }
    /**
     * <pre>
     * [Output only] Additional information about the current status of this
     * node pool instance, if available.
     * </pre>
     *
     * <code>optional string status_message = 104;</code>
     */
    public Builder setStatusMessageBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setStatusMessageBytes(value);
      return this;
    }

    /**
     * <pre>
     * Autoscaler configuration for this NodePool. Autoscaler is enabled
     * only if a valid configuration is present.
     * </pre>
     *
     * <code>optional .google.container.v1.NodePoolAutoscaling autoscaling = 4;</code>
     */
    public boolean hasAutoscaling() {
      return instance.hasAutoscaling();
    }
    /**
     * <pre>
     * Autoscaler configuration for this NodePool. Autoscaler is enabled
     * only if a valid configuration is present.
     * </pre>
     *
     * <code>optional .google.container.v1.NodePoolAutoscaling autoscaling = 4;</code>
     */
    public com.google.container.v1.NodePoolAutoscaling getAutoscaling() {
      return instance.getAutoscaling();
    }
    /**
     * <pre>
     * Autoscaler configuration for this NodePool. Autoscaler is enabled
     * only if a valid configuration is present.
     * </pre>
     *
     * <code>optional .google.container.v1.NodePoolAutoscaling autoscaling = 4;</code>
     */
    public Builder setAutoscaling(com.google.container.v1.NodePoolAutoscaling value) {
      copyOnWrite();
      instance.setAutoscaling(value);
      return this;
      }
    /**
     * <pre>
     * Autoscaler configuration for this NodePool. Autoscaler is enabled
     * only if a valid configuration is present.
     * </pre>
     *
     * <code>optional .google.container.v1.NodePoolAutoscaling autoscaling = 4;</code>
     */
    public Builder setAutoscaling(
        com.google.container.v1.NodePoolAutoscaling.Builder builderForValue) {
      copyOnWrite();
      instance.setAutoscaling(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Autoscaler configuration for this NodePool. Autoscaler is enabled
     * only if a valid configuration is present.
     * </pre>
     *
     * <code>optional .google.container.v1.NodePoolAutoscaling autoscaling = 4;</code>
     */
    public Builder mergeAutoscaling(com.google.container.v1.NodePoolAutoscaling value) {
      copyOnWrite();
      instance.mergeAutoscaling(value);
      return this;
    }
    /**
     * <pre>
     * Autoscaler configuration for this NodePool. Autoscaler is enabled
     * only if a valid configuration is present.
     * </pre>
     *
     * <code>optional .google.container.v1.NodePoolAutoscaling autoscaling = 4;</code>
     */
    public Builder clearAutoscaling() {  copyOnWrite();
      instance.clearAutoscaling();
      return this;
    }

    /**
     * <pre>
     * NodeManagement configuration for this NodePool.
     * </pre>
     *
     * <code>optional .google.container.v1.NodeManagement management = 5;</code>
     */
    public boolean hasManagement() {
      return instance.hasManagement();
    }
    /**
     * <pre>
     * NodeManagement configuration for this NodePool.
     * </pre>
     *
     * <code>optional .google.container.v1.NodeManagement management = 5;</code>
     */
    public com.google.container.v1.NodeManagement getManagement() {
      return instance.getManagement();
    }
    /**
     * <pre>
     * NodeManagement configuration for this NodePool.
     * </pre>
     *
     * <code>optional .google.container.v1.NodeManagement management = 5;</code>
     */
    public Builder setManagement(com.google.container.v1.NodeManagement value) {
      copyOnWrite();
      instance.setManagement(value);
      return this;
      }
    /**
     * <pre>
     * NodeManagement configuration for this NodePool.
     * </pre>
     *
     * <code>optional .google.container.v1.NodeManagement management = 5;</code>
     */
    public Builder setManagement(
        com.google.container.v1.NodeManagement.Builder builderForValue) {
      copyOnWrite();
      instance.setManagement(builderForValue);
      return this;
    }
    /**
     * <pre>
     * NodeManagement configuration for this NodePool.
     * </pre>
     *
     * <code>optional .google.container.v1.NodeManagement management = 5;</code>
     */
    public Builder mergeManagement(com.google.container.v1.NodeManagement value) {
      copyOnWrite();
      instance.mergeManagement(value);
      return this;
    }
    /**
     * <pre>
     * NodeManagement configuration for this NodePool.
     * </pre>
     *
     * <code>optional .google.container.v1.NodeManagement management = 5;</code>
     */
    public Builder clearManagement() {  copyOnWrite();
      instance.clearManagement();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.container.v1.NodePool)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.container.v1.NodePool();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        instanceGroupUrls_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.google.container.v1.NodePool other = (com.google.container.v1.NodePool) arg1;
        name_ = visitor.visitString(!name_.isEmpty(), name_,
            !other.name_.isEmpty(), other.name_);
        config_ = visitor.visitMessage(config_, other.config_);
        initialNodeCount_ = visitor.visitInt(initialNodeCount_ != 0, initialNodeCount_,
            other.initialNodeCount_ != 0, other.initialNodeCount_);
        selfLink_ = visitor.visitString(!selfLink_.isEmpty(), selfLink_,
            !other.selfLink_.isEmpty(), other.selfLink_);
        version_ = visitor.visitString(!version_.isEmpty(), version_,
            !other.version_.isEmpty(), other.version_);
        instanceGroupUrls_= visitor.visitList(instanceGroupUrls_, other.instanceGroupUrls_);
        status_ = visitor.visitInt(status_ != 0, status_,    other.status_ != 0, other.status_);
        statusMessage_ = visitor.visitString(!statusMessage_.isEmpty(), statusMessage_,
            !other.statusMessage_.isEmpty(), other.statusMessage_);
        autoscaling_ = visitor.visitMessage(autoscaling_, other.autoscaling_);
        management_ = visitor.visitMessage(management_, other.management_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              case 18: {
                com.google.container.v1.NodeConfig.Builder subBuilder = null;
                if (config_ != null) {
                  subBuilder = config_.toBuilder();
                }
                config_ = input.readMessage(com.google.container.v1.NodeConfig.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(config_);
                  config_ = subBuilder.buildPartial();
                }

                break;
              }
              case 24: {

                initialNodeCount_ = input.readInt32();
                break;
              }
              case 34: {
                com.google.container.v1.NodePoolAutoscaling.Builder subBuilder = null;
                if (autoscaling_ != null) {
                  subBuilder = autoscaling_.toBuilder();
                }
                autoscaling_ = input.readMessage(com.google.container.v1.NodePoolAutoscaling.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(autoscaling_);
                  autoscaling_ = subBuilder.buildPartial();
                }

                break;
              }
              case 42: {
                com.google.container.v1.NodeManagement.Builder subBuilder = null;
                if (management_ != null) {
                  subBuilder = management_.toBuilder();
                }
                management_ = input.readMessage(com.google.container.v1.NodeManagement.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(management_);
                  management_ = subBuilder.buildPartial();
                }

                break;
              }
              case 802: {
                String s = input.readStringRequireUtf8();

                selfLink_ = s;
                break;
              }
              case 810: {
                String s = input.readStringRequireUtf8();

                version_ = s;
                break;
              }
              case 818: {
                String s = input.readStringRequireUtf8();
                if (!instanceGroupUrls_.isModifiable()) {
                  instanceGroupUrls_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(instanceGroupUrls_);
                }
                instanceGroupUrls_.add(s);
                break;
              }
              case 824: {
                int rawValue = input.readEnum();

                status_ = rawValue;
                break;
              }
              case 834: {
                String s = input.readStringRequireUtf8();

                statusMessage_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.google.container.v1.NodePool.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.container.v1.NodePool)
  private static final com.google.container.v1.NodePool DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new NodePool();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.google.container.v1.NodePool getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<NodePool> PARSER;

  public static com.google.protobuf.Parser<NodePool> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

